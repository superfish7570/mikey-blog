import React from 'react';
import { QrCodeResponse } from './hooks/usePostQrCode';
import { CodeStatus, UiQrProps } from './UiQrCode';
/**
 * 二维码不同状态下的底部描述文字
 */
export declare type CodeStatusDescriptions = Partial<Record<Exclude<CodeStatus, 'loading'>, React.ReactNode | ((referQrCode?: () => void) => React.ReactNode)>>;
export interface WorkQrCodeRef {
    referQrCode: () => Promise<{
        random: string;
        url: string;
    } | undefined>;
}
interface WorkQrCodeProps extends Omit<UiQrProps, 'description' | 'status'> {
    /**
     * 二维码场景
     */
    scene: 'WXAPP_AUTH' | 'APP_AUTH' | 'WECHATMP_AUTH';
    /**
     * 不同状态请求文字
     */
    descriptions: CodeStatusDescriptions;
    /**
     * 睡眠时间 默认 1000
     */
    sleepTime?: number;
    /**
     * 每当状态变化时，触发的 callback 。
     */
    onStatusChange?: (status: CodeStatus, data: QrCodeResponse) => void;
    /**
     * 不同状态下点击遮罩中间区域方法
     */
    onClickMaskContent?: (status: CodeStatus) => void;
    /**
     * 不同二维码下生成配置
     */
    qrCodeScanOptions?: any;
}
declare const WorkQrCode: React.ForwardRefExoticComponent<WorkQrCodeProps & React.RefAttributes<any>>;
export { WorkQrCode };

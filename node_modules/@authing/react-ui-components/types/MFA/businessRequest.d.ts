export declare enum MfaBusinessAction {
    VerifyEmail = "verify-email",
    VerifySms = "verify-sms",
    VerifyTotp = "verify-totp",
    VerifyFace = "verify-face",
    AssociateFace = "associate-face"
}
export declare const authFlow: (action: MfaBusinessAction, content: any) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
interface VerifySmsContent {
    phone: string;
    code: string;
    mfaToken?: string;
    phoneCountryCode?: string;
}
interface VerifyEmailContent {
    email: string;
    code: string;
    mfaToken?: string;
}
interface VerifyTotpContent {
    totp: string;
    mfaToken?: string;
}
interface VerifyFaceContent {
    photo: string;
    mfaToken?: string;
}
interface AssociateFaceContent {
    photoA: string;
    photoB: string;
    isExternalPhoto?: boolean;
    mfaToken?: string;
}
export declare const VerifyEmail: (content: VerifyEmailContent) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
export declare const VerifySms: (content: VerifySmsContent) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
export declare const VerifyTotp: (content: VerifyTotpContent) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
export declare const VerifyFace: (content: VerifyFaceContent) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
export declare const AssociateFace: (content: AssociateFaceContent) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
export declare const useMfaBusinessRequest: () => {
    "verify-email": (content: VerifyEmailContent) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
    "verify-sms": (content: VerifySmsContent) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
    "verify-totp": (content: VerifyTotpContent) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
    "verify-face": (content: VerifyFaceContent) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
    "associate-face": (content: AssociateFaceContent) => Promise<import("../_utils/http").AuthingGuardResponse<any>>;
};
export {};

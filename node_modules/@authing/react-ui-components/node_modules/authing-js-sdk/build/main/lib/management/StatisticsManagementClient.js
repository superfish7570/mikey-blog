"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatisticsManagementClient = void 0;
/**
 * @class StatisticsManagementClient 管理日志统计信息
 * @name StatisticsManagementClient
 * @description 管理日志统计信息
 *
 * @example
 *
 * 请使用以下方式使用该模块：
 * \`\`\`javascript
 * import { StatisticsManagementClient } from "authing-js-sdk"
 * const managementClient = new ManagementClient({
 *    userPoolId: "YOUR_USERPOOL_ID",
 *    secret: "YOUR_USERPOOL_SECRET",
 * })
 * managementClient.statistics.listUserActions // 查看用户操作日志
 * managementClient.statistics.listAuditLogs // 查看审计日志
 * \`\`\`
 *
 */
var StatisticsManagementClient = /** @class */ (function () {
    function StatisticsManagementClient(options, httpClient, tokenProvider) {
        this.options = options;
        this.httpClient = httpClient;
        this.tokenProvider = tokenProvider;
    }
    /**
     * 查看用户操作日志
     * @param options.operationNames SupportedUserActionEnum
     */
    StatisticsManagementClient.prototype.listUserActions = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var requestParam, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        requestParam = {};
                        if (options === null || options === void 0 ? void 0 : options.clientIp) {
                            requestParam.clientip = options.clientIp;
                        }
                        if (options === null || options === void 0 ? void 0 : options.eventType) {
                            requestParam.eventType = options.eventType;
                        }
                        if (options === null || options === void 0 ? void 0 : options.userId) {
                            requestParam.userId = options.userId;
                        }
                        if (options === null || options === void 0 ? void 0 : options.appId) {
                            requestParam.app_id = options === null || options === void 0 ? void 0 : options.appId;
                        }
                        if (options === null || options === void 0 ? void 0 : options.page) {
                            requestParam.page = options.page;
                        }
                        if (options === null || options === void 0 ? void 0 : options.limit) {
                            requestParam.limit = options.limit;
                        }
                        if ((options === null || options === void 0 ? void 0 : options.start) !== undefined) {
                            requestParam.start = options === null || options === void 0 ? void 0 : options.start;
                        }
                        if ((options === null || options === void 0 ? void 0 : options.end) !== undefined) {
                            requestParam.end = options === null || options === void 0 ? void 0 : options.end;
                        }
                        return [4 /*yield*/, this.httpClient.request({
                                method: 'GET',
                                url: this.options.host + "/api/v2/analysis/user-action",
                                params: __assign({}, requestParam)
                            })];
                    case 1:
                        result = _a.sent();
                        return [2 /*return*/, result];
                }
            });
        });
    };
    /**
     * 查看审计日志
     * @param options.operationNames  SupportedAdminActionEnum
     */
    StatisticsManagementClient.prototype.listAuditLogs = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var requestParam, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        requestParam = {};
                        if (options === null || options === void 0 ? void 0 : options.clientIp) {
                            requestParam.clientip = options.clientIp;
                        }
                        if (options === null || options === void 0 ? void 0 : options.eventType) {
                            requestParam.eventType = options.eventType;
                        }
                        if (options === null || options === void 0 ? void 0 : options.userId) {
                            requestParam.userId = options.userId;
                        }
                        if (options === null || options === void 0 ? void 0 : options.appId) {
                            requestParam.app_id = options === null || options === void 0 ? void 0 : options.appId;
                        }
                        if (options === null || options === void 0 ? void 0 : options.page) {
                            requestParam.page = options.page;
                        }
                        if (options === null || options === void 0 ? void 0 : options.limit) {
                            requestParam.limit = options.limit;
                        }
                        if ((options === null || options === void 0 ? void 0 : options.start) !== undefined) {
                            requestParam.start = options === null || options === void 0 ? void 0 : options.start;
                        }
                        if ((options === null || options === void 0 ? void 0 : options.end) !== undefined) {
                            requestParam.end = options === null || options === void 0 ? void 0 : options.end;
                        }
                        return [4 /*yield*/, this.httpClient.request({
                                method: 'GET',
                                url: this.options.host + "/api/v2/analysis/audit",
                                params: __assign({}, requestParam)
                            })];
                    case 1:
                        result = _a.sent();
                        return [2 /*return*/, result];
                }
            });
        });
    };
    return StatisticsManagementClient;
}());
exports.StatisticsManagementClient = StatisticsManagementClient;
//# sourceMappingURL=StatisticsManagementClient.js.map
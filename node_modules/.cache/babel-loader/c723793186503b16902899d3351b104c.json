{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { BigInteger } from 'jsbn';\n\nfunction bigintToValue(bigint) {\n  var h = bigint.toString(16);\n\n  if (h[0] !== '-') {\n    // 正数\n    if (h.length % 2 === 1) h = '0' + h; // 补齐到整字节\n    else if (!h.match(/^[0-7]/)) h = '00' + h; // 非0开头，则补一个全0字节\n  } else {\n    // 负数\n    h = h.substr(1);\n    var len = h.length;\n    if (len % 2 === 1) len += 1; // 补齐到整字节\n    else if (!h.match(/^[0-7]/)) len += 2; // 非0开头，则补一个全0字节\n\n    var mask = '';\n\n    for (var i = 0; i < len; i++) {\n      mask += 'f';\n    }\n\n    mask = new BigInteger(mask, 16); // 对绝对值取反，加1\n\n    h = mask.xor(bigint).add(BigInteger.ONE);\n    h = h.toString(16).replace(/^-/, '');\n  }\n\n  return h;\n}\n\nvar ASN1Object =\n/** @class */\nfunction () {\n  function ASN1Object() {\n    this.tlv = null;\n    this.t = '00';\n    this.l = '00';\n    this.v = '';\n  }\n  /**\n   * 获取 der 编码比特流16进制串\n   */\n\n\n  ASN1Object.prototype.getEncodedHex = function () {\n    if (!this.tlv) {\n      this.v = this.getValue();\n      this.l = this.getLength();\n      this.tlv = this.t + this.l + this.v;\n    }\n\n    return this.tlv;\n  };\n\n  ASN1Object.prototype.getLength = function () {\n    var n = this.v.length / 2; // 字节数\n\n    var nHex = n.toString(16);\n    if (nHex.length % 2 === 1) nHex = '0' + nHex; // 补齐到整字节\n\n    if (n < 128) {\n      // 短格式，以 0 开头\n      return nHex;\n    } else {\n      // 长格式，以 1 开头\n      var head = 128 + nHex.length / 2; // 1(1位) + 真正的长度占用字节数(7位) + 真正的长度\n\n      return head.toString(16) + nHex;\n    }\n  };\n\n  ASN1Object.prototype.getValue = function () {\n    return '';\n  };\n\n  return ASN1Object;\n}();\n\nvar DERInteger =\n/** @class */\nfunction (_super) {\n  __extends(DERInteger, _super);\n\n  function DERInteger(bigint) {\n    var _this = _super.call(this) || this;\n\n    _this.t = '02'; // 整型标签说明\n\n    if (bigint) _this.v = bigintToValue(bigint);\n    return _this;\n  }\n\n  DERInteger.prototype.getValue = function () {\n    return this.v;\n  };\n\n  return DERInteger;\n}(ASN1Object);\n\nvar DERSequence =\n/** @class */\nfunction (_super) {\n  __extends(DERSequence, _super);\n\n  function DERSequence(asn1Array) {\n    var _this = _super.call(this) || this;\n\n    _this.t = '30'; // 序列标签说明\n\n    _this.asn1Array = asn1Array;\n    return _this;\n  }\n\n  DERSequence.prototype.getValue = function () {\n    this.v = this.asn1Array.map(function (asn1Object) {\n      return asn1Object.getEncodedHex();\n    }).join('');\n    return this.v;\n  };\n\n  return DERSequence;\n}(ASN1Object);\n/**\n * 获取 l 占用字节数\n */\n\n\nfunction getLenOfL(str, start) {\n  if (+str[start + 2] < 8) return 1; // l 以0开头，则表示短格式，只占一个字节\n\n  return +str.substr(start + 2, 2) & 0x7f + 1; // 长格式，取第一个字节后7位作为长度真正占用字节数，再加上本身\n}\n/**\n * 获取 l\n */\n\n\nfunction getL(str, start) {\n  // 获取 l\n  var len = getLenOfL(str, start);\n  var l = str.substr(start + 2, len * 2);\n  if (!l) return -1;\n  var bigint = +l[0] < 8 ? new BigInteger(l, 16) : new BigInteger(l.substr(2), 16);\n  return bigint.intValue();\n}\n/**\n * 获取 v 的位置\n */\n\n\nfunction getStartOfV(str, start) {\n  var len = getLenOfL(str, start);\n  return start + (len + 1) * 2;\n}\n/**\n * ASN.1 der 编码，针对 sm2 签名\n */\n\n\nfunction encodeDer(r, s) {\n  var derR = new DERInteger(r);\n  var derS = new DERInteger(s);\n  var derSeq = new DERSequence([derR, derS]);\n  return derSeq.getEncodedHex();\n}\n/**\n * 解析 ASN.1 der，针对 sm2 验签\n */\n\n\nfunction decodeDer(input) {\n  // 结构：\n  // input = | tSeq | lSeq | vSeq |\n  // vSeq = | tR | lR | vR | tS | lS | vS |\n  var start = getStartOfV(input, 0);\n  var vIndexR = getStartOfV(input, start);\n  var lR = getL(input, start);\n  var vR = input.substr(vIndexR, lR * 2);\n  var nextStart = vIndexR + vR.length;\n  var vIndexS = getStartOfV(input, nextStart);\n  var lS = getL(input, nextStart);\n  var vS = input.substr(vIndexS, lS * 2);\n  var r = new BigInteger(vR, 16);\n  var s = new BigInteger(vS, 16);\n  return {\n    r: r,\n    s: s\n  };\n}\n\nexport { encodeDer, decodeDer };","map":{"version":3,"sources":["../../../../../src/lib/sm-crypto/sm2/asn1.js"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { BigInteger } from 'jsbn';\nfunction bigintToValue(bigint) {\n    var h = bigint.toString(16);\n    if (h[0] !== '-') {\n        // 正数\n        if (h.length % 2 === 1)\n            h = '0' + h;\n        // 补齐到整字节\n        else if (!h.match(/^[0-7]/))\n            h = '00' + h; // 非0开头，则补一个全0字节\n    }\n    else {\n        // 负数\n        h = h.substr(1);\n        var len = h.length;\n        if (len % 2 === 1)\n            len += 1;\n        // 补齐到整字节\n        else if (!h.match(/^[0-7]/))\n            len += 2; // 非0开头，则补一个全0字节\n        var mask = '';\n        for (var i = 0; i < len; i++)\n            mask += 'f';\n        mask = new BigInteger(mask, 16);\n        // 对绝对值取反，加1\n        h = mask.xor(bigint).add(BigInteger.ONE);\n        h = h.toString(16).replace(/^-/, '');\n    }\n    return h;\n}\nvar ASN1Object = /** @class */ (function () {\n    function ASN1Object() {\n        this.tlv = null;\n        this.t = '00';\n        this.l = '00';\n        this.v = '';\n    }\n    /**\n     * 获取 der 编码比特流16进制串\n     */\n    ASN1Object.prototype.getEncodedHex = function () {\n        if (!this.tlv) {\n            this.v = this.getValue();\n            this.l = this.getLength();\n            this.tlv = this.t + this.l + this.v;\n        }\n        return this.tlv;\n    };\n    ASN1Object.prototype.getLength = function () {\n        var n = this.v.length / 2; // 字节数\n        var nHex = n.toString(16);\n        if (nHex.length % 2 === 1)\n            nHex = '0' + nHex; // 补齐到整字节\n        if (n < 128) {\n            // 短格式，以 0 开头\n            return nHex;\n        }\n        else {\n            // 长格式，以 1 开头\n            var head = 128 + nHex.length / 2; // 1(1位) + 真正的长度占用字节数(7位) + 真正的长度\n            return head.toString(16) + nHex;\n        }\n    };\n    ASN1Object.prototype.getValue = function () {\n        return '';\n    };\n    return ASN1Object;\n}());\nvar DERInteger = /** @class */ (function (_super) {\n    __extends(DERInteger, _super);\n    function DERInteger(bigint) {\n        var _this = _super.call(this) || this;\n        _this.t = '02'; // 整型标签说明\n        if (bigint)\n            _this.v = bigintToValue(bigint);\n        return _this;\n    }\n    DERInteger.prototype.getValue = function () {\n        return this.v;\n    };\n    return DERInteger;\n}(ASN1Object));\nvar DERSequence = /** @class */ (function (_super) {\n    __extends(DERSequence, _super);\n    function DERSequence(asn1Array) {\n        var _this = _super.call(this) || this;\n        _this.t = '30'; // 序列标签说明\n        _this.asn1Array = asn1Array;\n        return _this;\n    }\n    DERSequence.prototype.getValue = function () {\n        this.v = this.asn1Array\n            .map(function (asn1Object) { return asn1Object.getEncodedHex(); })\n            .join('');\n        return this.v;\n    };\n    return DERSequence;\n}(ASN1Object));\n/**\n * 获取 l 占用字节数\n */\nfunction getLenOfL(str, start) {\n    if (+str[start + 2] < 8)\n        return 1; // l 以0开头，则表示短格式，只占一个字节\n    return +str.substr(start + 2, 2) & (0x7f + 1); // 长格式，取第一个字节后7位作为长度真正占用字节数，再加上本身\n}\n/**\n * 获取 l\n */\nfunction getL(str, start) {\n    // 获取 l\n    var len = getLenOfL(str, start);\n    var l = str.substr(start + 2, len * 2);\n    if (!l)\n        return -1;\n    var bigint = +l[0] < 8 ? new BigInteger(l, 16) : new BigInteger(l.substr(2), 16);\n    return bigint.intValue();\n}\n/**\n * 获取 v 的位置\n */\nfunction getStartOfV(str, start) {\n    var len = getLenOfL(str, start);\n    return start + (len + 1) * 2;\n}\n/**\n * ASN.1 der 编码，针对 sm2 签名\n */\nfunction encodeDer(r, s) {\n    var derR = new DERInteger(r);\n    var derS = new DERInteger(s);\n    var derSeq = new DERSequence([derR, derS]);\n    return derSeq.getEncodedHex();\n}\n/**\n * 解析 ASN.1 der，针对 sm2 验签\n */\nfunction decodeDer(input) {\n    // 结构：\n    // input = | tSeq | lSeq | vSeq |\n    // vSeq = | tR | lR | vR | tS | lS | vS |\n    var start = getStartOfV(input, 0);\n    var vIndexR = getStartOfV(input, start);\n    var lR = getL(input, start);\n    var vR = input.substr(vIndexR, lR * 2);\n    var nextStart = vIndexR + vR.length;\n    var vIndexS = getStartOfV(input, nextStart);\n    var lS = getL(input, nextStart);\n    var vS = input.substr(vIndexS, lS * 2);\n    var r = new BigInteger(vR, 16);\n    var s = new BigInteger(vS, 16);\n    return { r: r, s: s };\n}\nexport { encodeDer, decodeDer };\n//# sourceMappingURL=asn1.js.map"]},"metadata":{},"sourceType":"module"}
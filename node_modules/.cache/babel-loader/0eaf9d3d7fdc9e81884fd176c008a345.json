{"ast":null,"code":"var BaseAuthenticationClient =\n/** @class */\nfunction () {\n  function BaseAuthenticationClient(options) {\n    this.options = options;\n  }\n\n  Object.defineProperty(BaseAuthenticationClient.prototype, \"appHost\", {\n    get: function () {\n      var _a = this.options,\n          appHost = _a.appHost,\n          domain = _a.domain,\n          host = _a.host; // 最新版本，传入 appHost\n\n      if (appHost) {\n        return appHost.replace(/\\/$/, '');\n      } // 兼容协议认证 API 中传入的 domain\n      else if (domain) {\n        var hostUrl = new URL(this.options.host);\n        return hostUrl.protocol + \"//\" + this.options.domain;\n      } // 最后使用服务器统一域名 host\n      else {\n        return host;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return BaseAuthenticationClient;\n}();\n\nexport { BaseAuthenticationClient };","map":{"version":3,"sources":["../../../../src/lib/authentication/BaseAuthenticationClient.ts"],"names":[],"mappings":"AAEA,IAAA,wBAAA;AAAA;AAAA,YAAA;EAqBE,SAAA,wBAAA,CAAY,OAAZ,EAAgD;IAC9C,KAAK,OAAL,GAAe,OAAf;EACD;;EApBD,MAAA,CAAA,cAAA,CAAI,wBAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;SAAX,YAAA;MACQ,IAAA,EAAA,GAA4B,KAAK,OAAjC;MAAA,IAAE,OAAO,GAAA,EAAA,CAAA,OAAT;MAAA,IAAW,MAAM,GAAA,EAAA,CAAA,MAAjB;MAAA,IAAmB,IAAI,GAAA,EAAA,CAAA,IAAvB,CADR,CAEE;;MACA,IAAI,OAAJ,EAAa;QACX,OAAO,OAAO,CAAC,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAP;MACD,CAFD,CAGA;MAHA,KAIK,IAAI,MAAJ,EAAY;QACf,IAAI,OAAO,GAAG,IAAI,GAAJ,CAAQ,KAAK,OAAL,CAAa,IAArB,CAAd;QACA,OAAU,OAAO,CAAC,QAAR,GAAgB,IAAhB,GAAqB,KAAK,OAAL,CAAa,MAA5C;MACD,CAHI,CAKL;MALK,KAMA;QACH,OAAO,IAAP;MACD;IACF,CAhBU;qBAAA;;EAAA,CAAX;EAqBF,OAAA,wBAAA;AAAC,CAxBD,EAAA","sourceRoot":"","sourcesContent":["var BaseAuthenticationClient = /** @class */ (function () {\n    function BaseAuthenticationClient(options) {\n        this.options = options;\n    }\n    Object.defineProperty(BaseAuthenticationClient.prototype, \"appHost\", {\n        get: function () {\n            var _a = this.options, appHost = _a.appHost, domain = _a.domain, host = _a.host;\n            // 最新版本，传入 appHost\n            if (appHost) {\n                return appHost.replace(/\\/$/, '');\n            }\n            // 兼容协议认证 API 中传入的 domain\n            else if (domain) {\n                var hostUrl = new URL(this.options.host);\n                return hostUrl.protocol + \"//\" + this.options.domain;\n            }\n            // 最后使用服务器统一域名 host\n            else {\n                return host;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return BaseAuthenticationClient;\n}());\nexport { BaseAuthenticationClient };\n//# sourceMappingURL=BaseAuthenticationClient.js.map"]},"metadata":{},"sourceType":"module"}
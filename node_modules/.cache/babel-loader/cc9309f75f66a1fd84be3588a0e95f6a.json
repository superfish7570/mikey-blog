{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { AclManagementClient } from './AclManagementClient';\nimport { RolesManagementClient } from './RolesManagementClient';\nimport { AgreementManagementClient } from './AgreementManagementClient';\n/**\n * @class ApplicationsManagementClient 管理分组\n * @description 此模块用于管理 Authing 分组，可以进行分组的增删改查、分组添加/删除用户、分组添加/删除策略 等操作。\n *\n * @example\n *\n * 请使用以下方式使用该模块，而不要直接初始化该模块：\n * \\`\\`\\`javascript\n * import { ManagementClient } from \"authing-js-sdk\"\n * const managementClient = new ManagementClient({\n *    userPoolId: \"YOUR_USERPOOL_ID\",\n *    secret: \"YOUR_USERPOOL_SECRET\",\n * })\n * managementClient.applications.list // 获取应用列表\n * managementClient.applications.findById // 通过 ID 获取应用详情\n * \\`\\`\\`\n *\n * @name ApplicationsManagementClient\n */\n\nvar ApplicationsManagementClient =\n/** @class */\nfunction () {\n  function ApplicationsManagementClient(options, httpClient, graphqlClient, tokenProvider) {\n    this.options = options;\n    this.httpClient = httpClient;\n    this.graphqlClient = graphqlClient;\n    this.tokenProvider = tokenProvider;\n    this.acl = new AclManagementClient(options, graphqlClient, httpClient, tokenProvider);\n    this.roles = new RolesManagementClient(options, graphqlClient, httpClient, tokenProvider);\n    this.agreements = new AgreementManagementClient(options, graphqlClient, httpClient, tokenProvider);\n  }\n  /**\n   * @description 获取用户池应用列表\n   *\n   */\n\n\n  ApplicationsManagementClient.prototype.list = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b, page, _c, limit, data;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _a = params || {}, _b = _a.page, page = _b === void 0 ? 1 : _b, _c = _a.limit, limit = _c === void 0 ? 10 : _c;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              url: this.options.host + \"/api/v2/applications\",\n              method: 'GET',\n              params: {\n                page: page,\n                limit: limit\n              }\n            })];\n\n          case 1:\n            data = _d.sent();\n            return [2\n            /*return*/\n            , data];\n        }\n      });\n    });\n  };\n  /**\n   * 创建应用\n   * @param options.name 应用名称\n   * @param options.identifier 应用认证地址\n   * @param options.redirectUris 应用回调链接\n   * @param options.logo 应用 logo\n   * @returns Promise<Application>\n   */\n\n\n  ApplicationsManagementClient.prototype.create = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/applications\",\n              data: __assign({}, options)\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * 删除应用\n   * @param appId 应用 ID\n   * @returns Promise<boolean>\n   */\n\n\n  ApplicationsManagementClient.prototype.delete = function (appId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'DELETE',\n              url: this.options.host + \"/api/v2/applications/\" + appId\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n\n          case 2:\n            error_1 = _a.sent();\n            throw error_1;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * @description 通过 ID 获取应用详情\n   * @param id 应用 ID\n   */\n\n\n  ApplicationsManagementClient.prototype.findById = function (id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!id) {\n              throw new Error('params id is required!');\n            }\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              url: this.options.host + \"/api/v2/applications/\" + id,\n              method: 'GET'\n            })];\n\n          case 1:\n            data = _a.sent();\n            return [2\n            /*return*/\n            , data];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.listResources = function (appId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.acl.getResources(__assign(__assign({}, options), {\n              namespace: appId\n            }))];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.createResource = function (appId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.acl.createResource(__assign(__assign({}, options), {\n              namespace: appId\n            }))];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.updateResource = function (appId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.acl.updateResource(options.code, __assign(__assign({}, options), {\n              namespace: appId\n            }))];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.deleteResource = function (appId, code) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.acl.deleteResource(code, appId)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * @description 获取应用访问控制策略\n   * @param appId\n   * @param options\n   */\n\n\n  ApplicationsManagementClient.prototype.getAccessPolicies = function (appId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.acl.getApplicationAccessPolicies(__assign(__assign({}, options), {\n              appId: appId\n            }))];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * @description 启用针对某个用户、角色、分组、组织机构的应用访问控制策略\n   * @param appId\n   * @param options\n   */\n\n\n  ApplicationsManagementClient.prototype.enableAccessPolicy = function (appId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.acl.enableApplicationAccessPolicy(__assign(__assign({}, options), {\n              appId: appId,\n              namespace: appId\n            }))];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * @description 停用针对某个用户、角色、分组、组织机构的应用访问控制策略\n   * @param appId\n   * @param options\n   */\n\n\n  ApplicationsManagementClient.prototype.disableAccessPolicy = function (appId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.acl.disableApplicationAccessPolicy(__assign(__assign({}, options), {\n              appId: appId,\n              namespace: appId\n            }))];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * @description 删除针对某个用户、角色、分组、组织机构的应用访问控制策略\n   * @param appId\n   * @param options\n   */\n\n\n  ApplicationsManagementClient.prototype.deleteAccessPolicy = function (appId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.acl.deleteApplicationAccessPolicy(__assign(__assign({}, options), {\n              appId: appId,\n              namespace: appId\n            }))];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * @description 配置「允许主体（用户、角色、分组、组织机构节点）访问应用」的控制策略\n   * @param appId\n   * @param options\n   */\n\n\n  ApplicationsManagementClient.prototype.allowAccess = function (appId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.acl.allowAccessApplication(__assign(__assign({}, options), {\n              appId: appId,\n              namespace: appId\n            }))];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * @description 配置「拒绝主体（用户、角色、分组、组织机构节点）访问应用」的控制策略\n   * @param appId\n   * @param options\n   */\n\n\n  ApplicationsManagementClient.prototype.denyAccess = function (appId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.acl.denyAccessApplication(__assign(__assign({}, options), {\n              appId: appId,\n              namespace: appId\n            }))];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * @description 更改默认应用访问策略\n   * @param appId\n   * @param defaultStrategy\n   */\n\n\n  ApplicationsManagementClient.prototype.updateDefaultAccessPolicy = function (appId, defaultStrategy) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.acl.updateDefaultApplicationAccessPolicy({\n              appId: appId,\n              defaultStrategy: defaultStrategy\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.createRole = function (appId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.roles.create(options.code, options.description, appId)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.deleteRole = function (appId, code) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.roles.delete(code, appId)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.deleteRoles = function (appId, codes) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.roles.deleteMany(codes, appId)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.updateRole = function (appId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.roles.update(options.code, __assign(__assign({}, options), {\n              namespace: appId\n            }))];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.findRole = function (appId, code) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.roles.detail(code, appId)];\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.getRoles = function (appId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.roles.list(__assign(__assign({}, options), {\n              namespace: appId\n            }))];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.getUsersByRoleCode = function (appId, code) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.roles.listUsers(code, {\n              namespace: appId\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.addUsersToRole = function (appId, code, userIds) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.roles.addUsers(code, userIds, appId)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.removeUsersFromRole = function (appId, code, userIds) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.roles.removeUsers(code, userIds, appId)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.listAuthorizedResourcesByRole = function (appId, code, resourceType) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.roles.listAuthorizedResources(code, appId, {\n              resourceType: resourceType\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.createAgreement = function (appId, agreement) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.agreements.create(appId, agreement)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.deleteAgreement = function (appId, agreementId) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.agreements.delete(appId, agreementId)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.modifyAgreement = function (appId, agreementId, updates) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.agreements.modify(appId, agreementId, updates)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.listAgreement = function (appId) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.agreements.list(appId)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  ApplicationsManagementClient.prototype.sortAgreement = function (appId, order) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.agreements.sort(appId, order)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * 查看应用下已登录用户\n   * @param appId 应用 ID\n   * @param page 当前页数\n   * @param limit 每页显示条数\n   * @returns Promise<Application>\n   */\n\n\n  ApplicationsManagementClient.prototype.activeUsers = function (appId, page, limit) {\n    if (page === void 0) {\n      page = 1;\n    }\n\n    if (limit === void 0) {\n      limit = 10;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/applications/\" + appId + \"/active-users?page=\" + page + \"&limit=\" + limit\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * 刷新应用密钥\n   * @param appId 应用 ID\n   * @returns Promise<Application>\n   */\n\n\n  ApplicationsManagementClient.prototype.refreshApplicationSecret = function (appId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'PATCH',\n              url: this.options.host + \"/api/v2/application/\" + appId + \"/refresh-secret\"\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * 更改应用类型\n   * @param appId 应用ID\n   * @param type 应用类型\n   */\n\n\n  ApplicationsManagementClient.prototype.changeApplicationType = function (appId, type) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/applications/\" + appId,\n              data: {\n                appType: type.toString()\n              }\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * 获取应用关联租户\n   * @param appId 应用ID\n   */\n\n\n  ApplicationsManagementClient.prototype.applicationTenants = function (appId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/application/\" + appId + \"/tenants\"\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  return ApplicationsManagementClient;\n}();\n\nexport { ApplicationsManagementClient };","map":{"version":3,"sources":["../../../../src/lib/management/ApplicationsManagementClient.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,SAAS,mBAAT,QAAoC,uBAApC;AAEA,SAAS,qBAAT,QAAsC,yBAAtC;AAEA,SAAS,yBAAT,QAA0C,6BAA1C;AAEA;;;;;;;;;;;;;;;;;;AAkBG;;AACH,IAAA,4BAAA;AAAA;AAAA,YAAA;EASE,SAAA,4BAAA,CACE,OADF,EAEE,UAFF,EAGE,aAHF,EAIE,aAJF,EAIwC;IAEtC,KAAK,OAAL,GAAe,OAAf;IACA,KAAK,UAAL,GAAkB,UAAlB;IACA,KAAK,aAAL,GAAqB,aAArB;IACA,KAAK,aAAL,GAAqB,aAArB;IACA,KAAK,GAAL,GAAW,IAAI,mBAAJ,CACT,OADS,EAET,aAFS,EAGT,UAHS,EAIT,aAJS,CAAX;IAMA,KAAK,KAAL,GAAa,IAAI,qBAAJ,CACX,OADW,EAEX,aAFW,EAGX,UAHW,EAIX,aAJW,CAAb;IAMA,KAAK,UAAL,GAAkB,IAAI,yBAAJ,CAChB,OADgB,EAEhB,aAFgB,EAGhB,UAHgB,EAIhB,aAJgB,CAAlB;EAMD;EAED;;;AAGG;;;EACU,4BAAA,CAAA,SAAA,CAAA,IAAA,GAAb,UAAkB,MAAlB,EAGC;;;;;;;YAIO,EAAA,GAA2B,MAAM,IAAI,EAArC,EAAE,EAAA,GAAA,EAAA,CAAA,IAAF,EAAE,IAAI,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,CAAH,GAAI,EAAV,EAAY,EAAA,GAAA,EAAA,CAAA,KAAZ,EAAY,KAAK,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAK,EAAtB;YACO,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,UAAL,CAAgB,OAAhB,CAAwB;cACzC,GAAG,EAAK,KAAK,OAAL,CAAa,IAAb,GAAiB,sBADgB;cAEzC,MAAM,EAAE,KAFiC;cAGzC,MAAM,EAAE;gBACN,IAAI,EAAA,IADE;gBAEN,KAAK,EAAA;cAFC;YAHiC,CAAxB,CAAN,CAAA;;;YAAP,IAAI,GAAG,EAAA,CAAA,IAAA,EAAP;YAQN,OAAA,CAAA;YAAA;YAAA,EAAO,IAAP,CAAA;;;;EACD,CAjBY;EAmBb;;;;;;;AAOG;;;EACU,4BAAA,CAAA,SAAA,CAAA,MAAA,GAAb,UAAoB,OAApB,EAKC;;;;;;YACgB,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,UAAL,CAAgB,OAAhB,CAAwB;cAC3C,MAAM,EAAE,MADmC;cAE3C,GAAG,EAAK,KAAK,OAAL,CAAa,IAAb,GAAiB,sBAFkB;cAG3C,IAAI,EAAA,QAAA,CAAA,EAAA,EAAO,OAAP;YAHuC,CAAxB,CAAN,CAAA;;;YAAT,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;YAKN,OAAA,CAAA;YAAA;YAAA,EAAO,MAAP,CAAA;;;;EACD,CAZY;EAcb;;;;AAIG;;;EACU,4BAAA,CAAA,SAAA,CAAA,MAAA,GAAb,UAAoB,KAApB,EAAiC;;;;;;;;YAE7B,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,UAAL,CAAgB,OAAhB,CAAwB;cAC5B,MAAM,EAAE,QADoB;cAE5B,GAAG,EAAK,KAAK,OAAL,CAAa,IAAb,GAAiB,uBAAjB,GAAyC;YAFrB,CAAxB,CAAN,CAAA;;;YAAA,EAAA,CAAA,IAAA;;YAKA,OAAA,CAAA;YAAA;YAAA,EAAO,IAAP,CAAA;;;;YAEA,MAAM,OAAN;;;;;;;;;EAEH,CAXY;EAab;;;AAGG;;;EACU,4BAAA,CAAA,SAAA,CAAA,QAAA,GAAb,UAAsB,EAAtB,EAAgC;;;;;;YAC9B,IAAI,CAAC,EAAL,EAAS;cACP,MAAM,IAAI,KAAJ,CAAU,wBAAV,CAAN;YACD;;YACY,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,UAAL,CAAgB,OAAhB,CAAwB;cACzC,GAAG,EAAK,KAAK,OAAL,CAAa,IAAb,GAAiB,uBAAjB,GAAyC,EADR;cAEzC,MAAM,EAAE;YAFiC,CAAxB,CAAN,CAAA;;;YAAP,IAAI,GAAG,EAAA,CAAA,IAAA,EAAP;YAIN,OAAA,CAAA;YAAA;YAAA,EAAO,IAAP,CAAA;;;;EACD,CATY;;EAWA,4BAAA,CAAA,SAAA,CAAA,aAAA,GAAb,UACE,KADF,EAEE,OAFF,EAMG;;;;;YAEM,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,GAAL,CAAS,YAAT,CAAqB,QAAA,CAAA,QAAA,CAAA,EAAA,EAC7B,OAD6B,CAAA,EACtB;cACV,SAAS,EAAE;YADD,CADsB,CAArB,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAID,CAZY;;EAcA,4BAAA,CAAA,SAAA,CAAA,cAAA,GAAb,UACE,KADF,EAEE,OAFF,EAUG;;;;;YAEM,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,GAAL,CAAS,cAAT,CAAuB,QAAA,CAAA,QAAA,CAAA,EAAA,EAC/B,OAD+B,CAAA,EACxB;cACV,SAAS,EAAE;YADD,CADwB,CAAvB,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAID,CAhBY;;EAkBA,4BAAA,CAAA,SAAA,CAAA,cAAA,GAAb,UACE,KADF,EAEE,OAFF,EAUG;;;;;YAEM,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,GAAL,CAAS,cAAT,CAAwB,OAAO,CAAC,IAAhC,EAAoC,QAAA,CAAA,QAAA,CAAA,EAAA,EAC5C,OAD4C,CAAA,EACrC;cACV,SAAS,EAAE;YADD,CADqC,CAApC,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAID,CAhBY;;EAkBA,4BAAA,CAAA,SAAA,CAAA,cAAA,GAAb,UAA4B,KAA5B,EAA2C,IAA3C,EAAuD;;;;;YAC9C,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,GAAL,CAAS,cAAT,CAAwB,IAAxB,EAA8B,KAA9B,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EACD,CAFY;EAIb;;;;AAIG;;;EACU,4BAAA,CAAA,SAAA,CAAA,iBAAA,GAAb,UACE,KADF,EAEE,OAFF,EAKG;;;;;YAEM,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,GAAL,CAAS,4BAAT,CAAqC,QAAA,CAAA,QAAA,CAAA,EAAA,EAC7C,OAD6C,CAAA,EACtC;cACV,KAAK,EAAA;YADK,CADsC,CAArC,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAID,CAXY;EAab;;;;AAIG;;;EACU,4BAAA,CAAA,SAAA,CAAA,kBAAA,GAAb,UACE,KADF,EAEE,OAFF,EAMG;;;;;YAEM,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,GAAL,CAAS,6BAAT,CAAsC,QAAA,CAAA,QAAA,CAAA,EAAA,EAC9C,OAD8C,CAAA,EACvC;cACV,KAAK,EAAA,KADK;cAEV,SAAS,EAAE;YAFD,CADuC,CAAtC,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAKD,CAbY;EAeb;;;;AAIG;;;EACU,4BAAA,CAAA,SAAA,CAAA,mBAAA,GAAb,UACE,KADF,EAEE,OAFF,EAMG;;;;;YAEM,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,GAAL,CAAS,8BAAT,CAAuC,QAAA,CAAA,QAAA,CAAA,EAAA,EAC/C,OAD+C,CAAA,EACxC;cACV,KAAK,EAAA,KADK;cAEV,SAAS,EAAE;YAFD,CADwC,CAAvC,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAKD,CAbY;EAeb;;;;AAIG;;;EACU,4BAAA,CAAA,SAAA,CAAA,kBAAA,GAAb,UACE,KADF,EAEE,OAFF,EAMG;;;;;YAEM,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,GAAL,CAAS,6BAAT,CAAsC,QAAA,CAAA,QAAA,CAAA,EAAA,EAC9C,OAD8C,CAAA,EACvC;cACV,KAAK,EAAA,KADK;cAEV,SAAS,EAAE;YAFD,CADuC,CAAtC,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAKD,CAbY;EAeb;;;;AAIG;;;EACU,4BAAA,CAAA,SAAA,CAAA,WAAA,GAAb,UACE,KADF,EAEE,OAFF,EAMG;;;;;YAEM,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,GAAL,CAAS,sBAAT,CAA+B,QAAA,CAAA,QAAA,CAAA,EAAA,EACvC,OADuC,CAAA,EAChC;cACV,KAAK,EAAA,KADK;cAEV,SAAS,EAAE;YAFD,CADgC,CAA/B,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAKD,CAbY;EAeb;;;;AAIG;;;EACU,4BAAA,CAAA,SAAA,CAAA,UAAA,GAAb,UACE,KADF,EAEE,OAFF,EAMG;;;;;YAEM,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,GAAL,CAAS,qBAAT,CAA8B,QAAA,CAAA,QAAA,CAAA,EAAA,EACtC,OADsC,CAAA,EAC/B;cACV,KAAK,EAAA,KADK;cAEV,SAAS,EAAE;YAFD,CAD+B,CAA9B,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAKD,CAbY;EAeb;;;;AAIG;;;EACU,4BAAA,CAAA,SAAA,CAAA,yBAAA,GAAb,UACE,KADF,EAEE,eAFF,EAE2C;;;;;YAElC,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,GAAL,CAAS,oCAAT,CAA8C;cACzD,KAAK,EAAA,KADoD;cAEzD,eAAe,EAAA;YAF0C,CAA9C,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAID,CARY;;EAUA,4BAAA,CAAA,SAAA,CAAA,UAAA,GAAb,UACE,KADF,EAEE,OAFF,EAKG;;;;;YAEM,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,KAAL,CAAW,MAAX,CAAkB,OAAO,CAAC,IAA1B,EAAgC,OAAO,CAAC,WAAxC,EAAqD,KAArD,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EACD,CARY;;EAUA,4BAAA,CAAA,SAAA,CAAA,UAAA,GAAb,UAAwB,KAAxB,EAAuC,IAAvC,EAAmD;;;;;YAC1C,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB,EAAwB,KAAxB,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EACD,CAFY;;EAIA,4BAAA,CAAA,SAAA,CAAA,WAAA,GAAb,UAAyB,KAAzB,EAAwC,KAAxC,EAAuD;;;;;YAC9C,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,KAAL,CAAW,UAAX,CAAsB,KAAtB,EAA6B,KAA7B,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EACD,CAFY;;EAIA,4BAAA,CAAA,SAAA,CAAA,UAAA,GAAb,UACE,KADF,EAEE,OAFF,EAMG;;;;;YAEM,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,KAAL,CAAW,MAAX,CAAkB,OAAO,CAAC,IAA1B,EAA8B,QAAA,CAAA,QAAA,CAAA,EAAA,EACtC,OADsC,CAAA,EAC/B;cACV,SAAS,EAAE;YADD,CAD+B,CAA9B,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAID,CAZY;;EAcA,4BAAA,CAAA,SAAA,CAAA,QAAA,GAAb,UAAsB,KAAtB,EAAqC,IAArC,EAAiD;;;QAC/C,OAAA,CAAA;QAAA;QAAA,EAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,IAAlB,EAAwB,KAAxB,CAAP,CAAA;;;EACD,CAFY;;EAIA,4BAAA,CAAA,SAAA,CAAA,QAAA,GAAb,UACE,KADF,EAEE,OAFF,EAKG;;;;;YAEM,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,KAAL,CAAW,IAAX,CAAe,QAAA,CAAA,QAAA,CAAA,EAAA,EACvB,OADuB,CAAA,EAChB;cACV,SAAS,EAAE;YADD,CADgB,CAAf,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAID,CAXY;;EAaA,4BAAA,CAAA,SAAA,CAAA,kBAAA,GAAb,UAAgC,KAAhC,EAA+C,IAA/C,EAA2D;;;;;YAClD,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,KAAL,CAAW,SAAX,CAAqB,IAArB,EAA2B;cACtC,SAAS,EAAE;YAD2B,CAA3B,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAGD,CAJY;;EAMA,4BAAA,CAAA,SAAA,CAAA,cAAA,GAAb,UAA4B,KAA5B,EAA2C,IAA3C,EAAyD,OAAzD,EAA0E;;;;;YACjE,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,KAAL,CAAW,QAAX,CAAoB,IAApB,EAA0B,OAA1B,EAAmC,KAAnC,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EACD,CAFY;;EAIA,4BAAA,CAAA,SAAA,CAAA,mBAAA,GAAb,UACE,KADF,EAEE,IAFF,EAGE,OAHF,EAGmB;;;;;YAEV,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,KAAL,CAAW,WAAX,CAAuB,IAAvB,EAA6B,OAA7B,EAAsC,KAAtC,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EACD,CANY;;EAQA,4BAAA,CAAA,SAAA,CAAA,6BAAA,GAAb,UACE,KADF,EAEE,IAFF,EAGE,YAHF,EAG6B;;;;;YAEpB,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,KAAL,CAAW,uBAAX,CAAmC,IAAnC,EAAyC,KAAzC,EAAgD;cAC3D,YAAY,EAAA;YAD+C,CAAhD,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EAGD,CARY;;EAUA,4BAAA,CAAA,SAAA,CAAA,eAAA,GAAb,UAA6B,KAA7B,EAA4C,SAA5C,EAAqE;;;;;YAC5D,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,UAAL,CAAgB,MAAhB,CAAuB,KAAvB,EAA8B,SAA9B,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EACD,CAFY;;EAIA,4BAAA,CAAA,SAAA,CAAA,eAAA,GAAb,UAA6B,KAA7B,EAA4C,WAA5C,EAA+D;;;;;YACtD,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,UAAL,CAAgB,MAAhB,CAAuB,KAAvB,EAA8B,WAA9B,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EACD,CAFY;;EAIA,4BAAA,CAAA,SAAA,CAAA,eAAA,GAAb,UACE,KADF,EAEE,WAFF,EAGE,OAHF,EAGyB;;;;;YAEhB,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,UAAL,CAAgB,MAAhB,CAAuB,KAAvB,EAA8B,WAA9B,EAA2C,OAA3C,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EACD,CANY;;EAQA,4BAAA,CAAA,SAAA,CAAA,aAAA,GAAb,UAA2B,KAA3B,EAAwC;;;;;YAC/B,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,UAAL,CAAgB,IAAhB,CAAqB,KAArB,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EACD,CAFY;;EAIA,4BAAA,CAAA,SAAA,CAAA,aAAA,GAAb,UAA2B,KAA3B,EAA0C,KAA1C,EAAyD;;;;;YAChD,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,UAAL,CAAgB,IAAhB,CAAqB,KAArB,EAA4B,KAA5B,CAAN,CAAA;;;YAAP,OAAA,CAAA;YAAA;YAAA,EAAO,EAAA,CAAA,IAAA,EAAP,CAAA;;;;EACD,CAFY;EAIb;;;;;;AAMG;;;EACU,4BAAA,CAAA,SAAA,CAAA,WAAA,GAAb,UACE,KADF,EAEE,IAFF,EAGE,KAHF,EAGoB;IADlB,IAAA,IAAA,KAAA,KAAA,CAAA,EAAA;MAAA,IAAA,GAAA,CAAA;IAAgB;;IAChB,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA;MAAA,KAAA,GAAA,EAAA;IAAkB;;;;;;;YAEH,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,UAAL,CAAgB,OAAhB,CAAwB;cAC3C,MAAM,EAAE,KADmC;cAE3C,GAAG,EAAK,KAAK,OAAL,CAAa,IAAb,GAAiB,uBAAjB,GAAyC,KAAzC,GAA8C,qBAA9C,GAAoE,IAApE,GAAwE,SAAxE,GAAkF;YAF/C,CAAxB,CAAN,CAAA;;;YAAT,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;YAIN,OAAA,CAAA;YAAA;YAAA,EAAO,MAAP,CAAA;;;;EACD,CAVY;EAYb;;;;AAIG;;;EACU,4BAAA,CAAA,SAAA,CAAA,wBAAA,GAAb,UAAsC,KAAtC,EAAmD;;;;;;YAClC,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,UAAL,CAAgB,OAAhB,CAAwB;cAC3C,MAAM,EAAE,OADmC;cAE3C,GAAG,EAAK,KAAK,OAAL,CAAa,IAAb,GAAiB,sBAAjB,GAAwC,KAAxC,GAA6C;YAFV,CAAxB,CAAN,CAAA;;;YAAT,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;YAIN,OAAA,CAAA;YAAA;YAAA,EAAO,MAAP,CAAA;;;;EACD,CANY;EASb;;;;AAIG;;;EACU,4BAAA,CAAA,SAAA,CAAA,qBAAA,GAAb,UAAmC,KAAnC,EAAgD,IAAhD,EAAoE;;;;;;YACnD,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,UAAL,CAAgB,OAAhB,CAAwB;cAC3C,MAAM,EAAE,MADmC;cAE3C,GAAG,EAAK,KAAK,OAAL,CAAa,IAAb,GAAiB,uBAAjB,GAAyC,KAFN;cAG3C,IAAI,EAAC;gBACH,OAAO,EAAE,IAAI,CAAC,QAAL;cADN;YAHsC,CAAxB,CAAN,CAAA;;;YAAT,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;YAON,OAAA,CAAA;YAAA;YAAA,EAAO,MAAP,CAAA;;;;EACD,CATY;EAWb;;;AAGG;;;EACU,4BAAA,CAAA,SAAA,CAAA,kBAAA,GAAb,UAAgC,KAAhC,EAA4C;;;;;;YAC3B,OAAA,CAAA;YAAA;YAAA,EAAM,KAAK,UAAL,CAAgB,OAAhB,CAAwB;cAC3C,MAAM,EAAE,KADmC;cAE3C,GAAG,EAAK,KAAK,OAAL,CAAa,IAAb,GAAiB,sBAAjB,GAAwC,KAAxC,GAA6C;YAFV,CAAxB,CAAN,CAAA;;;YAAT,MAAM,GAAG,EAAA,CAAA,IAAA,EAAT;YAIN,OAAA,CAAA;YAAA;YAAA,EAAO,MAAP,CAAA;;;;EACD,CANY;;EAQf,OAAA,4BAAA;AAAC,CAldD,EAAA","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { AclManagementClient } from './AclManagementClient';\nimport { RolesManagementClient } from './RolesManagementClient';\nimport { AgreementManagementClient } from './AgreementManagementClient';\n/**\n * @class ApplicationsManagementClient 管理分组\n * @description 此模块用于管理 Authing 分组，可以进行分组的增删改查、分组添加/删除用户、分组添加/删除策略 等操作。\n *\n * @example\n *\n * 请使用以下方式使用该模块，而不要直接初始化该模块：\n * \\`\\`\\`javascript\n * import { ManagementClient } from \"authing-js-sdk\"\n * const managementClient = new ManagementClient({\n *    userPoolId: \"YOUR_USERPOOL_ID\",\n *    secret: \"YOUR_USERPOOL_SECRET\",\n * })\n * managementClient.applications.list // 获取应用列表\n * managementClient.applications.findById // 通过 ID 获取应用详情\n * \\`\\`\\`\n *\n * @name ApplicationsManagementClient\n */\nvar ApplicationsManagementClient = /** @class */ (function () {\n    function ApplicationsManagementClient(options, httpClient, graphqlClient, tokenProvider) {\n        this.options = options;\n        this.httpClient = httpClient;\n        this.graphqlClient = graphqlClient;\n        this.tokenProvider = tokenProvider;\n        this.acl = new AclManagementClient(options, graphqlClient, httpClient, tokenProvider);\n        this.roles = new RolesManagementClient(options, graphqlClient, httpClient, tokenProvider);\n        this.agreements = new AgreementManagementClient(options, graphqlClient, httpClient, tokenProvider);\n    }\n    /**\n     * @description 获取用户池应用列表\n     *\n     */\n    ApplicationsManagementClient.prototype.list = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b, page, _c, limit, data;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = params || {}, _b = _a.page, page = _b === void 0 ? 1 : _b, _c = _a.limit, limit = _c === void 0 ? 10 : _c;\n                        return [4 /*yield*/, this.httpClient.request({\n                                url: this.options.host + \"/api/v2/applications\",\n                                method: 'GET',\n                                params: {\n                                    page: page,\n                                    limit: limit\n                                }\n                            })];\n                    case 1:\n                        data = _d.sent();\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    /**\n     * 创建应用\n     * @param options.name 应用名称\n     * @param options.identifier 应用认证地址\n     * @param options.redirectUris 应用回调链接\n     * @param options.logo 应用 logo\n     * @returns Promise<Application>\n     */\n    ApplicationsManagementClient.prototype.create = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'POST',\n                            url: this.options.host + \"/api/v2/applications\",\n                            data: __assign({}, options)\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * 删除应用\n     * @param appId 应用 ID\n     * @returns Promise<boolean>\n     */\n    ApplicationsManagementClient.prototype.delete = function (appId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'DELETE',\n                                url: this.options.host + \"/api/v2/applications/\" + appId\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_1 = _a.sent();\n                        throw error_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @description 通过 ID 获取应用详情\n     * @param id 应用 ID\n     */\n    ApplicationsManagementClient.prototype.findById = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!id) {\n                            throw new Error('params id is required!');\n                        }\n                        return [4 /*yield*/, this.httpClient.request({\n                                url: this.options.host + \"/api/v2/applications/\" + id,\n                                method: 'GET'\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.listResources = function (appId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.acl.getResources(__assign(__assign({}, options), { namespace: appId }))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.createResource = function (appId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.acl.createResource(__assign(__assign({}, options), { namespace: appId }))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.updateResource = function (appId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.acl.updateResource(options.code, __assign(__assign({}, options), { namespace: appId }))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.deleteResource = function (appId, code) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.acl.deleteResource(code, appId)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * @description 获取应用访问控制策略\n     * @param appId\n     * @param options\n     */\n    ApplicationsManagementClient.prototype.getAccessPolicies = function (appId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.acl.getApplicationAccessPolicies(__assign(__assign({}, options), { appId: appId }))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * @description 启用针对某个用户、角色、分组、组织机构的应用访问控制策略\n     * @param appId\n     * @param options\n     */\n    ApplicationsManagementClient.prototype.enableAccessPolicy = function (appId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.acl.enableApplicationAccessPolicy(__assign(__assign({}, options), { appId: appId, namespace: appId }))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * @description 停用针对某个用户、角色、分组、组织机构的应用访问控制策略\n     * @param appId\n     * @param options\n     */\n    ApplicationsManagementClient.prototype.disableAccessPolicy = function (appId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.acl.disableApplicationAccessPolicy(__assign(__assign({}, options), { appId: appId, namespace: appId }))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * @description 删除针对某个用户、角色、分组、组织机构的应用访问控制策略\n     * @param appId\n     * @param options\n     */\n    ApplicationsManagementClient.prototype.deleteAccessPolicy = function (appId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.acl.deleteApplicationAccessPolicy(__assign(__assign({}, options), { appId: appId, namespace: appId }))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * @description 配置「允许主体（用户、角色、分组、组织机构节点）访问应用」的控制策略\n     * @param appId\n     * @param options\n     */\n    ApplicationsManagementClient.prototype.allowAccess = function (appId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.acl.allowAccessApplication(__assign(__assign({}, options), { appId: appId, namespace: appId }))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * @description 配置「拒绝主体（用户、角色、分组、组织机构节点）访问应用」的控制策略\n     * @param appId\n     * @param options\n     */\n    ApplicationsManagementClient.prototype.denyAccess = function (appId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.acl.denyAccessApplication(__assign(__assign({}, options), { appId: appId, namespace: appId }))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * @description 更改默认应用访问策略\n     * @param appId\n     * @param defaultStrategy\n     */\n    ApplicationsManagementClient.prototype.updateDefaultAccessPolicy = function (appId, defaultStrategy) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.acl.updateDefaultApplicationAccessPolicy({\n                            appId: appId,\n                            defaultStrategy: defaultStrategy\n                        })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.createRole = function (appId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.roles.create(options.code, options.description, appId)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.deleteRole = function (appId, code) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.roles.delete(code, appId)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.deleteRoles = function (appId, codes) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.roles.deleteMany(codes, appId)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.updateRole = function (appId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.roles.update(options.code, __assign(__assign({}, options), { namespace: appId }))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.findRole = function (appId, code) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.roles.detail(code, appId)];\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.getRoles = function (appId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.roles.list(__assign(__assign({}, options), { namespace: appId }))];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.getUsersByRoleCode = function (appId, code) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.roles.listUsers(code, {\n                            namespace: appId\n                        })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.addUsersToRole = function (appId, code, userIds) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.roles.addUsers(code, userIds, appId)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.removeUsersFromRole = function (appId, code, userIds) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.roles.removeUsers(code, userIds, appId)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.listAuthorizedResourcesByRole = function (appId, code, resourceType) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.roles.listAuthorizedResources(code, appId, {\n                            resourceType: resourceType\n                        })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.createAgreement = function (appId, agreement) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.agreements.create(appId, agreement)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.deleteAgreement = function (appId, agreementId) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.agreements.delete(appId, agreementId)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.modifyAgreement = function (appId, agreementId, updates) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.agreements.modify(appId, agreementId, updates)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.listAgreement = function (appId) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.agreements.list(appId)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    ApplicationsManagementClient.prototype.sortAgreement = function (appId, order) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.agreements.sort(appId, order)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * 查看应用下已登录用户\n     * @param appId 应用 ID\n     * @param page 当前页数\n     * @param limit 每页显示条数\n     * @returns Promise<Application>\n     */\n    ApplicationsManagementClient.prototype.activeUsers = function (appId, page, limit) {\n        if (page === void 0) { page = 1; }\n        if (limit === void 0) { limit = 10; }\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'GET',\n                            url: this.options.host + \"/api/v2/applications/\" + appId + \"/active-users?page=\" + page + \"&limit=\" + limit\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * 刷新应用密钥\n     * @param appId 应用 ID\n     * @returns Promise<Application>\n     */\n    ApplicationsManagementClient.prototype.refreshApplicationSecret = function (appId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'PATCH',\n                            url: this.options.host + \"/api/v2/application/\" + appId + \"/refresh-secret\"\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * 更改应用类型\n     * @param appId 应用ID\n     * @param type 应用类型\n     */\n    ApplicationsManagementClient.prototype.changeApplicationType = function (appId, type) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'POST',\n                            url: this.options.host + \"/api/v2/applications/\" + appId,\n                            data: {\n                                appType: type.toString()\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * 获取应用关联租户\n     * @param appId 应用ID\n     */\n    ApplicationsManagementClient.prototype.applicationTenants = function (appId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'GET',\n                            url: this.options.host + \"/api/v2/application/\" + appId + \"/tenants\",\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    return ApplicationsManagementClient;\n}());\nexport { ApplicationsManagementClient };\n//# sourceMappingURL=ApplicationsManagementClient.js.map"]},"metadata":{},"sourceType":"module"}
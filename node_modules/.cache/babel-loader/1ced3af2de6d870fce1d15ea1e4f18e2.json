{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getChangePageAttributeAction, getChangePageChildAction, getChangeSchemaAction, getDelectPageChildAction } from \"../redux/action\"; // 自定义 hooks 把重复的事情 集合起来 schema 传数据 取数据 统一管理\n\nexport const useStore = index => {\n  _s();\n\n  const [num, setNum] = useStore(index);\n  const dispatch = useDispatch();\n  const schema = useSelector(state => state.homeManagePageReducer.schema);\n  const pageChild = useSelector(state => {\n    var _state$homeManagePage;\n\n    return ((_state$homeManagePage = state.homeManagePageReducer.schema.children) === null || _state$homeManagePage === void 0 ? void 0 : _state$homeManagePage[index]) || {};\n  });\n\n  const changeSchema = schema => {\n    dispatch(getChangeSchemaAction(schema));\n  };\n\n  const changePageChild = temp => {\n    dispatch(getChangePageChildAction(index, temp));\n  };\n\n  const removePageChild = () => {\n    dispatch(getDelectPageChildAction(index));\n  };\n\n  const changePageAttribute = (key, value) => {\n    dispatch(getChangePageAttributeAction(key, value));\n  };\n\n  return {\n    schema,\n    pageChild,\n    changePageChild,\n    removePageChild,\n    changeSchema,\n    changePageAttribute\n  };\n};\n\n_s(useStore, \"V2rnaBF3z3u31Uc8Xd1k1grcAcg=\", false, function () {\n  return [useStore, useDispatch, useSelector, useSelector];\n});","map":{"version":3,"names":["useDispatch","useSelector","getChangePageAttributeAction","getChangePageChildAction","getChangeSchemaAction","getDelectPageChildAction","useStore","index","num","setNum","dispatch","schema","state","homeManagePageReducer","pageChild","children","changeSchema","changePageChild","temp","removePageChild","changePageAttribute","key","value"],"sources":["/Users/mikey/Desktop/yc-blog/src/admin/hook/useStore.js"],"sourcesContent":["import {useDispatch, useSelector} from \"react-redux\";\nimport {\n    getChangePageAttributeAction,\n    getChangePageChildAction,\n    getChangeSchemaAction,\n    getDelectPageChildAction\n} from \"../redux/action\";\n\n// 自定义 hooks 把重复的事情 集合起来 schema 传数据 取数据 统一管理\nexport const useStore = (index) => {\n    const [num,setNum] = useStore(index)\n    const dispatch = useDispatch();\n    const schema = useSelector((state) => state.homeManagePageReducer.schema);\n    const pageChild = useSelector((state) => state.homeManagePageReducer.schema.children?.[index] || {});\n    const changeSchema = (schema) => {\n        dispatch(getChangeSchemaAction(schema));\n    }\n    const changePageChild = (temp) => {\n        dispatch(getChangePageChildAction(index, temp));\n    };\n    const removePageChild = () => {\n        dispatch(getDelectPageChildAction(index));\n    };\n    const changePageAttribute = (key, value) => {\n        dispatch(getChangePageAttributeAction(key, value));\n    }\n    return {schema,pageChild, changePageChild, removePageChild,changeSchema,changePageAttribute};\n}\n"],"mappings":";;AAAA,SAAQA,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SACIC,4BADJ,EAEIC,wBAFJ,EAGIC,qBAHJ,EAIIC,wBAJJ,QAKO,iBALP,C,CAOA;;AACA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC/B,MAAM,CAACC,GAAD,EAAKC,MAAL,IAAeH,QAAQ,CAACC,KAAD,CAA7B;EACA,MAAMG,QAAQ,GAAGV,WAAW,EAA5B;EACA,MAAMW,MAAM,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,qBAAN,CAA4BF,MAAxC,CAA1B;EACA,MAAMG,SAAS,GAAGb,WAAW,CAAEW,KAAD;IAAA;;IAAA,OAAW,0BAAAA,KAAK,CAACC,qBAAN,CAA4BF,MAA5B,CAAmCI,QAAnC,gFAA8CR,KAA9C,MAAwD,EAAnE;EAAA,CAAD,CAA7B;;EACA,MAAMS,YAAY,GAAIL,MAAD,IAAY;IAC7BD,QAAQ,CAACN,qBAAqB,CAACO,MAAD,CAAtB,CAAR;EACH,CAFD;;EAGA,MAAMM,eAAe,GAAIC,IAAD,IAAU;IAC9BR,QAAQ,CAACP,wBAAwB,CAACI,KAAD,EAAQW,IAAR,CAAzB,CAAR;EACH,CAFD;;EAGA,MAAMC,eAAe,GAAG,MAAM;IAC1BT,QAAQ,CAACL,wBAAwB,CAACE,KAAD,CAAzB,CAAR;EACH,CAFD;;EAGA,MAAMa,mBAAmB,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;IACxCZ,QAAQ,CAACR,4BAA4B,CAACmB,GAAD,EAAMC,KAAN,CAA7B,CAAR;EACH,CAFD;;EAGA,OAAO;IAACX,MAAD;IAAQG,SAAR;IAAmBG,eAAnB;IAAoCE,eAApC;IAAoDH,YAApD;IAAiEI;EAAjE,CAAP;AACH,CAlBM;;GAAMd,Q;UACYA,Q,EACJN,W,EACFC,W,EACGA,W"},"metadata":{},"sourceType":"module"}
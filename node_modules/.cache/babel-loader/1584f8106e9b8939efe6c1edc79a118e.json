{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/**\n * @name TenantManagementClient\n * @description 租户管理模块\n *\n */\n\n\nvar TenantManagementClient =\n/** @class */\nfunction () {\n  function TenantManagementClient(options, graphqlClient, httpClient, tokenProvider) {\n    this.options = options;\n    this.graphqlClient = graphqlClient;\n    this.tokenProvider = tokenProvider;\n    this.httpClient = httpClient;\n  }\n  /**\n   * @name list\n   * @name_zh  获取用户池下租户列表\n   * @description 获取用户池下租户列表\n   */\n\n\n  TenantManagementClient.prototype.list = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, _b, page, _c, limit, result;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _a = params || {}, _b = _a.page, page = _b === void 0 ? 1 : _b, _c = _a.limit, limit = _c === void 0 ? 10 : _c;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/tenants?page=\" + page + \"&limit=\" + limit\n            })];\n\n          case 1:\n            result = _d.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name details\n   * @name_zh  获取租户详情\n   * @description 获取租户详情\n   */\n\n\n  TenantManagementClient.prototype.details = function (tenantId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/tenant/\" + tenantId\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name create\n   * @name_zh  创建租户\n   * @description 创建租户\n   */\n\n\n  TenantManagementClient.prototype.create = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/tenant\",\n              data: __assign({}, options)\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name update\n   * @name_zh  修改租户\n   * @description 修改租户\n   */\n\n\n  TenantManagementClient.prototype.update = function (tenantId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/tenant/\" + tenantId,\n              data: __assign({}, options)\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name delete\n   * @name_zh  删除租户\n   * @description 删除租户\n   */\n\n\n  TenantManagementClient.prototype.delete = function (tenantId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'DELETE',\n              url: this.options.host + \"/api/v2/tenant/\" + tenantId\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name config\n   * @name_zh  配置租户品牌化\n   * @description 配置租户品牌化\n   */\n\n\n  TenantManagementClient.prototype.config = function (tenantId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/tenant/\" + tenantId,\n              data: __assign({}, options)\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name members\n   * @name_zh  获取租户成员列表\n   * @description 获取租户成员列表\n   */\n\n\n  TenantManagementClient.prototype.members = function (tenantId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, page, _b, limit, result;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = options.page, page = _a === void 0 ? 1 : _a, _b = options.limit, limit = _b === void 0 ? 10 : _b;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/tenant/\" + tenantId + \"/users?page=\" + page + \"&limit=\" + limit\n            })];\n\n          case 1:\n            result = _c.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name addMembers\n   * @name_zh  添加租户成员\n   * @description 添加租户成员\n   */\n\n\n  TenantManagementClient.prototype.addMembers = function (tenantId, userIds) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/tenant/\" + tenantId + \"/user\",\n              data: {\n                userIds: userIds\n              }\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name removeMembers\n   * @name_zh  移除租户成员\n   * @description 移除租户成员\n   */\n\n\n  TenantManagementClient.prototype.removeMembers = function (tenantId, userId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'DELETE',\n              url: this.options.host + \"/api/v2/tenant/\" + tenantId + \"/user?userId=\" + userId\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name listExtIdp\n   * @name_zh  获取身份源列表\n   * @description 获取身份源列表\n   */\n\n\n  TenantManagementClient.prototype.listExtIdp = function (tenantId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/extIdp?tenantId=\" + tenantId\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name extIdpDetail\n   * @name_zh  获取身份源详细信息\n   * @description 获取身份源详细信息\n   */\n\n\n  TenantManagementClient.prototype.extIdpDetail = function (extIdpId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/extIdp/\" + extIdpId\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name createExtIdp\n   * @name_zh  创建身份源\n   * @description 创建身份源\n   */\n\n\n  TenantManagementClient.prototype.createExtIdp = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/extIdp\",\n              data: __assign({}, options)\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name updateExtIdp\n   * @name_zh  更新身份源配置\n   * @description 更新身份源配置\n   */\n\n\n  TenantManagementClient.prototype.updateExtIdp = function (extIdpId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'PUT',\n              url: this.options.host + \"/api/v2/extIdp/\" + extIdpId,\n              data: __assign({}, options)\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name deleteExtIdp\n   * @name_zh  删除身份源\n   * @description 删除身份源\n   */\n\n\n  TenantManagementClient.prototype.deleteExtIdp = function (extIdpId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'DELETE',\n              url: this.options.host + \"/api/v2/extIdp/\" + extIdpId\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name createExtIdpConnection\n   * @name_zh  创建身份源连接\n   * @description 创建身份源连接\n   */\n\n\n  TenantManagementClient.prototype.createExtIdpConnection = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/extIdpConn\",\n              data: __assign({}, options)\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name updateExtIdpConnection\n   * @name_zh  更新身份源连接\n   * @description 更新身份源连接\n   */\n\n\n  TenantManagementClient.prototype.updateExtIdpConnection = function (extIdpConnectionId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'PUT',\n              url: this.options.host + \"/api/v2/extIdpConn/\" + extIdpConnectionId,\n              data: __assign({}, options)\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name deleteExtIdpConnection\n   * @name_zh  删除身份源连接\n   * @description 删除身份源连接\n   */\n\n\n  TenantManagementClient.prototype.deleteExtIdpConnection = function (extIdpConnectionId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'DELETE',\n              url: this.options.host + \"/api/v2/extIdpConn/\" + extIdpConnectionId\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * @name checkExtIdpConnectionIdentifierUnique\n   * @name_zh  检查连接唯一标识是否冲突\n   * @description 检查连接唯一标识是否冲突\n   */\n\n\n  TenantManagementClient.prototype.checkExtIdpConnectionIdentifierUnique = function (identifier) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/check/extIdpConn/identifier\",\n              data: {\n                identifier: identifier\n              }\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , false];\n\n          case 2:\n            error_1 = _a.sent();\n            return [2\n            /*return*/\n            , true];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * @name changeExtIdpConnectionState\n   * @name_zh  开关身份源连接\n   * @description 开关身份源连接\n   */\n\n\n  TenantManagementClient.prototype.changeExtIdpConnectionState = function (extIdpConnectionId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'PUT',\n              url: this.options.host + \"/api/v2/extIdpConn/\" + extIdpConnectionId + \"/state\",\n              data: __assign({}, options)\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n\n          case 2:\n            error_2 = _a.sent();\n            return [2\n            /*return*/\n            , false];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * @name batchChangeExtIdpConnectionState\n   * @name_zh  批量开关身份源连接\n   * @description 批量开关身份源连接\n   */\n\n\n  TenantManagementClient.prototype.batchChangeExtIdpConnectionState = function (extIdpId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'PUT',\n              url: this.options.host + \"/api/v2/extIdp/\" + extIdpId + \"/connState\",\n              data: __assign({}, options)\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n\n          case 2:\n            error_3 = _a.sent();\n            return [2\n            /*return*/\n            , false];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * 设置租户管理员\n   */\n\n\n  TenantManagementClient.prototype.setTanentAdmin = function (tenantId, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'PUT',\n              url: this.options.host + \"/api/v2/tenant/\" + tenantId + \"/admin\",\n              data: __assign({}, options)\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n\n          case 2:\n            error_4 = _a.sent();\n            return [2\n            /*return*/\n            , false];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * 取消租户管理员\n   */\n\n\n  TenantManagementClient.prototype.deleteTanentAdmin = function (tenantId, userId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'DELETE',\n              url: this.options.host + \"/api/v2/tenant/\" + tenantId + \"/admin/\" + userId,\n              data: {}\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n\n          case 2:\n            error_5 = _a.sent();\n            return [2\n            /*return*/\n            , false];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * 更新租户成员，比如是否启用\n   */\n\n\n  TenantManagementClient.prototype.updateTenantMember = function (tenantId, userId, isEnabled) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'PUT',\n              url: this.options.host + \"/api/v2/tenant/\" + tenantId + \"/\" + userId,\n              data: {\n                isEnabled: isEnabled\n              }\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n\n          case 2:\n            error_6 = _a.sent();\n            return [2\n            /*return*/\n            , false];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * 批量创建资源\n   *\n   */\n\n\n  TenantManagementClient.prototype.batchInsertResource = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_7;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/resources/bulk\",\n              data: __assign({}, options)\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n\n          case 2:\n            error_7 = _a.sent();\n            return [2\n            /*return*/\n            , false];\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return TenantManagementClient;\n}();\n\nexport { TenantManagementClient };","map":{"version":3,"sources":["../../../../src/lib/management/TenantManagementClient.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n/**\n * @name TenantManagementClient\n * @description 租户管理模块\n *\n */\nvar TenantManagementClient = /** @class */ (function () {\n    function TenantManagementClient(options, graphqlClient, httpClient, tokenProvider) {\n        this.options = options;\n        this.graphqlClient = graphqlClient;\n        this.tokenProvider = tokenProvider;\n        this.httpClient = httpClient;\n    }\n    /**\n     * @name list\n     * @name_zh  获取用户池下租户列表\n     * @description 获取用户池下租户列表\n     */\n    TenantManagementClient.prototype.list = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b, page, _c, limit, result;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = params || {}, _b = _a.page, page = _b === void 0 ? 1 : _b, _c = _a.limit, limit = _c === void 0 ? 10 : _c;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'GET',\n                                url: this.options.host + \"/api/v2/tenants?page=\" + page + \"&limit=\" + limit\n                            })];\n                    case 1:\n                        result = _d.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name details\n     * @name_zh  获取租户详情\n     * @description 获取租户详情\n     */\n    TenantManagementClient.prototype.details = function (tenantId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'GET',\n                            url: this.options.host + \"/api/v2/tenant/\" + tenantId\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name create\n     * @name_zh  创建租户\n     * @description 创建租户\n     */\n    TenantManagementClient.prototype.create = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'POST',\n                            url: this.options.host + \"/api/v2/tenant\",\n                            data: __assign({}, options)\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name update\n     * @name_zh  修改租户\n     * @description 修改租户\n     */\n    TenantManagementClient.prototype.update = function (tenantId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'POST',\n                            url: this.options.host + \"/api/v2/tenant/\" + tenantId,\n                            data: __assign({}, options)\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name delete\n     * @name_zh  删除租户\n     * @description 删除租户\n     */\n    TenantManagementClient.prototype.delete = function (tenantId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'DELETE',\n                            url: this.options.host + \"/api/v2/tenant/\" + tenantId\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name config\n     * @name_zh  配置租户品牌化\n     * @description 配置租户品牌化\n     */\n    TenantManagementClient.prototype.config = function (tenantId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'POST',\n                            url: this.options.host + \"/api/v2/tenant/\" + tenantId,\n                            data: __assign({}, options)\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name members\n     * @name_zh  获取租户成员列表\n     * @description 获取租户成员列表\n     */\n    TenantManagementClient.prototype.members = function (tenantId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, page, _b, limit, result;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = options.page, page = _a === void 0 ? 1 : _a, _b = options.limit, limit = _b === void 0 ? 10 : _b;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'GET',\n                                url: this.options.host + \"/api/v2/tenant/\" + tenantId + \"/users?page=\" + page + \"&limit=\" + limit\n                            })];\n                    case 1:\n                        result = _c.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name addMembers\n     * @name_zh  添加租户成员\n     * @description 添加租户成员\n     */\n    TenantManagementClient.prototype.addMembers = function (tenantId, userIds) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'POST',\n                            url: this.options.host + \"/api/v2/tenant/\" + tenantId + \"/user\",\n                            data: {\n                                userIds: userIds\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name removeMembers\n     * @name_zh  移除租户成员\n     * @description 移除租户成员\n     */\n    TenantManagementClient.prototype.removeMembers = function (tenantId, userId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'DELETE',\n                            url: this.options.host + \"/api/v2/tenant/\" + tenantId + \"/user?userId=\" + userId\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name listExtIdp\n     * @name_zh  获取身份源列表\n     * @description 获取身份源列表\n     */\n    TenantManagementClient.prototype.listExtIdp = function (tenantId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'GET',\n                            url: this.options.host + \"/api/v2/extIdp?tenantId=\" + tenantId\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name extIdpDetail\n     * @name_zh  获取身份源详细信息\n     * @description 获取身份源详细信息\n     */\n    TenantManagementClient.prototype.extIdpDetail = function (extIdpId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'GET',\n                            url: this.options.host + \"/api/v2/extIdp/\" + extIdpId\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name createExtIdp\n     * @name_zh  创建身份源\n     * @description 创建身份源\n     */\n    TenantManagementClient.prototype.createExtIdp = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'POST',\n                            url: this.options.host + \"/api/v2/extIdp\",\n                            data: __assign({}, options)\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name updateExtIdp\n     * @name_zh  更新身份源配置\n     * @description 更新身份源配置\n     */\n    TenantManagementClient.prototype.updateExtIdp = function (extIdpId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'PUT',\n                            url: this.options.host + \"/api/v2/extIdp/\" + extIdpId,\n                            data: __assign({}, options)\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name deleteExtIdp\n     * @name_zh  删除身份源\n     * @description 删除身份源\n     */\n    TenantManagementClient.prototype.deleteExtIdp = function (extIdpId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'DELETE',\n                            url: this.options.host + \"/api/v2/extIdp/\" + extIdpId\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name createExtIdpConnection\n     * @name_zh  创建身份源连接\n     * @description 创建身份源连接\n     */\n    TenantManagementClient.prototype.createExtIdpConnection = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'POST',\n                            url: this.options.host + \"/api/v2/extIdpConn\",\n                            data: __assign({}, options)\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name updateExtIdpConnection\n     * @name_zh  更新身份源连接\n     * @description 更新身份源连接\n     */\n    TenantManagementClient.prototype.updateExtIdpConnection = function (extIdpConnectionId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'PUT',\n                            url: this.options.host + \"/api/v2/extIdpConn/\" + extIdpConnectionId,\n                            data: __assign({}, options)\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name deleteExtIdpConnection\n     * @name_zh  删除身份源连接\n     * @description 删除身份源连接\n     */\n    TenantManagementClient.prototype.deleteExtIdpConnection = function (extIdpConnectionId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'DELETE',\n                            url: this.options.host + \"/api/v2/extIdpConn/\" + extIdpConnectionId\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * @name checkExtIdpConnectionIdentifierUnique\n     * @name_zh  检查连接唯一标识是否冲突\n     * @description 检查连接唯一标识是否冲突\n     */\n    TenantManagementClient.prototype.checkExtIdpConnectionIdentifierUnique = function (identifier) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/check/extIdpConn/identifier\",\n                                data: {\n                                    identifier: identifier\n                                }\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, false];\n                    case 2:\n                        error_1 = _a.sent();\n                        return [2 /*return*/, true];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @name changeExtIdpConnectionState\n     * @name_zh  开关身份源连接\n     * @description 开关身份源连接\n     */\n    TenantManagementClient.prototype.changeExtIdpConnectionState = function (extIdpConnectionId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'PUT',\n                                url: this.options.host + \"/api/v2/extIdpConn/\" + extIdpConnectionId + \"/state\",\n                                data: __assign({}, options)\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_2 = _a.sent();\n                        return [2 /*return*/, false];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * @name batchChangeExtIdpConnectionState\n     * @name_zh  批量开关身份源连接\n     * @description 批量开关身份源连接\n     */\n    TenantManagementClient.prototype.batchChangeExtIdpConnectionState = function (extIdpId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'PUT',\n                                url: this.options.host + \"/api/v2/extIdp/\" + extIdpId + \"/connState\",\n                                data: __assign({}, options)\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_3 = _a.sent();\n                        return [2 /*return*/, false];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * 设置租户管理员\n     */\n    TenantManagementClient.prototype.setTanentAdmin = function (tenantId, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'PUT',\n                                url: this.options.host + \"/api/v2/tenant/\" + tenantId + \"/admin\",\n                                data: __assign({}, options)\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_4 = _a.sent();\n                        return [2 /*return*/, false];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * 取消租户管理员\n     */\n    TenantManagementClient.prototype.deleteTanentAdmin = function (tenantId, userId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_5;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'DELETE',\n                                url: this.options.host + \"/api/v2/tenant/\" + tenantId + \"/admin/\" + userId,\n                                data: {}\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_5 = _a.sent();\n                        return [2 /*return*/, false];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * 更新租户成员，比如是否启用\n     */\n    TenantManagementClient.prototype.updateTenantMember = function (tenantId, userId, isEnabled) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_6;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'PUT',\n                                url: this.options.host + \"/api/v2/tenant/\" + tenantId + \"/\" + userId,\n                                data: {\n                                    isEnabled: isEnabled\n                                }\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_6 = _a.sent();\n                        return [2 /*return*/, false];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * 批量创建资源\n     *\n     */\n    TenantManagementClient.prototype.batchInsertResource = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_7;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/resources/bulk\",\n                                data: __assign({}, options)\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_7 = _a.sent();\n                        return [2 /*return*/, false];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return TenantManagementClient;\n}());\nexport { TenantManagementClient };\n//# sourceMappingURL=TenantManagementClient.js.map"]},"metadata":{},"sourceType":"module"}
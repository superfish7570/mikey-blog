{"ast":null,"code":"var _jsxFileName = \"/Users/mikey/Desktop/yc-blog/src/admin/pages/home/HomeManagePage.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport styles from './style.module.scss';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Layout, Menu } from 'antd';\nimport { AreaList } from \"../../components\";\nimport { parseJsonByString } from \"../../../common/utils\";\nimport { getChangeSchemaAction } from \"../../redux/action\"; // 自定义 hooks 把重复的事情 集合起来 schema 传数据 取数据 统一管理\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStore = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const schema = useSelector(state => state.homeManagePageReducer.schema);\n\n  const changeSchema = schema => {\n    dispatch(getChangeSchemaAction(schema));\n  };\n\n  return {\n    changeSchema,\n    schema\n  };\n};\n\n_s(useStore, \"wOfkI1BwZIfl/xZ+iOGYy623bgQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\nexport const HomeManagePage = () => {\n  _s2();\n\n  // 折叠 收缩\n  const {\n    changeSchema,\n    schema\n  } = useStore(); // 保存\n\n  const handleSaveButtonClick = () => {\n    window.localStorage.schema = JSON.stringify(schema);\n  }; // 重置还原 最开始的想法是当你点击 Reset 方法的时候, 你需要做的只是 调用一下 resetSchema的方法就好了, 至于怎么重置交给子组件来决定\n  // 最后思考\n\n\n  const handleResetButtonClick = () => {\n    // 先获取最新的 schema\n    changeSchema(parseJsonByString(window.localStorage.schema, {}));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AreaList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleResetButtonClick,\n        children: \"\\u4FDD\\u5B58\\u533A\\u5757\\u914D\\u7F6E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        className: styles.reset,\n        onClick: handleResetButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(HomeManagePage, \"ybF7bzc9ewgXsg2KbjJRiU42+yw=\", false, function () {\n  return [useStore];\n});\n\n_c = HomeManagePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeManagePage\");","map":{"version":3,"names":["React","styles","useDispatch","useSelector","Button","Layout","Menu","AreaList","parseJsonByString","getChangeSchemaAction","useStore","dispatch","schema","state","homeManagePageReducer","changeSchema","HomeManagePage","handleSaveButtonClick","window","localStorage","JSON","stringify","handleResetButtonClick","buttons","reset"],"sources":["/Users/mikey/Desktop/yc-blog/src/admin/pages/home/HomeManagePage.jsx"],"sourcesContent":["import React from 'react';\nimport styles from './style.module.scss';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Button, Layout, Menu} from 'antd';\nimport {AreaList} from \"../../components\";\nimport {parseJsonByString} from \"../../../common/utils\";\nimport {getChangeSchemaAction} from \"../../redux/action\";\n\n\n\n// 自定义 hooks 把重复的事情 集合起来 schema 传数据 取数据 统一管理\nconst useStore = () => {\n    const dispatch = useDispatch();\n    const schema = useSelector((state) => state.homeManagePageReducer.schema);\n    const changeSchema = (schema) => {\n        dispatch(getChangeSchemaAction(schema));\n    }\n    return {changeSchema, schema};\n}\n\nexport const HomeManagePage = () => {\n    // 折叠 收缩\n    const {changeSchema, schema} = useStore();\n\n\n    // 保存\n    const handleSaveButtonClick = () => {\n        window.localStorage.schema = JSON.stringify(schema);\n    }\n    // 重置还原 最开始的想法是当你点击 Reset 方法的时候, 你需要做的只是 调用一下 resetSchema的方法就好了, 至于怎么重置交给子组件来决定\n    // 最后思考\n    const handleResetButtonClick = () => {\n        // 先获取最新的 schema\n        changeSchema(parseJsonByString(window.localStorage.schema, {}))\n    }\n\n    return (\n        <div>\n            <AreaList/>\n            <div className={styles.buttons}>\n                <Button type='primary' onClick={handleResetButtonClick}>保存区块配置</Button>\n                <Button type='primary' className={styles.reset} onClick={handleResetButtonClick}></Button>\n            </div>\n        </div>\n    );\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,IAAxB,QAAmC,MAAnC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;AACA,SAAQC,qBAAR,QAAoC,oBAApC,C,CAIA;;;;AACA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,MAAMU,MAAM,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,qBAAN,CAA4BF,MAAxC,CAA1B;;EACA,MAAMG,YAAY,GAAIH,MAAD,IAAY;IAC7BD,QAAQ,CAACF,qBAAqB,CAACG,MAAD,CAAtB,CAAR;EACH,CAFD;;EAGA,OAAO;IAACG,YAAD;IAAeH;EAAf,CAAP;AACH,CAPD;;GAAMF,Q;UACeR,W,EACFC,W;;;AAOnB,OAAO,MAAMa,cAAc,GAAG,MAAM;EAAA;;EAChC;EACA,MAAM;IAACD,YAAD;IAAeH;EAAf,IAAyBF,QAAQ,EAAvC,CAFgC,CAKhC;;EACA,MAAMO,qBAAqB,GAAG,MAAM;IAChCC,MAAM,CAACC,YAAP,CAAoBP,MAApB,GAA6BQ,IAAI,CAACC,SAAL,CAAeT,MAAf,CAA7B;EACH,CAFD,CANgC,CAShC;EACA;;;EACA,MAAMU,sBAAsB,GAAG,MAAM;IACjC;IACAP,YAAY,CAACP,iBAAiB,CAACU,MAAM,CAACC,YAAP,CAAoBP,MAArB,EAA6B,EAA7B,CAAlB,CAAZ;EACH,CAHD;;EAKA,oBACI;IAAA,wBACI,QAAC,QAAD;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAEX,MAAM,CAACsB,OAAvB;MAAA,wBACI,QAAC,MAAD;QAAQ,IAAI,EAAC,SAAb;QAAuB,OAAO,EAAED,sBAAhC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,MAAD;QAAQ,IAAI,EAAC,SAAb;QAAuB,SAAS,EAAErB,MAAM,CAACuB,KAAzC;QAAgD,OAAO,EAAEF;MAAzD;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CAzBM;;IAAMN,c;UAEsBN,Q;;;KAFtBM,c"},"metadata":{},"sourceType":"module"}
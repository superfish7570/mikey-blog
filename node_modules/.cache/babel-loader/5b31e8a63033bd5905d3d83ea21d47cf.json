{"ast":null,"code":"export var ResourceType;\n\n(function (ResourceType) {\n  ResourceType[\"Data\"] = \"DATA\";\n  ResourceType[\"Api\"] = \"API\";\n  ResourceType[\"Menu\"] = \"MENU\";\n  ResourceType[\"Ui\"] = \"UI\";\n  ResourceType[\"Button\"] = \"BUTTON\";\n})(ResourceType || (ResourceType = {}));\n\nexport var PolicyAssignmentTargetType;\n\n(function (PolicyAssignmentTargetType) {\n  PolicyAssignmentTargetType[\"User\"] = \"USER\";\n  PolicyAssignmentTargetType[\"Role\"] = \"ROLE\";\n  PolicyAssignmentTargetType[\"Group\"] = \"GROUP\";\n  PolicyAssignmentTargetType[\"Org\"] = \"ORG\";\n  PolicyAssignmentTargetType[\"AkSk\"] = \"AK_SK\";\n})(PolicyAssignmentTargetType || (PolicyAssignmentTargetType = {}));\n\nexport var Operator;\n\n(function (Operator) {\n  Operator[\"And\"] = \"AND\";\n  Operator[\"Or\"] = \"OR\";\n})(Operator || (Operator = {}));\n\nexport var EmailTemplateType;\n\n(function (EmailTemplateType) {\n  /** 重置密码确认 */\n  EmailTemplateType[\"ResetPassword\"] = \"RESET_PASSWORD\";\n  /** 重置密码通知 */\n\n  EmailTemplateType[\"PasswordResetedNotification\"] = \"PASSWORD_RESETED_NOTIFICATION\";\n  /** 修改密码验证码 */\n\n  EmailTemplateType[\"ChangePassword\"] = \"CHANGE_PASSWORD\";\n  /** 注册欢迎邮件 */\n\n  EmailTemplateType[\"Welcome\"] = \"WELCOME\";\n  /** 验证邮箱 */\n\n  EmailTemplateType[\"VerifyEmail\"] = \"VERIFY_EMAIL\";\n  /** 修改绑定邮箱 */\n\n  EmailTemplateType[\"ChangeEmail\"] = \"CHANGE_EMAIL\";\n})(EmailTemplateType || (EmailTemplateType = {}));\n\nexport var SortByEnum;\n\n(function (SortByEnum) {\n  /** 按照创建时间降序（后创建的在前面） */\n  SortByEnum[\"CreatedatDesc\"] = \"CREATEDAT_DESC\";\n  /** 按照创建时间升序（先创建的在前面） */\n\n  SortByEnum[\"CreatedatAsc\"] = \"CREATEDAT_ASC\";\n  /** 按照更新时间降序（最近更新的在前面） */\n\n  SortByEnum[\"UpdatedatDesc\"] = \"UPDATEDAT_DESC\";\n  /** 按照更新时间升序（最近更新的在后面） */\n\n  SortByEnum[\"UpdatedatAsc\"] = \"UPDATEDAT_ASC\";\n})(SortByEnum || (SortByEnum = {}));\n\nexport var UserStatus;\n\n(function (UserStatus) {\n  /** 已停用 */\n  UserStatus[\"Suspended\"] = \"Suspended\";\n  /** 已离职 */\n\n  UserStatus[\"Resigned\"] = \"Resigned\";\n  /** 已激活（正常状态） */\n\n  UserStatus[\"Activated\"] = \"Activated\";\n  /** 已归档 */\n\n  UserStatus[\"Archived\"] = \"Archived\";\n})(UserStatus || (UserStatus = {}));\n\nexport var UdfDataType;\n\n(function (UdfDataType) {\n  UdfDataType[\"String\"] = \"STRING\";\n  UdfDataType[\"Number\"] = \"NUMBER\";\n  UdfDataType[\"Datetime\"] = \"DATETIME\";\n  UdfDataType[\"Boolean\"] = \"BOOLEAN\";\n  UdfDataType[\"Object\"] = \"OBJECT\";\n  UdfDataType[\"Select\"] = \"SELECT\";\n})(UdfDataType || (UdfDataType = {}));\n\nexport var PolicyEffect;\n\n(function (PolicyEffect) {\n  PolicyEffect[\"Allow\"] = \"ALLOW\";\n  PolicyEffect[\"Deny\"] = \"DENY\";\n})(PolicyEffect || (PolicyEffect = {}));\n\nexport var UdfTargetType;\n\n(function (UdfTargetType) {\n  UdfTargetType[\"Node\"] = \"NODE\";\n  UdfTargetType[\"Org\"] = \"ORG\";\n  UdfTargetType[\"User\"] = \"USER\";\n  UdfTargetType[\"Userpool\"] = \"USERPOOL\";\n  UdfTargetType[\"Role\"] = \"ROLE\";\n  UdfTargetType[\"Permission\"] = \"PERMISSION\";\n  UdfTargetType[\"Application\"] = \"APPLICATION\";\n})(UdfTargetType || (UdfTargetType = {}));\n\nexport var WhitelistType;\n\n(function (WhitelistType) {\n  WhitelistType[\"Username\"] = \"USERNAME\";\n  WhitelistType[\"Email\"] = \"EMAIL\";\n  WhitelistType[\"Phone\"] = \"PHONE\";\n})(WhitelistType || (WhitelistType = {}));\n/** 邮件使用场景 */\n\n\nexport var EmailScene;\n\n(function (EmailScene) {\n  /** 发送重置密码邮件，邮件中包含验证码 */\n  EmailScene[\"ResetPassword\"] = \"RESET_PASSWORD\"; // - 重置密码验证码\n\n  EmailScene[\"RESET_PASSWORD_VERIFY_CODE\"] = \"RESET_PASSWORD_VERIFY_CODE\";\n  /** 发送验证邮箱的邮件 */\n\n  EmailScene[\"VerifyEmail\"] = \"VERIFY_EMAIL\"; // - 首次邮箱登录验证\n\n  EmailScene[\"FIRST_EMAIL_LOGIN_VERIFY\"] = \"FIRST_EMAIL_LOGIN_VERIFY\"; // - 在控制台发起验证\n\n  EmailScene[\"CONSOLE_CONDUCTED_VERIFY\"] = \"CONSOLE_CONDUCTED_VERIFY\";\n  /** 发送修改邮箱邮件，邮件中包含验证码 */\n\n  EmailScene[\"ChangeEmail\"] = \"CHANGE_EMAIL\"; // - 邮箱绑定验证码\n\n  EmailScene[\"EMAIL_BIND_VERIFY_CODE\"] = \"EMAIL_BIND_VERIFY_CODE\"; // - 邮箱解绑验证码\n\n  EmailScene[\"EMAIL_UNBIND_VERIFY_CODE\"] = \"EMAIL_UNBIND_VERIFY_CODE\";\n  /** 发送 MFA 验证邮件 */\n\n  EmailScene[\"MfaVerify\"] = \"MFA_VERIFY\";\n  /** 发送邮件验证码 */\n\n  EmailScene[\"VerifyCode\"] = \"VERIFY_CODE\"; // - 注册验证码\n\n  EmailScene[\"REGISTER_VERIFY_CODE\"] = \"REGISTER_VERIFY_CODE\"; // - 登录验证码\n\n  EmailScene[\"LOGIN_VERIFY_CODE\"] = \"LOGIN_VERIFY_CODE\"; // - MFA 验证\n\n  EmailScene[\"MFA_VERIFY_CODE\"] = \"MFA_VERIFY_CODE\"; // - 信息补全验证码\n\n  EmailScene[\"INFORMATION_COMPLETION_VERIFY_CODE\"] = \"INFORMATION_COMPLETION_VERIFY_CODE\";\n})(EmailScene || (EmailScene = {}));\n\nexport var AddMemberDocument = \"\\n    mutation addMember($page: Int, $limit: Int, $sortBy: SortByEnum, $includeChildrenNodes: Boolean, $nodeId: String, $orgId: String, $nodeCode: String, $userIds: [String!]!, $isLeader: Boolean) {\\n  addMember(nodeId: $nodeId, orgId: $orgId, nodeCode: $nodeCode, userIds: $userIds, isLeader: $isLeader) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    createdAt\\n    updatedAt\\n    children\\n    users(page: $page, limit: $limit, sortBy: $sortBy, includeChildrenNodes: $includeChildrenNodes) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        userPoolId\\n        username\\n        status\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var AddNodeDocument = \"\\n    mutation addNode($orgId: String!, $parentNodeId: String, $name: String!, $nameI18n: String, $description: String, $descriptionI18n: String, $order: Int, $code: String) {\\n  addNode(orgId: $orgId, parentNodeId: $parentNodeId, name: $name, nameI18n: $nameI18n, description: $description, descriptionI18n: $descriptionI18n, order: $order, code: $code) {\\n    id\\n    rootNode {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n    nodes {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n  }\\n}\\n    \";\nexport var AddNodeV2Document = \"\\n    mutation addNodeV2($orgId: String!, $parentNodeId: String, $name: String!, $nameI18n: String, $description: String, $descriptionI18n: String, $order: Int, $code: String) {\\n  addNodeV2(orgId: $orgId, parentNodeId: $parentNodeId, name: $name, nameI18n: $nameI18n, description: $description, descriptionI18n: $descriptionI18n, order: $order, code: $code) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    createdAt\\n    updatedAt\\n    children\\n  }\\n}\\n    \";\nexport var AddPolicyAssignmentsDocument = \"\\n    mutation addPolicyAssignments($policies: [String!]!, $targetType: PolicyAssignmentTargetType!, $targetIdentifiers: [String!], $inheritByChildren: Boolean, $namespace: String) {\\n  addPolicyAssignments(policies: $policies, targetType: $targetType, targetIdentifiers: $targetIdentifiers, inheritByChildren: $inheritByChildren, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var AddUserToGroupDocument = \"\\n    mutation addUserToGroup($userIds: [String!]!, $code: String) {\\n  addUserToGroup(userIds: $userIds, code: $code) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var AddWhitelistDocument = \"\\n    mutation addWhitelist($type: WhitelistType!, $list: [String!]!) {\\n  addWhitelist(type: $type, list: $list) {\\n    createdAt\\n    updatedAt\\n    value\\n  }\\n}\\n    \";\nexport var AllowDocument = \"\\n    mutation allow($resource: String!, $action: String!, $userId: String, $userIds: [String!], $roleCode: String, $roleCodes: [String!], $namespace: String) {\\n  allow(resource: $resource, action: $action, userId: $userId, userIds: $userIds, roleCode: $roleCode, roleCodes: $roleCodes, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var AssignRoleDocument = \"\\n    mutation assignRole($namespace: String, $roleCode: String, $roleCodes: [String], $userIds: [String!], $groupCodes: [String!], $nodeCodes: [String!]) {\\n  assignRole(namespace: $namespace, roleCode: $roleCode, roleCodes: $roleCodes, userIds: $userIds, groupCodes: $groupCodes, nodeCodes: $nodeCodes) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var AuthorizeResourceDocument = \"\\n    mutation authorizeResource($namespace: String, $resource: String, $resourceType: ResourceType, $opts: [AuthorizeResourceOpt]) {\\n  authorizeResource(namespace: $namespace, resource: $resource, resourceType: $resourceType, opts: $opts) {\\n    code\\n    message\\n  }\\n}\\n    \";\nexport var BindEmailDocument = \"\\n    mutation bindEmail($email: String!, $emailCode: String!) {\\n  bindEmail(email: $email, emailCode: $emailCode) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var BindPhoneDocument = \"\\n    mutation bindPhone($phone: String!, $phoneCode: String!, $phoneCountryCode: String) {\\n  bindPhone(phone: $phone, phoneCode: $phoneCode, phoneCountryCode: $phoneCountryCode) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var ChangeMfaDocument = \"\\n    mutation changeMfa($enable: Boolean, $id: String, $userId: String, $userPoolId: String, $refresh: Boolean) {\\n  changeMfa(enable: $enable, id: $id, userId: $userId, userPoolId: $userPoolId, refresh: $refresh) {\\n    id\\n    userId\\n    userPoolId\\n    enable\\n    secret\\n  }\\n}\\n    \";\nexport var ConfigEmailTemplateDocument = \"\\n    mutation configEmailTemplate($input: ConfigEmailTemplateInput!) {\\n  configEmailTemplate(input: $input) {\\n    type\\n    name\\n    subject\\n    sender\\n    content\\n    redirectTo\\n    hasURL\\n    expiresIn\\n    enabled\\n    isSystem\\n  }\\n}\\n    \";\nexport var CreateFunctionDocument = \"\\n    mutation createFunction($input: CreateFunctionInput!) {\\n  createFunction(input: $input) {\\n    id\\n    name\\n    sourceCode\\n    description\\n    url\\n  }\\n}\\n    \";\nexport var CreateGroupDocument = \"\\n    mutation createGroup($code: String!, $name: String!, $description: String) {\\n  createGroup(code: $code, name: $name, description: $description) {\\n    code\\n    name\\n    description\\n    createdAt\\n    updatedAt\\n  }\\n}\\n    \";\nexport var CreateOrgDocument = \"\\n    mutation createOrg($name: String!, $code: String, $description: String, $tenantId: String) {\\n  createOrg(name: $name, code: $code, description: $description, tenantId: $tenantId) {\\n    id\\n    rootNode {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n    nodes {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n  }\\n}\\n    \";\nexport var CreatePolicyDocument = \"\\n    mutation createPolicy($namespace: String, $code: String!, $description: String, $statements: [PolicyStatementInput!]!) {\\n  createPolicy(namespace: $namespace, code: $code, description: $description, statements: $statements) {\\n    namespace\\n    code\\n    isDefault\\n    description\\n    statements {\\n      resource\\n      actions\\n      effect\\n      condition {\\n        param\\n        operator\\n        value\\n      }\\n    }\\n    createdAt\\n    updatedAt\\n    assignmentsCount\\n  }\\n}\\n    \";\nexport var CreateRoleDocument = \"\\n    mutation createRole($namespace: String, $code: String!, $description: String, $parent: String) {\\n  createRole(namespace: $namespace, code: $code, description: $description, parent: $parent) {\\n    id\\n    namespace\\n    code\\n    arn\\n    description\\n    createdAt\\n    updatedAt\\n    parent {\\n      namespace\\n      code\\n      arn\\n      description\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n}\\n    \";\nexport var CreateUserDocument = \"\\n    mutation createUser($userInfo: CreateUserInput!, $params: String, $identity: CreateUserIdentityInput, $keepPassword: Boolean, $resetPasswordOnFirstLogin: Boolean) {\\n  createUser(userInfo: $userInfo, params: $params, identity: $identity, keepPassword: $keepPassword, resetPasswordOnFirstLogin: $resetPasswordOnFirstLogin) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var CreateUserWithCustomDataDocument = \"\\n    mutation createUserWithCustomData($userInfo: CreateUserInput!, $keepPassword: Boolean, $params: String) {\\n  createUser(userInfo: $userInfo, keepPassword: $keepPassword, params: $params) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var CreateUserpoolDocument = \"\\n    mutation createUserpool($name: String!, $domain: String!, $description: String, $logo: String, $userpoolTypes: [String!]) {\\n  createUserpool(name: $name, domain: $domain, description: $description, logo: $logo, userpoolTypes: $userpoolTypes) {\\n    id\\n    name\\n    domain\\n    description\\n    secret\\n    jwtSecret\\n    userpoolTypes {\\n      code\\n      name\\n      description\\n      image\\n      sdks\\n    }\\n    logo\\n    createdAt\\n    updatedAt\\n    emailVerifiedDefault\\n    sendWelcomeEmail\\n    registerDisabled\\n    appSsoEnabled\\n    showWxQRCodeWhenRegisterDisabled\\n    allowedOrigins\\n    tokenExpiresAfter\\n    isDeleted\\n    frequentRegisterCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    loginFailCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    changePhoneStrategy {\\n      verifyOldPhone\\n    }\\n    changeEmailStrategy {\\n      verifyOldEmail\\n    }\\n    qrcodeLoginStrategy {\\n      qrcodeExpiresAfter\\n      returnFullUserInfo\\n      allowExchangeUserInfoFromBrowser\\n      ticketExpiresAfter\\n    }\\n    app2WxappLoginStrategy {\\n      ticketExpriresAfter\\n      ticketExchangeUserInfoNeedSecret\\n    }\\n    whitelist {\\n      phoneEnabled\\n      emailEnabled\\n      usernameEnabled\\n    }\\n    customSMSProvider {\\n      enabled\\n      provider\\n    }\\n    packageType\\n  }\\n}\\n    \";\nexport var DeleteFunctionDocument = \"\\n    mutation deleteFunction($id: String!) {\\n  deleteFunction(id: $id) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteGroupsDocument = \"\\n    mutation deleteGroups($codeList: [String!]!) {\\n  deleteGroups(codeList: $codeList) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteNodeDocument = \"\\n    mutation deleteNode($orgId: String!, $nodeId: String!) {\\n  deleteNode(orgId: $orgId, nodeId: $nodeId) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteOrgDocument = \"\\n    mutation deleteOrg($id: String!) {\\n  deleteOrg(id: $id) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeletePoliciesDocument = \"\\n    mutation deletePolicies($codeList: [String!]!, $namespace: String) {\\n  deletePolicies(codeList: $codeList, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeletePolicyDocument = \"\\n    mutation deletePolicy($code: String!, $namespace: String) {\\n  deletePolicy(code: $code, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteRoleDocument = \"\\n    mutation deleteRole($code: String!, $namespace: String) {\\n  deleteRole(code: $code, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteRolesDocument = \"\\n    mutation deleteRoles($codeList: [String!]!, $namespace: String) {\\n  deleteRoles(codeList: $codeList, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteUserDocument = \"\\n    mutation deleteUser($id: String!) {\\n  deleteUser(id: $id) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteUserpoolDocument = \"\\n    mutation deleteUserpool {\\n  deleteUserpool {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteUsersDocument = \"\\n    mutation deleteUsers($ids: [String!]!) {\\n  deleteUsers(ids: $ids) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DisableEmailTemplateDocument = \"\\n    mutation disableEmailTemplate($type: EmailTemplateType!) {\\n  disableEmailTemplate(type: $type) {\\n    type\\n    name\\n    subject\\n    sender\\n    content\\n    redirectTo\\n    hasURL\\n    expiresIn\\n    enabled\\n    isSystem\\n  }\\n}\\n    \";\nexport var DisbalePolicyAssignmentDocument = \"\\n    mutation disbalePolicyAssignment($policy: String!, $targetType: PolicyAssignmentTargetType!, $targetIdentifier: String!, $namespace: String) {\\n  disbalePolicyAssignment(policy: $policy, targetType: $targetType, targetIdentifier: $targetIdentifier, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var EnableEmailTemplateDocument = \"\\n    mutation enableEmailTemplate($type: EmailTemplateType!) {\\n  enableEmailTemplate(type: $type) {\\n    type\\n    name\\n    subject\\n    sender\\n    content\\n    redirectTo\\n    hasURL\\n    expiresIn\\n    enabled\\n    isSystem\\n  }\\n}\\n    \";\nexport var EnablePolicyAssignmentDocument = \"\\n    mutation enablePolicyAssignment($policy: String!, $targetType: PolicyAssignmentTargetType!, $targetIdentifier: String!, $namespace: String) {\\n  enablePolicyAssignment(policy: $policy, targetType: $targetType, targetIdentifier: $targetIdentifier, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var LoginByEmailDocument = \"\\n    mutation loginByEmail($input: LoginByEmailInput!) {\\n  loginByEmail(input: $input) {\\n    id\\n    arn\\n    status\\n    userPoolId\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    newlyCreated\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var LoginByPhoneCodeDocument = \"\\n    mutation loginByPhoneCode($input: LoginByPhoneCodeInput!) {\\n  loginByPhoneCode(input: $input) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    newlyCreated\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var LoginByPhonePasswordDocument = \"\\n    mutation loginByPhonePassword($input: LoginByPhonePasswordInput!) {\\n  loginByPhonePassword(input: $input) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    newlyCreated\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var LoginBySubAccountDocument = \"\\n    mutation loginBySubAccount($account: String!, $password: String!, $captchaCode: String, $clientIp: String) {\\n  loginBySubAccount(account: $account, password: $password, captchaCode: $captchaCode, clientIp: $clientIp) {\\n    id\\n    arn\\n    status\\n    userPoolId\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    newlyCreated\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var LoginByUsernameDocument = \"\\n    mutation loginByUsername($input: LoginByUsernameInput!) {\\n  loginByUsername(input: $input) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    newlyCreated\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var MoveMembersDocument = \"\\n    mutation moveMembers($userIds: [String!]!, $sourceNodeId: String!, $targetNodeId: String!) {\\n  moveMembers(userIds: $userIds, sourceNodeId: $sourceNodeId, targetNodeId: $targetNodeId) {\\n    code\\n    message\\n  }\\n}\\n    \";\nexport var MoveNodeDocument = \"\\n    mutation moveNode($orgId: String!, $nodeId: String!, $targetParentId: String!) {\\n  moveNode(orgId: $orgId, nodeId: $nodeId, targetParentId: $targetParentId) {\\n    id\\n    rootNode {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n    nodes {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n  }\\n}\\n    \";\nexport var RefreshAccessTokenDocument = \"\\n    mutation refreshAccessToken($accessToken: String) {\\n  refreshAccessToken(accessToken: $accessToken) {\\n    accessToken\\n    exp\\n    iat\\n  }\\n}\\n    \";\nexport var RefreshTokenDocument = \"\\n    mutation refreshToken($id: String) {\\n  refreshToken(id: $id) {\\n    token\\n    iat\\n    exp\\n  }\\n}\\n    \";\nexport var RefreshUserpoolSecretDocument = \"\\n    mutation refreshUserpoolSecret {\\n  refreshUserpoolSecret\\n}\\n    \";\nexport var RegisterByEmailDocument = \"\\n    mutation registerByEmail($input: RegisterByEmailInput!) {\\n  registerByEmail(input: $input) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var RegisterByPhoneCodeDocument = \"\\n    mutation registerByPhoneCode($input: RegisterByPhoneCodeInput!) {\\n  registerByPhoneCode(input: $input) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var RegisterByUsernameDocument = \"\\n    mutation registerByUsername($input: RegisterByUsernameInput!) {\\n  registerByUsername(input: $input) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var RemoveMemberDocument = \"\\n    mutation removeMember($page: Int, $limit: Int, $sortBy: SortByEnum, $includeChildrenNodes: Boolean, $nodeId: String, $orgId: String, $nodeCode: String, $userIds: [String!]!) {\\n  removeMember(nodeId: $nodeId, orgId: $orgId, nodeCode: $nodeCode, userIds: $userIds) {\\n    id\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    createdAt\\n    updatedAt\\n    children\\n    users(page: $page, limit: $limit, sortBy: $sortBy, includeChildrenNodes: $includeChildrenNodes) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        userPoolId\\n        status\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        phoneCountryCode\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var RemovePolicyAssignmentsDocument = \"\\n    mutation removePolicyAssignments($policies: [String!]!, $targetType: PolicyAssignmentTargetType!, $targetIdentifiers: [String!], $namespace: String) {\\n  removePolicyAssignments(policies: $policies, targetType: $targetType, targetIdentifiers: $targetIdentifiers, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var RemoveUdfDocument = \"\\n    mutation removeUdf($targetType: UDFTargetType!, $key: String!) {\\n  removeUdf(targetType: $targetType, key: $key) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var RemoveUdvDocument = \"\\n    mutation removeUdv($targetType: UDFTargetType!, $targetId: String!, $key: String!) {\\n  removeUdv(targetType: $targetType, targetId: $targetId, key: $key) {\\n    key\\n    dataType\\n    value\\n    label\\n  }\\n}\\n    \";\nexport var RemoveUserFromGroupDocument = \"\\n    mutation removeUserFromGroup($userIds: [String!]!, $code: String) {\\n  removeUserFromGroup(userIds: $userIds, code: $code) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var RemoveWhitelistDocument = \"\\n    mutation removeWhitelist($type: WhitelistType!, $list: [String!]!) {\\n  removeWhitelist(type: $type, list: $list) {\\n    createdAt\\n    updatedAt\\n    value\\n  }\\n}\\n    \";\nexport var ResetPasswordDocument = \"\\n    mutation resetPassword($phone: String, $phoneCountryCode: String, $email: String, $code: String!, $newPassword: String!) {\\n  resetPassword(phone: $phone, phoneCountryCode: $phoneCountryCode, email: $email, code: $code, newPassword: $newPassword) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var ResetPasswordByFirstLoginTokenDocument = \"\\n    mutation resetPasswordByFirstLoginToken($token: String!, $password: String!) {\\n  resetPasswordByFirstLoginToken(token: $token, password: $password) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var ResetPasswordByForceResetTokenDocument = \"\\n    mutation resetPasswordByForceResetToken($token: String!, $oldPassword: String!, $newPassword: String!) {\\n  resetPasswordByForceResetToken(token: $token, oldPassword: $oldPassword, newPassword: $newPassword) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var RevokeRoleDocument = \"\\n    mutation revokeRole($namespace: String, $roleCode: String, $roleCodes: [String], $userIds: [String!], $groupCodes: [String!], $nodeCodes: [String!]) {\\n  revokeRole(namespace: $namespace, roleCode: $roleCode, roleCodes: $roleCodes, userIds: $userIds, groupCodes: $groupCodes, nodeCodes: $nodeCodes) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var SendEmailDocument = \"\\n    mutation sendEmail($email: String!, $scene: EmailScene!) {\\n  sendEmail(email: $email, scene: $scene) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var SendFirstLoginVerifyEmailDocument = \"\\n    mutation sendFirstLoginVerifyEmail($userId: String!, $appId: String!) {\\n  sendFirstLoginVerifyEmail(userId: $userId, appId: $appId) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var SetMainDepartmentDocument = \"\\n    mutation setMainDepartment($userId: String!, $departmentId: String) {\\n  setMainDepartment(userId: $userId, departmentId: $departmentId) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var SetUdfDocument = \"\\n    mutation setUdf($targetType: UDFTargetType!, $key: String!, $dataType: UDFDataType!, $label: String!, $options: String) {\\n  setUdf(targetType: $targetType, key: $key, dataType: $dataType, label: $label, options: $options) {\\n    targetType\\n    dataType\\n    key\\n    label\\n    options\\n  }\\n}\\n    \";\nexport var SetUdfValueBatchDocument = \"\\n    mutation setUdfValueBatch($targetType: UDFTargetType!, $input: [SetUdfValueBatchInput!]!) {\\n  setUdfValueBatch(targetType: $targetType, input: $input) {\\n    code\\n    message\\n  }\\n}\\n    \";\nexport var SetUdvDocument = \"\\n    mutation setUdv($targetType: UDFTargetType!, $targetId: String!, $key: String!, $value: String!) {\\n  setUdv(targetType: $targetType, targetId: $targetId, key: $key, value: $value) {\\n    key\\n    dataType\\n    value\\n    label\\n  }\\n}\\n    \";\nexport var SetUdvBatchDocument = \"\\n    mutation setUdvBatch($targetType: UDFTargetType!, $targetId: String!, $udvList: [UserDefinedDataInput!]) {\\n  setUdvBatch(targetType: $targetType, targetId: $targetId, udvList: $udvList) {\\n    key\\n    dataType\\n    value\\n    label\\n  }\\n}\\n    \";\nexport var UnbindEmailDocument = \"\\n    mutation unbindEmail {\\n  unbindEmail {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UnbindPhoneDocument = \"\\n    mutation unbindPhone {\\n  unbindPhone {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UpdateEmailDocument = \"\\n    mutation updateEmail($email: String!, $emailCode: String!, $oldEmail: String, $oldEmailCode: String) {\\n  updateEmail(email: $email, emailCode: $emailCode, oldEmail: $oldEmail, oldEmailCode: $oldEmailCode) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UpdateFunctionDocument = \"\\n    mutation updateFunction($input: UpdateFunctionInput!) {\\n  updateFunction(input: $input) {\\n    id\\n    name\\n    sourceCode\\n    description\\n    url\\n  }\\n}\\n    \";\nexport var UpdateGroupDocument = \"\\n    mutation updateGroup($code: String!, $name: String, $description: String, $newCode: String) {\\n  updateGroup(code: $code, name: $name, description: $description, newCode: $newCode) {\\n    code\\n    name\\n    description\\n    createdAt\\n    updatedAt\\n  }\\n}\\n    \";\nexport var UpdateNodeDocument = \"\\n    mutation updateNode($page: Int, $limit: Int, $sortBy: SortByEnum, $includeChildrenNodes: Boolean, $id: String!, $name: String, $code: String, $description: String) {\\n  updateNode(id: $id, name: $name, code: $code, description: $description) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    createdAt\\n    updatedAt\\n    children\\n    users(page: $page, limit: $limit, sortBy: $sortBy, includeChildrenNodes: $includeChildrenNodes) {\\n      totalCount\\n    }\\n  }\\n}\\n    \";\nexport var UpdatePasswordDocument = \"\\n    mutation updatePassword($newPassword: String!, $oldPassword: String) {\\n  updatePassword(newPassword: $newPassword, oldPassword: $oldPassword) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UpdatePhoneDocument = \"\\n    mutation updatePhone($phone: String!, $phoneCode: String!, $oldPhone: String, $oldPhoneCode: String, $phoneCountryCode: String, $oldPhoneCountryCode: String) {\\n  updatePhone(phone: $phone, phoneCode: $phoneCode, oldPhone: $oldPhone, oldPhoneCode: $oldPhoneCode, phoneCountryCode: $phoneCountryCode, oldPhoneCountryCode: $oldPhoneCountryCode) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UpdatePolicyDocument = \"\\n    mutation updatePolicy($namespace: String, $code: String!, $description: String, $statements: [PolicyStatementInput!], $newCode: String) {\\n  updatePolicy(namespace: $namespace, code: $code, description: $description, statements: $statements, newCode: $newCode) {\\n    namespace\\n    code\\n    description\\n    statements {\\n      resource\\n      actions\\n      effect\\n      condition {\\n        param\\n        operator\\n        value\\n      }\\n    }\\n    createdAt\\n    updatedAt\\n  }\\n}\\n    \";\nexport var UpdateRoleDocument = \"\\n    mutation updateRole($code: String!, $description: String, $newCode: String, $namespace: String) {\\n  updateRole(code: $code, description: $description, newCode: $newCode, namespace: $namespace) {\\n    id\\n    namespace\\n    code\\n    arn\\n    description\\n    createdAt\\n    updatedAt\\n    parent {\\n      namespace\\n      code\\n      arn\\n      description\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n}\\n    \";\nexport var UpdateUserDocument = \"\\n    mutation updateUser($id: String, $input: UpdateUserInput!, $emailToken: String, $phoneToken: String) {\\n  updateUser(id: $id, input: $input, emailToken: $emailToken, phoneToken: $phoneToken) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UpdateUserpoolDocument = \"\\n    mutation updateUserpool($input: UpdateUserpoolInput!) {\\n  updateUserpool(input: $input) {\\n    id\\n    name\\n    domain\\n    description\\n    secret\\n    jwtSecret\\n    userpoolTypes {\\n      code\\n      name\\n      description\\n      image\\n      sdks\\n    }\\n    logo\\n    createdAt\\n    updatedAt\\n    emailVerifiedDefault\\n    sendWelcomeEmail\\n    registerDisabled\\n    appSsoEnabled\\n    showWxQRCodeWhenRegisterDisabled\\n    allowedOrigins\\n    tokenExpiresAfter\\n    isDeleted\\n    frequentRegisterCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    loginFailCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    loginFailStrategy\\n    loginPasswordFailCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    changePhoneStrategy {\\n      verifyOldPhone\\n    }\\n    changeEmailStrategy {\\n      verifyOldEmail\\n    }\\n    qrcodeLoginStrategy {\\n      qrcodeExpiresAfter\\n      returnFullUserInfo\\n      allowExchangeUserInfoFromBrowser\\n      ticketExpiresAfter\\n    }\\n    app2WxappLoginStrategy {\\n      ticketExpriresAfter\\n      ticketExchangeUserInfoNeedSecret\\n    }\\n    whitelist {\\n      phoneEnabled\\n      emailEnabled\\n      usernameEnabled\\n    }\\n    customSMSProvider {\\n      enabled\\n      provider\\n      config\\n    }\\n    packageType\\n    useCustomUserStore\\n    loginRequireEmailVerified\\n    verifyCodeLength\\n    verifyCodeMaxAttempts\\n  }\\n}\\n    \";\nexport var AccessTokenDocument = \"\\n    query accessToken($userPoolId: String!, $secret: String!) {\\n  accessToken(userPoolId: $userPoolId, secret: $secret) {\\n    accessToken\\n    exp\\n    iat\\n  }\\n}\\n    \";\nexport var ArchivedUsersDocument = \"\\n    query archivedUsers($page: Int, $limit: Int) {\\n  archivedUsers(page: $page, limit: $limit) {\\n    totalCount\\n    list {\\n      id\\n      arn\\n      status\\n      userPoolId\\n      username\\n      email\\n      emailVerified\\n      phone\\n      phoneVerified\\n      unionid\\n      openid\\n      nickname\\n      registerSource\\n      photo\\n      password\\n      oauth\\n      token\\n      tokenExpiredAt\\n      loginsCount\\n      lastLogin\\n      lastIP\\n      signedUp\\n      blocked\\n      isDeleted\\n      device\\n      browser\\n      company\\n      name\\n      givenName\\n      familyName\\n      middleName\\n      profile\\n      preferredUsername\\n      website\\n      gender\\n      birthdate\\n      zoneinfo\\n      locale\\n      address\\n      formatted\\n      streetAddress\\n      locality\\n      region\\n      postalCode\\n      city\\n      province\\n      country\\n      createdAt\\n      updatedAt\\n      externalId\\n      phoneCountryCode\\n    }\\n  }\\n}\\n    \";\nexport var AuthorizedTargetsDocument = \"\\n    query authorizedTargets($namespace: String!, $resourceType: ResourceType!, $resource: String!, $targetType: PolicyAssignmentTargetType, $actions: AuthorizedTargetsActionsInput) {\\n  authorizedTargets(namespace: $namespace, resource: $resource, resourceType: $resourceType, targetType: $targetType, actions: $actions) {\\n    totalCount\\n    list {\\n      targetType\\n      targetIdentifier\\n      actions\\n    }\\n  }\\n}\\n    \";\nexport var CheckLoginStatusDocument = \"\\n    query checkLoginStatus($token: String) {\\n  checkLoginStatus(token: $token) {\\n    code\\n    message\\n    status\\n    exp\\n    iat\\n    data {\\n      id\\n      userPoolId\\n      arn\\n    }\\n  }\\n}\\n    \";\nexport var CheckPasswordStrengthDocument = \"\\n    query checkPasswordStrength($password: String!) {\\n  checkPasswordStrength(password: $password) {\\n    valid\\n    message\\n  }\\n}\\n    \";\nexport var ChildrenNodesDocument = \"\\n    query childrenNodes($nodeId: String!) {\\n  childrenNodes(nodeId: $nodeId) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    createdAt\\n    updatedAt\\n    children\\n  }\\n}\\n    \";\nexport var EmailTemplatesDocument = \"\\n    query emailTemplates {\\n  emailTemplates {\\n    type\\n    name\\n    subject\\n    sender\\n    content\\n    redirectTo\\n    hasURL\\n    expiresIn\\n    enabled\\n    isSystem\\n  }\\n}\\n    \";\nexport var FindUserDocument = \"\\n    query findUser($email: String, $phone: String, $username: String, $externalId: String, $identity: FindUserByIdentityInput) {\\n  findUser(email: $email, phone: $phone, username: $username, externalId: $externalId, identity: $identity) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var FindUserWithCustomDataDocument = \"\\n    query findUserWithCustomData($email: String, $phone: String, $username: String, $externalId: String) {\\n  findUser(email: $email, phone: $phone, username: $username, externalId: $externalId) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var FunctionDocument = \"\\n    query function($id: String) {\\n  function(id: $id) {\\n    id\\n    name\\n    sourceCode\\n    description\\n    url\\n  }\\n}\\n    \";\nexport var FunctionsDocument = \"\\n    query functions($page: Int, $limit: Int, $sortBy: SortByEnum) {\\n  functions(page: $page, limit: $limit, sortBy: $sortBy) {\\n    list {\\n      id\\n      name\\n      sourceCode\\n      description\\n      url\\n    }\\n    totalCount\\n  }\\n}\\n    \";\nexport var GetUserDepartmentsDocument = \"\\n    query getUserDepartments($id: String!, $orgId: String) {\\n  user(id: $id) {\\n    departments(orgId: $orgId) {\\n      totalCount\\n      list {\\n        department {\\n          id\\n          orgId\\n          name\\n          nameI18n\\n          description\\n          descriptionI18n\\n          order\\n          code\\n          root\\n          depth\\n          path\\n          codePath\\n          namePath\\n          createdAt\\n          updatedAt\\n          children\\n          isVirtualNode\\n        }\\n        isMainDepartment\\n        joinedAt\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var GetUserGroupsDocument = \"\\n    query getUserGroups($id: String!) {\\n  user(id: $id) {\\n    groups {\\n      totalCount\\n      list {\\n        code\\n        name\\n        description\\n        createdAt\\n        updatedAt\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var GetUserRolesDocument = \"\\n    query getUserRoles($id: String!, $namespace: String) {\\n  user(id: $id) {\\n    roles(namespace: $namespace) {\\n      totalCount\\n      list {\\n        id\\n        code\\n        namespace\\n        arn\\n        description\\n        createdAt\\n        updatedAt\\n        parent {\\n          code\\n          namespace\\n          arn\\n          description\\n          createdAt\\n          updatedAt\\n        }\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var GroupDocument = \"\\n    query group($code: String!) {\\n  group(code: $code) {\\n    code\\n    name\\n    description\\n    createdAt\\n    updatedAt\\n  }\\n}\\n    \";\nexport var GroupWithUsersDocument = \"\\n    query groupWithUsers($code: String!, $page: Int, $limit: Int) {\\n  group(code: $code) {\\n    users(page: $page, limit: $limit) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        status\\n        userPoolId\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var GroupWithUsersWithCustomDataDocument = \"\\n    query groupWithUsersWithCustomData($code: String!, $page: Int, $limit: Int) {\\n  group(code: $code) {\\n    users(page: $page, limit: $limit) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        status\\n        userPoolId\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n        customData {\\n          key\\n          value\\n          dataType\\n          label\\n        }\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var GroupsDocument = \"\\n    query groups($userId: String, $page: Int, $limit: Int, $sortBy: SortByEnum) {\\n  groups(userId: $userId, page: $page, limit: $limit, sortBy: $sortBy) {\\n    totalCount\\n    list {\\n      code\\n      name\\n      description\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n}\\n    \";\nexport var IsActionAllowedDocument = \"\\n    query isActionAllowed($resource: String!, $action: String!, $userId: String!, $namespace: String) {\\n  isActionAllowed(resource: $resource, action: $action, userId: $userId, namespace: $namespace)\\n}\\n    \";\nexport var IsActionDeniedDocument = \"\\n    query isActionDenied($resource: String!, $action: String!, $userId: String!) {\\n  isActionDenied(resource: $resource, action: $action, userId: $userId)\\n}\\n    \";\nexport var IsDomainAvaliableDocument = \"\\n    query isDomainAvaliable($domain: String!) {\\n  isDomainAvaliable(domain: $domain)\\n}\\n    \";\nexport var IsRootNodeDocument = \"\\n    query isRootNode($nodeId: String!, $orgId: String!) {\\n  isRootNode(nodeId: $nodeId, orgId: $orgId)\\n}\\n    \";\nexport var IsUserExistsDocument = \"\\n    query isUserExists($email: String, $phone: String, $username: String, $externalId: String) {\\n  isUserExists(email: $email, phone: $phone, username: $username, externalId: $externalId)\\n}\\n    \";\nexport var AuthorizedResourcesDocument = \"\\n    query authorizedResources($targetType: PolicyAssignmentTargetType, $targetIdentifier: String, $namespace: String, $resourceType: String) {\\n  authorizedResources(targetType: $targetType, targetIdentifier: $targetIdentifier, namespace: $namespace, resourceType: $resourceType) {\\n    totalCount\\n    list {\\n      code\\n      type\\n      actions\\n      apiIdentifier\\n    }\\n  }\\n}\\n    \";\nexport var ListGroupAuthorizedResourcesDocument = \"\\n    query listGroupAuthorizedResources($code: String!, $namespace: String, $resourceType: String) {\\n  group(code: $code) {\\n    authorizedResources(namespace: $namespace, resourceType: $resourceType) {\\n      totalCount\\n      list {\\n        code\\n        type\\n        actions\\n        apiIdentifier\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var ListNodeByCodeAuthorizedResourcesDocument = \"\\n    query listNodeByCodeAuthorizedResources($orgId: String!, $code: String!, $namespace: String, $resourceType: String) {\\n  nodeByCode(orgId: $orgId, code: $code) {\\n    authorizedResources(namespace: $namespace, resourceType: $resourceType) {\\n      totalCount\\n      list {\\n        code\\n        type\\n        actions\\n        apiIdentifier\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var ListNodeByIdAuthorizedResourcesDocument = \"\\n    query listNodeByIdAuthorizedResources($id: String!, $namespace: String, $resourceType: String) {\\n  nodeById(id: $id) {\\n    authorizedResources(namespace: $namespace, resourceType: $resourceType) {\\n      totalCount\\n      list {\\n        code\\n        type\\n        actions\\n        apiIdentifier\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var ListRoleAuthorizedResourcesDocument = \"\\n    query listRoleAuthorizedResources($code: String!, $namespace: String, $resourceType: String) {\\n  role(code: $code, namespace: $namespace) {\\n    authorizedResources(resourceType: $resourceType) {\\n      totalCount\\n      list {\\n        code\\n        type\\n        actions\\n        apiIdentifier\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var ListUserAuthorizedResourcesDocument = \"\\n    query listUserAuthorizedResources($id: String!, $namespace: String, $resourceType: String) {\\n  user(id: $id) {\\n    authorizedResources(namespace: $namespace, resourceType: $resourceType) {\\n      totalCount\\n      list {\\n        code\\n        type\\n        actions\\n        apiIdentifier\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var NodeByCodeDocument = \"\\n    query nodeByCode($orgId: String!, $code: String!) {\\n  nodeByCode(orgId: $orgId, code: $code) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    createdAt\\n    updatedAt\\n    children\\n  }\\n}\\n    \";\nexport var NodeByCodeWithMembersDocument = \"\\n    query nodeByCodeWithMembers($page: Int, $limit: Int, $sortBy: SortByEnum, $includeChildrenNodes: Boolean, $orgId: String!, $code: String!) {\\n  nodeByCode(orgId: $orgId, code: $code) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    createdAt\\n    updatedAt\\n    children\\n    users(page: $page, limit: $limit, sortBy: $sortBy, includeChildrenNodes: $includeChildrenNodes) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        userPoolId\\n        status\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var NodeByIdDocument = \"\\n    query nodeById($id: String!) {\\n  nodeById(id: $id) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    createdAt\\n    updatedAt\\n    children\\n  }\\n}\\n    \";\nexport var NodeByIdWithMembersDocument = \"\\n    query nodeByIdWithMembers($page: Int, $limit: Int, $sortBy: SortByEnum, $includeChildrenNodes: Boolean, $id: String!) {\\n  nodeById(id: $id) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    createdAt\\n    updatedAt\\n    children\\n    users(page: $page, limit: $limit, sortBy: $sortBy, includeChildrenNodes: $includeChildrenNodes) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        userPoolId\\n        status\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var OrgDocument = \"\\n    query org($id: String!) {\\n  org(id: $id) {\\n    id\\n    rootNode {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n    nodes {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n  }\\n}\\n    \";\nexport var OrgsDocument = \"\\n    query orgs($page: Int, $limit: Int, $sortBy: SortByEnum) {\\n  orgs(page: $page, limit: $limit, sortBy: $sortBy) {\\n    totalCount\\n    list {\\n      id\\n      rootNode {\\n        id\\n        name\\n        nameI18n\\n        path\\n        description\\n        descriptionI18n\\n        order\\n        code\\n        root\\n        depth\\n        createdAt\\n        updatedAt\\n        children\\n      }\\n      nodes {\\n        id\\n        name\\n        path\\n        nameI18n\\n        description\\n        descriptionI18n\\n        order\\n        code\\n        root\\n        depth\\n        createdAt\\n        updatedAt\\n        children\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var PoliciesDocument = \"\\n    query policies($page: Int, $limit: Int, $namespace: String) {\\n  policies(page: $page, limit: $limit, namespace: $namespace) {\\n    totalCount\\n    list {\\n      namespace\\n      code\\n      description\\n      createdAt\\n      updatedAt\\n      statements {\\n        resource\\n        actions\\n        effect\\n        condition {\\n          param\\n          operator\\n          value\\n        }\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var PolicyDocument = \"\\n    query policy($namespace: String, $code: String!) {\\n  policy(code: $code, namespace: $namespace) {\\n    namespace\\n    code\\n    isDefault\\n    description\\n    statements {\\n      resource\\n      actions\\n      effect\\n      condition {\\n        param\\n        operator\\n        value\\n      }\\n    }\\n    createdAt\\n    updatedAt\\n  }\\n}\\n    \";\nexport var PolicyAssignmentsDocument = \"\\n    query policyAssignments($namespace: String, $code: String, $targetType: PolicyAssignmentTargetType, $targetIdentifier: String, $page: Int, $limit: Int) {\\n  policyAssignments(namespace: $namespace, code: $code, targetType: $targetType, targetIdentifier: $targetIdentifier, page: $page, limit: $limit) {\\n    totalCount\\n    list {\\n      code\\n      targetType\\n      targetIdentifier\\n    }\\n  }\\n}\\n    \";\nexport var PolicyWithAssignmentsDocument = \"\\n    query policyWithAssignments($page: Int, $limit: Int, $code: String!) {\\n  policy(code: $code) {\\n    code\\n    isDefault\\n    description\\n    statements {\\n      resource\\n      actions\\n      effect\\n    }\\n    createdAt\\n    updatedAt\\n    assignmentsCount\\n    assignments(page: $page, limit: $limit) {\\n      code\\n      targetType\\n      targetIdentifier\\n    }\\n  }\\n}\\n    \";\nexport var PreviewEmailDocument = \"\\n    query previewEmail($type: EmailTemplateType!) {\\n  previewEmail(type: $type)\\n}\\n    \";\nexport var QiniuUptokenDocument = \"\\n    query qiniuUptoken($type: String) {\\n  qiniuUptoken(type: $type)\\n}\\n    \";\nexport var QueryMfaDocument = \"\\n    query queryMfa($id: String, $userId: String, $userPoolId: String) {\\n  queryMfa(id: $id, userId: $userId, userPoolId: $userPoolId) {\\n    id\\n    userId\\n    userPoolId\\n    enable\\n    secret\\n  }\\n}\\n    \";\nexport var RoleDocument = \"\\n    query role($code: String!, $namespace: String) {\\n  role(code: $code, namespace: $namespace) {\\n    id\\n    namespace\\n    code\\n    arn\\n    description\\n    createdAt\\n    updatedAt\\n    parent {\\n      namespace\\n      code\\n      arn\\n      description\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n}\\n    \";\nexport var RoleWithUsersDocument = \"\\n    query roleWithUsers($code: String!, $namespace: String, $page: Int, $limit: Int) {\\n  role(code: $code, namespace: $namespace) {\\n    users(page: $page, limit: $limit) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        status\\n        userPoolId\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var RoleWithUsersWithCustomDataDocument = \"\\n    query roleWithUsersWithCustomData($code: String!, $namespace: String, $page: Int, $limit: Int) {\\n  role(code: $code, namespace: $namespace) {\\n    users(page: $page, limit: $limit) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        status\\n        userPoolId\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n        customData {\\n          key\\n          value\\n          dataType\\n          label\\n        }\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var RolesDocument = \"\\n    query roles($namespace: String, $page: Int, $limit: Int, $sortBy: SortByEnum) {\\n  roles(namespace: $namespace, page: $page, limit: $limit, sortBy: $sortBy) {\\n    totalCount\\n    list {\\n      id\\n      namespace\\n      code\\n      arn\\n      description\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n}\\n    \";\nexport var RootNodeDocument = \"\\n    query rootNode($orgId: String!) {\\n  rootNode(orgId: $orgId) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    codePath\\n    namePath\\n    createdAt\\n    updatedAt\\n    children\\n  }\\n}\\n    \";\nexport var SearchNodesDocument = \"\\n    query searchNodes($keyword: String!) {\\n  searchNodes(keyword: $keyword) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    codePath\\n    namePath\\n    createdAt\\n    updatedAt\\n    children\\n  }\\n}\\n    \";\nexport var SearchUserDocument = \"\\n    query searchUser($query: String!, $fields: [String], $page: Int, $limit: Int, $departmentOpts: [SearchUserDepartmentOpt], $groupOpts: [SearchUserGroupOpt], $roleOpts: [SearchUserRoleOpt]) {\\n  searchUser(query: $query, fields: $fields, page: $page, limit: $limit, departmentOpts: $departmentOpts, groupOpts: $groupOpts, roleOpts: $roleOpts) {\\n    totalCount\\n    list {\\n      id\\n      arn\\n      userPoolId\\n      status\\n      username\\n      email\\n      emailVerified\\n      phone\\n      phoneVerified\\n      unionid\\n      openid\\n      nickname\\n      registerSource\\n      photo\\n      password\\n      oauth\\n      token\\n      tokenExpiredAt\\n      loginsCount\\n      lastLogin\\n      lastIP\\n      signedUp\\n      blocked\\n      isDeleted\\n      device\\n      browser\\n      company\\n      name\\n      givenName\\n      familyName\\n      middleName\\n      profile\\n      preferredUsername\\n      website\\n      gender\\n      birthdate\\n      zoneinfo\\n      locale\\n      address\\n      formatted\\n      streetAddress\\n      locality\\n      region\\n      postalCode\\n      city\\n      province\\n      country\\n      createdAt\\n      updatedAt\\n      externalId\\n      phoneCountryCode\\n    }\\n  }\\n}\\n    \";\nexport var SearchUserWithCustomDataDocument = \"\\n    query searchUserWithCustomData($query: String!, $fields: [String], $page: Int, $limit: Int, $departmentOpts: [SearchUserDepartmentOpt], $groupOpts: [SearchUserGroupOpt], $roleOpts: [SearchUserRoleOpt]) {\\n  searchUser(query: $query, fields: $fields, page: $page, limit: $limit, departmentOpts: $departmentOpts, groupOpts: $groupOpts, roleOpts: $roleOpts) {\\n    totalCount\\n    list {\\n      id\\n      arn\\n      userPoolId\\n      status\\n      username\\n      email\\n      emailVerified\\n      phone\\n      phoneVerified\\n      unionid\\n      openid\\n      nickname\\n      registerSource\\n      photo\\n      password\\n      oauth\\n      token\\n      tokenExpiredAt\\n      loginsCount\\n      lastLogin\\n      lastIP\\n      signedUp\\n      blocked\\n      isDeleted\\n      device\\n      browser\\n      company\\n      name\\n      givenName\\n      familyName\\n      middleName\\n      profile\\n      preferredUsername\\n      website\\n      gender\\n      birthdate\\n      zoneinfo\\n      locale\\n      address\\n      formatted\\n      streetAddress\\n      locality\\n      region\\n      postalCode\\n      city\\n      province\\n      country\\n      createdAt\\n      updatedAt\\n      externalId\\n      phoneCountryCode\\n      customData {\\n        key\\n        value\\n        dataType\\n        label\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var TemplateCodeDocument = \"\\n    query templateCode {\\n  templateCode\\n}\\n    \";\nexport var UdfDocument = \"\\n    query udf($targetType: UDFTargetType!) {\\n  udf(targetType: $targetType) {\\n    targetType\\n    dataType\\n    key\\n    label\\n    options\\n  }\\n}\\n    \";\nexport var UdfValueBatchDocument = \"\\n    query udfValueBatch($targetType: UDFTargetType!, $targetIds: [String!]!) {\\n  udfValueBatch(targetType: $targetType, targetIds: $targetIds) {\\n    targetId\\n    data {\\n      key\\n      dataType\\n      value\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var UdvDocument = \"\\n    query udv($targetType: UDFTargetType!, $targetId: String!) {\\n  udv(targetType: $targetType, targetId: $targetId) {\\n    key\\n    dataType\\n    value\\n    label\\n  }\\n}\\n    \";\nexport var UserDocument = \"\\n    query user($id: String) {\\n  user(id: $id) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    identities {\\n      openid\\n      userIdInIdp\\n      userId\\n      connectionId\\n      isSocial\\n      provider\\n      type\\n      userPoolId\\n      extIdpId\\n    }\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var UserBatchDocument = \"\\n    query userBatch($ids: [String!]!, $type: String) {\\n  userBatch(ids: $ids, type: $type) {\\n    identities {\\n      openid\\n      userIdInIdp\\n      userId\\n      connectionId\\n      isSocial\\n      provider\\n      type\\n      userPoolId\\n      extIdpId\\n    }\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UserBatchWithCustomDataDocument = \"\\n    query userBatchWithCustomData($ids: [String!]!, $type: String) {\\n  userBatch(ids: $ids, type: $type) {\\n    identities {\\n      openid\\n      userIdInIdp\\n      userId\\n      connectionId\\n      isSocial\\n      provider\\n      type\\n      userPoolId\\n      extIdpId\\n    }\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var UserWithCustomDataDocument = \"\\n    query userWithCustomData($id: String) {\\n  user(id: $id) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    identities {\\n      openid\\n      userIdInIdp\\n      userId\\n      connectionId\\n      isSocial\\n      provider\\n      userPoolId\\n      extIdpId\\n    }\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var UserpoolDocument = \"\\n    query userpool {\\n  userpool {\\n    id\\n    name\\n    domain\\n    description\\n    secret\\n    jwtSecret\\n    ownerId\\n    userpoolTypes {\\n      code\\n      name\\n      description\\n      image\\n      sdks\\n    }\\n    logo\\n    createdAt\\n    updatedAt\\n    emailVerifiedDefault\\n    sendWelcomeEmail\\n    registerDisabled\\n    appSsoEnabled\\n    showWxQRCodeWhenRegisterDisabled\\n    allowedOrigins\\n    tokenExpiresAfter\\n    isDeleted\\n    frequentRegisterCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    loginFailCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    loginPasswordFailCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    loginFailStrategy\\n    changePhoneStrategy {\\n      verifyOldPhone\\n    }\\n    changeEmailStrategy {\\n      verifyOldEmail\\n    }\\n    qrcodeLoginStrategy {\\n      qrcodeExpiresAfter\\n      returnFullUserInfo\\n      allowExchangeUserInfoFromBrowser\\n      ticketExpiresAfter\\n    }\\n    app2WxappLoginStrategy {\\n      ticketExpriresAfter\\n      ticketExchangeUserInfoNeedSecret\\n    }\\n    whitelist {\\n      phoneEnabled\\n      emailEnabled\\n      usernameEnabled\\n    }\\n    customSMSProvider {\\n      enabled\\n      provider\\n      config\\n    }\\n    packageType\\n    useCustomUserStore\\n    loginRequireEmailVerified\\n    verifyCodeLength\\n    verifyCodeMaxAttempts\\n  }\\n}\\n    \";\nexport var UserpoolTypesDocument = \"\\n    query userpoolTypes {\\n  userpoolTypes {\\n    code\\n    name\\n    description\\n    image\\n    sdks\\n  }\\n}\\n    \";\nexport var UserpoolsDocument = \"\\n    query userpools($page: Int, $limit: Int, $sortBy: SortByEnum) {\\n  userpools(page: $page, limit: $limit, sortBy: $sortBy) {\\n    totalCount\\n    list {\\n      id\\n      name\\n      domain\\n      ownerId\\n      description\\n      secret\\n      jwtSecret\\n      logo\\n      createdAt\\n      updatedAt\\n      emailVerifiedDefault\\n      sendWelcomeEmail\\n      registerDisabled\\n      appSsoEnabled\\n      showWxQRCodeWhenRegisterDisabled\\n      allowedOrigins\\n      tokenExpiresAfter\\n      isDeleted\\n      packageType\\n      useCustomUserStore\\n      loginRequireEmailVerified\\n      verifyCodeLength\\n      verifyCodeMaxAttempts\\n    }\\n  }\\n}\\n    \";\nexport var UsersDocument = \"\\n    query users($page: Int, $limit: Int, $sortBy: SortByEnum, $excludeUsersInOrg: Boolean) {\\n  users(page: $page, limit: $limit, sortBy: $sortBy, excludeUsersInOrg: $excludeUsersInOrg) {\\n    totalCount\\n    list {\\n      identities {\\n        openid\\n        userIdInIdp\\n        userId\\n        connectionId\\n        isSocial\\n        provider\\n        type\\n        userPoolId\\n        extIdpId\\n      }\\n      id\\n      arn\\n      userPoolId\\n      status\\n      username\\n      email\\n      emailVerified\\n      phone\\n      phoneVerified\\n      unionid\\n      openid\\n      nickname\\n      registerSource\\n      photo\\n      password\\n      oauth\\n      token\\n      tokenExpiredAt\\n      loginsCount\\n      lastLogin\\n      lastIP\\n      signedUp\\n      blocked\\n      isDeleted\\n      device\\n      browser\\n      company\\n      name\\n      givenName\\n      familyName\\n      middleName\\n      profile\\n      preferredUsername\\n      website\\n      gender\\n      birthdate\\n      zoneinfo\\n      locale\\n      address\\n      formatted\\n      streetAddress\\n      locality\\n      region\\n      postalCode\\n      city\\n      province\\n      country\\n      createdAt\\n      updatedAt\\n      externalId\\n      phoneCountryCode\\n    }\\n  }\\n}\\n    \";\nexport var UsersWithCustomDataDocument = \"\\n    query usersWithCustomData($page: Int, $limit: Int, $sortBy: SortByEnum, $excludeUsersInOrg: Boolean) {\\n  users(page: $page, limit: $limit, sortBy: $sortBy, excludeUsersInOrg: $excludeUsersInOrg) {\\n    totalCount\\n    list {\\n      id\\n      identities {\\n        openid\\n        userIdInIdp\\n        userId\\n        connectionId\\n        isSocial\\n        provider\\n        type\\n        userPoolId\\n        extIdpId\\n      }\\n      arn\\n      userPoolId\\n      status\\n      username\\n      email\\n      emailVerified\\n      phone\\n      phoneVerified\\n      unionid\\n      openid\\n      nickname\\n      registerSource\\n      photo\\n      password\\n      oauth\\n      token\\n      tokenExpiredAt\\n      loginsCount\\n      lastLogin\\n      lastIP\\n      signedUp\\n      blocked\\n      isDeleted\\n      device\\n      browser\\n      company\\n      name\\n      givenName\\n      familyName\\n      middleName\\n      profile\\n      preferredUsername\\n      website\\n      gender\\n      birthdate\\n      zoneinfo\\n      locale\\n      address\\n      formatted\\n      streetAddress\\n      locality\\n      region\\n      postalCode\\n      city\\n      province\\n      country\\n      createdAt\\n      updatedAt\\n      externalId\\n      phoneCountryCode\\n      customData {\\n        key\\n        value\\n        dataType\\n        label\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var WhitelistDocument = \"\\n    query whitelist($type: WhitelistType!) {\\n  whitelist(type: $type) {\\n    createdAt\\n    updatedAt\\n    value\\n  }\\n}\\n    \";","map":{"version":3,"sources":["../../../src/types/graphql.v2.ts"],"names":[],"mappings":"AA0WA,OAAA,IAAY,YAAZ;;AAAA,CAAA,UAAY,YAAZ,EAAwB;EACtB,YAAA,CAAA,MAAA,CAAA,GAAA,MAAA;EACA,YAAA,CAAA,KAAA,CAAA,GAAA,KAAA;EACA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAA;EACA,YAAA,CAAA,IAAA,CAAA,GAAA,IAAA;EACA,YAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACD,CAND,EAAY,YAAY,KAAZ,YAAY,GAAA,EAAA,CAAxB;;AAQA,OAAA,IAAY,0BAAZ;;AAAA,CAAA,UAAY,0BAAZ,EAAsC;EACpC,0BAAA,CAAA,MAAA,CAAA,GAAA,MAAA;EACA,0BAAA,CAAA,MAAA,CAAA,GAAA,MAAA;EACA,0BAAA,CAAA,OAAA,CAAA,GAAA,OAAA;EACA,0BAAA,CAAA,KAAA,CAAA,GAAA,KAAA;EACA,0BAAA,CAAA,MAAA,CAAA,GAAA,OAAA;AACD,CAND,EAAY,0BAA0B,KAA1B,0BAA0B,GAAA,EAAA,CAAtC;;AAaA,OAAA,IAAY,QAAZ;;AAAA,CAAA,UAAY,QAAZ,EAAoB;EAClB,QAAA,CAAA,KAAA,CAAA,GAAA,KAAA;EACA,QAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACD,CAHD,EAAY,QAAQ,KAAR,QAAQ,GAAA,EAAA,CAApB;;AAsEA,OAAA,IAAY,iBAAZ;;AAAA,CAAA,UAAY,iBAAZ,EAA6B;EAC3B;EACA,iBAAA,CAAA,eAAA,CAAA,GAAA,gBAAA;EACA;;EACA,iBAAA,CAAA,6BAAA,CAAA,GAAA,+BAAA;EACA;;EACA,iBAAA,CAAA,gBAAA,CAAA,GAAA,iBAAA;EACA;;EACA,iBAAA,CAAA,SAAA,CAAA,GAAA,SAAA;EACA;;EACA,iBAAA,CAAA,aAAA,CAAA,GAAA,cAAA;EACA;;EACA,iBAAA,CAAA,aAAA,CAAA,GAAA,cAAA;AACD,CAbD,EAAY,iBAAiB,KAAjB,iBAAiB,GAAA,EAAA,CAA7B;;AA6BA,OAAA,IAAY,UAAZ;;AAAA,CAAA,UAAY,UAAZ,EAAsB;EACpB;EACA,UAAA,CAAA,eAAA,CAAA,GAAA,gBAAA;EACA;;EACA,UAAA,CAAA,cAAA,CAAA,GAAA,eAAA;EACA;;EACA,UAAA,CAAA,eAAA,CAAA,GAAA,gBAAA;EACA;;EACA,UAAA,CAAA,cAAA,CAAA,GAAA,eAAA;AACD,CATD,EAAY,UAAU,KAAV,UAAU,GAAA,EAAA,CAAtB;;AA+JA,OAAA,IAAY,UAAZ;;AAAA,CAAA,UAAY,UAAZ,EAAsB;EACpB;EACA,UAAA,CAAA,WAAA,CAAA,GAAA,WAAA;EACA;;EACA,UAAA,CAAA,UAAA,CAAA,GAAA,UAAA;EACA;;EACA,UAAA,CAAA,WAAA,CAAA,GAAA,WAAA;EACA;;EACA,UAAA,CAAA,UAAA,CAAA,GAAA,UAAA;AACD,CATD,EAAY,UAAU,KAAV,UAAU,GAAA,EAAA,CAAtB;;AA6JA,OAAA,IAAY,WAAZ;;AAAA,CAAA,UAAY,WAAZ,EAAuB;EACrB,WAAA,CAAA,QAAA,CAAA,GAAA,QAAA;EACA,WAAA,CAAA,QAAA,CAAA,GAAA,QAAA;EACA,WAAA,CAAA,UAAA,CAAA,GAAA,UAAA;EACA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAA;EACA,WAAA,CAAA,QAAA,CAAA,GAAA,QAAA;EACA,WAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACD,CAPD,EAAY,WAAW,KAAX,WAAW,GAAA,EAAA,CAAvB;;AAwEA,OAAA,IAAY,YAAZ;;AAAA,CAAA,UAAY,YAAZ,EAAwB;EACtB,YAAA,CAAA,OAAA,CAAA,GAAA,OAAA;EACA,YAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACD,CAHD,EAAY,YAAY,KAAZ,YAAY,GAAA,EAAA,CAAxB;;AA4BA,OAAA,IAAY,aAAZ;;AAAA,CAAA,UAAY,aAAZ,EAAyB;EACvB,aAAA,CAAA,MAAA,CAAA,GAAA,MAAA;EACA,aAAA,CAAA,KAAA,CAAA,GAAA,KAAA;EACA,aAAA,CAAA,MAAA,CAAA,GAAA,MAAA;EACA,aAAA,CAAA,UAAA,CAAA,GAAA,UAAA;EACA,aAAA,CAAA,MAAA,CAAA,GAAA,MAAA;EACA,aAAA,CAAA,YAAA,CAAA,GAAA,YAAA;EACA,aAAA,CAAA,aAAA,CAAA,GAAA,aAAA;AACD,CARD,EAAY,aAAa,KAAb,aAAa,GAAA,EAAA,CAAzB;;AAsNA,OAAA,IAAY,aAAZ;;AAAA,CAAA,UAAY,aAAZ,EAAyB;EACvB,aAAA,CAAA,UAAA,CAAA,GAAA,UAAA;EACA,aAAA,CAAA,OAAA,CAAA,GAAA,OAAA;EACA,aAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACD,CAJD,EAAY,aAAa,KAAb,aAAa,GAAA,EAAA,CAAzB;AAusBA;;;AACA,OAAA,IAAY,UAAZ;;AAAA,CAAA,UAAY,UAAZ,EAAsB;EACpB;EACA,UAAA,CAAA,eAAA,CAAA,GAAA,gBAAA,CAFoB,CAGpB;;EACA,UAAA,CAAA,4BAAA,CAAA,GAAA,4BAAA;EAEA;;EACA,UAAA,CAAA,aAAA,CAAA,GAAA,cAAA,CAPoB,CAQpB;;EACA,UAAA,CAAA,0BAAA,CAAA,GAAA,0BAAA,CAToB,CAUpB;;EACA,UAAA,CAAA,0BAAA,CAAA,GAAA,0BAAA;EAEA;;EACA,UAAA,CAAA,aAAA,CAAA,GAAA,cAAA,CAdoB,CAepB;;EACA,UAAA,CAAA,wBAAA,CAAA,GAAA,wBAAA,CAhBoB,CAiBpB;;EACA,UAAA,CAAA,0BAAA,CAAA,GAAA,0BAAA;EAEA;;EACA,UAAA,CAAA,WAAA,CAAA,GAAA,YAAA;EAEA;;EACA,UAAA,CAAA,YAAA,CAAA,GAAA,aAAA,CAxBoB,CAyBpB;;EACA,UAAA,CAAA,sBAAA,CAAA,GAAA,sBAAA,CA1BoB,CA2BpB;;EACA,UAAA,CAAA,mBAAA,CAAA,GAAA,mBAAA,CA5BoB,CA6BpB;;EACA,UAAA,CAAA,iBAAA,CAAA,GAAA,iBAAA,CA9BoB,CA+BpB;;EACA,UAAA,CAAA,oCAAA,CAAA,GAAA,oCAAA;AACD,CAjCD,EAAY,UAAU,KAAV,UAAU,GAAA,EAAA,CAAtB;;AA6rDA,OAAO,IAAM,iBAAiB,GAAG,wiDAA1B;AA4EP,OAAO,IAAM,eAAe,GAAG,i0BAAxB;AAuCP,OAAO,IAAM,iBAAiB,GAAG,yiBAA1B;AAoBP,OAAO,IAAM,4BAA4B,GAAG,0YAArC;AAQP,OAAO,IAAM,sBAAsB,GAAG,+JAA/B;AAQP,OAAO,IAAM,oBAAoB,GAAG,4KAA7B;AASP,OAAO,IAAM,aAAa,GAAG,+VAAtB;AAQP,OAAO,IAAM,kBAAkB,GAAG,yVAA3B;AAQP,OAAO,IAAM,yBAAyB,GAAG,yRAAlC;AAQP,OAAO,IAAM,iBAAiB,GAAG,u0BAA1B;AAwDP,OAAO,IAAM,iBAAiB,GAAG,u4BAA1B;AAwDP,OAAO,IAAM,iBAAiB,GAAG,oSAA1B;AAWP,OAAO,IAAM,2BAA2B,GAAG,+PAApC;AAgBP,OAAO,IAAM,sBAAsB,GAAG,4KAA/B;AAWP,OAAO,IAAM,mBAAmB,GAAG,2OAA5B;AAWP,OAAO,IAAM,iBAAiB,GAAG,wpBAA1B;AAuCP,OAAO,IAAM,oBAAoB,GAAG,ufAA7B;AAuBP,OAAO,IAAM,kBAAkB,GAAG,iaAA3B;AAqBP,OAAO,IAAM,kBAAkB,GAAG,2iCAA3B;AAyDP,OAAO,IAAM,gCAAgC,GAAG,k/BAAzC;AA+DP,OAAO,IAAM,sBAAsB,GAAG,60CAA/B;AAkEP,OAAO,IAAM,sBAAsB,GAAG,iHAA/B;AAQP,OAAO,IAAM,oBAAoB,GAAG,kIAA7B;AAQP,OAAO,IAAM,kBAAkB,GAAG,qJAA3B;AAQP,OAAO,IAAM,iBAAiB,GAAG,uGAA1B;AAQP,OAAO,IAAM,sBAAsB,GAAG,iLAA/B;AAQP,OAAO,IAAM,oBAAoB,GAAG,8JAA7B;AAQP,OAAO,IAAM,kBAAkB,GAAG,0JAA3B;AAQP,OAAO,IAAM,mBAAmB,GAAG,2KAA5B;AAQP,OAAO,IAAM,kBAAkB,GAAG,yGAA3B;AAQP,OAAO,IAAM,sBAAsB,GAAG,0FAA/B;AAQP,OAAO,IAAM,mBAAmB,GAAG,iHAA5B;AAQP,OAAO,IAAM,4BAA4B,GAAG,uPAArC;AAgBP,OAAO,IAAM,+BAA+B,GAAG,8TAAxC;AAQP,OAAO,IAAM,2BAA2B,GAAG,qPAApC;AAgBP,OAAO,IAAM,8BAA8B,GAAG,4TAAvC;AAQP,OAAO,IAAM,oBAAoB,GAAG,k7BAA7B;AAiEP,OAAO,IAAM,wBAAwB,GAAG,87BAAjC;AAiEP,OAAO,IAAM,4BAA4B,GAAG,08BAArC;AAiEP,OAAO,IAAM,yBAAyB,GAAG,yjCAAlC;AAiEP,OAAO,IAAM,uBAAuB,GAAG,27BAAhC;AAiEP,OAAO,IAAM,mBAAmB,GAAG,uOAA5B;AAQP,OAAO,IAAM,gBAAgB,GAAG,koBAAzB;AAuCP,OAAO,IAAM,0BAA0B,GAAG,+JAAnC;AASP,OAAO,IAAM,oBAAoB,GAAG,kHAA7B;AASP,OAAO,IAAM,6BAA6B,GAAG,0EAAtC;AAKP,OAAO,IAAM,uBAAuB,GAAG,q0BAAhC;AAyDP,OAAO,IAAM,2BAA2B,GAAG,i1BAApC;AAyDP,OAAO,IAAM,0BAA0B,GAAG,80BAAnC;AAyDP,OAAO,IAAM,oBAAoB,GAAG,49CAA7B;AAyEP,OAAO,IAAM,+BAA+B,GAAG,4UAAxC;AAQP,OAAO,IAAM,iBAAiB,GAAG,gKAA1B;AAQP,OAAO,IAAM,iBAAiB,GAAG,+NAA1B;AAUP,OAAO,IAAM,2BAA2B,GAAG,yKAApC;AAQP,OAAO,IAAM,uBAAuB,GAAG,kLAAhC;AASP,OAAO,IAAM,qBAAqB,GAAG,qSAA9B;AAQP,OAAO,IAAM,sCAAsC,GAAG,mMAA/C;AAQP,OAAO,IAAM,sCAAsC,GAAG,8PAA/C;AAQP,OAAO,IAAM,kBAAkB,GAAG,yVAA3B;AAQP,OAAO,IAAM,iBAAiB,GAAG,oJAA1B;AAQP,OAAO,IAAM,iCAAiC,GAAG,mLAA1C;AAQP,OAAO,IAAM,yBAAyB,GAAG,uLAAlC;AAQP,OAAO,IAAM,cAAc,GAAG,qTAAvB;AAWP,OAAO,IAAM,wBAAwB,GAAG,sMAAjC;AAQP,OAAO,IAAM,cAAc,GAAG,yPAAvB;AAUP,OAAO,IAAM,mBAAmB,GAAG,+PAA5B;AAUP,OAAO,IAAM,mBAAmB,GAAG,+vBAA5B;AAwDP,OAAO,IAAM,mBAAmB,GAAG,+vBAA5B;AAwDP,OAAO,IAAM,mBAAmB,GAAG,u6BAA5B;AAwDP,OAAO,IAAM,sBAAsB,GAAG,4KAA/B;AAWP,OAAO,IAAM,mBAAmB,GAAG,+QAA5B;AAWP,OAAO,IAAM,kBAAkB,GAAG,0jBAA3B;AAuBP,OAAO,IAAM,sBAAsB,GAAG,w2BAA/B;AAwDP,OAAO,IAAM,mBAAmB,GAAG,gjCAA5B;AAwDP,OAAO,IAAM,oBAAoB,GAAG,sfAA7B;AAqBP,OAAO,IAAM,kBAAkB,GAAG,oaAA3B;AAqBP,OAAO,IAAM,kBAAkB,GAAG,w6BAA3B;AAyDP,OAAO,IAAM,sBAAsB,GAAG,q5CAA/B;AA6EP,OAAO,IAAM,mBAAmB,GAAG,+KAA5B;AASP,OAAO,IAAM,qBAAqB,GAAG,88BAA9B;AA4DP,OAAO,IAAM,yBAAyB,GAAG,gbAAlC;AAYP,OAAO,IAAM,wBAAwB,GAAG,kNAAjC;AAgBP,OAAO,IAAM,6BAA6B,GAAG,+IAAtC;AAQP,OAAO,IAAM,qBAAqB,GAAG,kRAA9B;AAoBP,OAAO,IAAM,sBAAsB,GAAG,gMAA/B;AAgBP,OAAO,IAAM,gBAAgB,GAAG,m9BAAzB;AAyDP,OAAO,IAAM,8BAA8B,GAAG,s/BAAvC;AA+DP,OAAO,IAAM,gBAAgB,GAAG,sIAAzB;AAWP,OAAO,IAAM,iBAAiB,GAAG,0PAA1B;AAcP,OAAO,IAAM,0BAA0B,GAAG,skBAAnC;AAgCP,OAAO,IAAM,qBAAqB,GAAG,iOAA9B;AAgBP,OAAO,IAAM,oBAAoB,GAAG,0bAA7B;AA0BP,OAAO,IAAM,aAAa,GAAG,8IAAtB;AAWP,OAAO,IAAM,sBAAsB,GAAG,omCAA/B;AA8DP,OAAO,IAAM,oCAAoC,GAAG,wtCAA7C;AAoEP,OAAO,IAAM,cAAc,GAAG,6RAAvB;AAcP,OAAO,IAAM,uBAAuB,GAAG,qNAAhC;AAKP,OAAO,IAAM,sBAAsB,GAAG,wKAA/B;AAKP,OAAO,IAAM,yBAAyB,GAAG,kGAAlC;AAKP,OAAO,IAAM,kBAAkB,GAAG,oHAA3B;AAKP,OAAO,IAAM,oBAAoB,GAAG,yMAA7B;AAKP,OAAO,IAAM,2BAA2B,GAAG,0YAApC;AAaP,OAAO,IAAM,oCAAoC,GAAG,gVAA7C;AAeP,OAAO,IAAM,yCAAyC,GAAG,0XAAlD;AAeP,OAAO,IAAM,uCAAuC,GAAG,gVAAhD;AAeP,OAAO,IAAM,mCAAmC,GAAG,8UAA5C;AAeP,OAAO,IAAM,mCAAmC,GAAG,wUAA5C;AAeP,OAAO,IAAM,kBAAkB,GAAG,sSAA3B;AAoBP,OAAO,IAAM,6BAA6B,GAAG,06CAAtC;AA2EP,OAAO,IAAM,gBAAgB,GAAG,4PAAzB;AAoBP,OAAO,IAAM,2BAA2B,GAAG,g4CAApC;AA2EP,OAAO,IAAM,WAAW,GAAG,8gBAApB;AAuCP,OAAO,IAAM,YAAY,GAAG,2pBAArB;AAwCP,OAAO,IAAM,gBAAgB,GAAG,+aAAzB;AAwBP,OAAO,IAAM,cAAc,GAAG,iWAAvB;AAsBP,OAAO,IAAM,yBAAyB,GAAG,6ZAAlC;AAYP,OAAO,IAAM,6BAA6B,GAAG,qYAAtC;AAsBP,OAAO,IAAM,oBAAoB,GAAG,6FAA7B;AAKP,OAAO,IAAM,oBAAoB,GAAG,iFAA7B;AAKP,OAAO,IAAM,gBAAgB,GAAG,sNAAzB;AAWP,OAAO,IAAM,YAAY,GAAG,+TAArB;AAqBP,OAAO,IAAM,qBAAqB,GAAG,6oCAA9B;AA8DP,OAAO,IAAM,mCAAmC,GAAG,iwCAA5C;AAoEP,OAAO,IAAM,aAAa,GAAG,8TAAtB;AAgBP,OAAO,IAAM,gBAAgB,GAAG,iSAAzB;AAsBP,OAAO,IAAM,mBAAmB,GAAG,6SAA5B;AAsBP,OAAO,IAAM,kBAAkB,GAAG,usCAA3B;AA4DP,OAAO,IAAM,gCAAgC,GAAG,+yCAAzC;AAkEP,OAAO,IAAM,oBAAoB,GAAG,qDAA7B;AAKP,OAAO,IAAM,WAAW,GAAG,+JAApB;AAWP,OAAO,IAAM,qBAAqB,GAAG,yPAA9B;AAaP,OAAO,IAAM,WAAW,GAAG,sLAApB;AAUP,OAAO,IAAM,YAAY,GAAG,4gCAArB;AA0EP,OAAO,IAAM,iBAAiB,GAAG,2+BAA1B;AAoEP,OAAO,IAAM,+BAA+B,GAAG,ukCAAxC;AA0EP,OAAO,IAAM,0BAA0B,GAAG,8gCAAnC;AAyEP,OAAO,IAAM,gBAAgB,GAAG,s2CAAzB;AA8EP,OAAO,IAAM,qBAAqB,GAAG,wHAA9B;AAWP,OAAO,IAAM,iBAAiB,GAAG,mpBAA1B;AAgCP,OAAO,IAAM,aAAa,GAAG,wuCAAtB;AAuEP,OAAO,IAAM,2BAA2B,GAAG,g1CAApC;AA6EP,OAAO,IAAM,iBAAiB,GAAG,mIAA1B","sourceRoot":"","sourcesContent":["export var ResourceType;\n(function (ResourceType) {\n    ResourceType[\"Data\"] = \"DATA\";\n    ResourceType[\"Api\"] = \"API\";\n    ResourceType[\"Menu\"] = \"MENU\";\n    ResourceType[\"Ui\"] = \"UI\";\n    ResourceType[\"Button\"] = \"BUTTON\";\n})(ResourceType || (ResourceType = {}));\nexport var PolicyAssignmentTargetType;\n(function (PolicyAssignmentTargetType) {\n    PolicyAssignmentTargetType[\"User\"] = \"USER\";\n    PolicyAssignmentTargetType[\"Role\"] = \"ROLE\";\n    PolicyAssignmentTargetType[\"Group\"] = \"GROUP\";\n    PolicyAssignmentTargetType[\"Org\"] = \"ORG\";\n    PolicyAssignmentTargetType[\"AkSk\"] = \"AK_SK\";\n})(PolicyAssignmentTargetType || (PolicyAssignmentTargetType = {}));\nexport var Operator;\n(function (Operator) {\n    Operator[\"And\"] = \"AND\";\n    Operator[\"Or\"] = \"OR\";\n})(Operator || (Operator = {}));\nexport var EmailTemplateType;\n(function (EmailTemplateType) {\n    /** 重置密码确认 */\n    EmailTemplateType[\"ResetPassword\"] = \"RESET_PASSWORD\";\n    /** 重置密码通知 */\n    EmailTemplateType[\"PasswordResetedNotification\"] = \"PASSWORD_RESETED_NOTIFICATION\";\n    /** 修改密码验证码 */\n    EmailTemplateType[\"ChangePassword\"] = \"CHANGE_PASSWORD\";\n    /** 注册欢迎邮件 */\n    EmailTemplateType[\"Welcome\"] = \"WELCOME\";\n    /** 验证邮箱 */\n    EmailTemplateType[\"VerifyEmail\"] = \"VERIFY_EMAIL\";\n    /** 修改绑定邮箱 */\n    EmailTemplateType[\"ChangeEmail\"] = \"CHANGE_EMAIL\";\n})(EmailTemplateType || (EmailTemplateType = {}));\nexport var SortByEnum;\n(function (SortByEnum) {\n    /** 按照创建时间降序（后创建的在前面） */\n    SortByEnum[\"CreatedatDesc\"] = \"CREATEDAT_DESC\";\n    /** 按照创建时间升序（先创建的在前面） */\n    SortByEnum[\"CreatedatAsc\"] = \"CREATEDAT_ASC\";\n    /** 按照更新时间降序（最近更新的在前面） */\n    SortByEnum[\"UpdatedatDesc\"] = \"UPDATEDAT_DESC\";\n    /** 按照更新时间升序（最近更新的在后面） */\n    SortByEnum[\"UpdatedatAsc\"] = \"UPDATEDAT_ASC\";\n})(SortByEnum || (SortByEnum = {}));\nexport var UserStatus;\n(function (UserStatus) {\n    /** 已停用 */\n    UserStatus[\"Suspended\"] = \"Suspended\";\n    /** 已离职 */\n    UserStatus[\"Resigned\"] = \"Resigned\";\n    /** 已激活（正常状态） */\n    UserStatus[\"Activated\"] = \"Activated\";\n    /** 已归档 */\n    UserStatus[\"Archived\"] = \"Archived\";\n})(UserStatus || (UserStatus = {}));\nexport var UdfDataType;\n(function (UdfDataType) {\n    UdfDataType[\"String\"] = \"STRING\";\n    UdfDataType[\"Number\"] = \"NUMBER\";\n    UdfDataType[\"Datetime\"] = \"DATETIME\";\n    UdfDataType[\"Boolean\"] = \"BOOLEAN\";\n    UdfDataType[\"Object\"] = \"OBJECT\";\n    UdfDataType[\"Select\"] = \"SELECT\";\n})(UdfDataType || (UdfDataType = {}));\nexport var PolicyEffect;\n(function (PolicyEffect) {\n    PolicyEffect[\"Allow\"] = \"ALLOW\";\n    PolicyEffect[\"Deny\"] = \"DENY\";\n})(PolicyEffect || (PolicyEffect = {}));\nexport var UdfTargetType;\n(function (UdfTargetType) {\n    UdfTargetType[\"Node\"] = \"NODE\";\n    UdfTargetType[\"Org\"] = \"ORG\";\n    UdfTargetType[\"User\"] = \"USER\";\n    UdfTargetType[\"Userpool\"] = \"USERPOOL\";\n    UdfTargetType[\"Role\"] = \"ROLE\";\n    UdfTargetType[\"Permission\"] = \"PERMISSION\";\n    UdfTargetType[\"Application\"] = \"APPLICATION\";\n})(UdfTargetType || (UdfTargetType = {}));\nexport var WhitelistType;\n(function (WhitelistType) {\n    WhitelistType[\"Username\"] = \"USERNAME\";\n    WhitelistType[\"Email\"] = \"EMAIL\";\n    WhitelistType[\"Phone\"] = \"PHONE\";\n})(WhitelistType || (WhitelistType = {}));\n/** 邮件使用场景 */\nexport var EmailScene;\n(function (EmailScene) {\n    /** 发送重置密码邮件，邮件中包含验证码 */\n    EmailScene[\"ResetPassword\"] = \"RESET_PASSWORD\";\n    // - 重置密码验证码\n    EmailScene[\"RESET_PASSWORD_VERIFY_CODE\"] = \"RESET_PASSWORD_VERIFY_CODE\";\n    /** 发送验证邮箱的邮件 */\n    EmailScene[\"VerifyEmail\"] = \"VERIFY_EMAIL\";\n    // - 首次邮箱登录验证\n    EmailScene[\"FIRST_EMAIL_LOGIN_VERIFY\"] = \"FIRST_EMAIL_LOGIN_VERIFY\";\n    // - 在控制台发起验证\n    EmailScene[\"CONSOLE_CONDUCTED_VERIFY\"] = \"CONSOLE_CONDUCTED_VERIFY\";\n    /** 发送修改邮箱邮件，邮件中包含验证码 */\n    EmailScene[\"ChangeEmail\"] = \"CHANGE_EMAIL\";\n    // - 邮箱绑定验证码\n    EmailScene[\"EMAIL_BIND_VERIFY_CODE\"] = \"EMAIL_BIND_VERIFY_CODE\";\n    // - 邮箱解绑验证码\n    EmailScene[\"EMAIL_UNBIND_VERIFY_CODE\"] = \"EMAIL_UNBIND_VERIFY_CODE\";\n    /** 发送 MFA 验证邮件 */\n    EmailScene[\"MfaVerify\"] = \"MFA_VERIFY\";\n    /** 发送邮件验证码 */\n    EmailScene[\"VerifyCode\"] = \"VERIFY_CODE\";\n    // - 注册验证码\n    EmailScene[\"REGISTER_VERIFY_CODE\"] = \"REGISTER_VERIFY_CODE\";\n    // - 登录验证码\n    EmailScene[\"LOGIN_VERIFY_CODE\"] = \"LOGIN_VERIFY_CODE\";\n    // - MFA 验证\n    EmailScene[\"MFA_VERIFY_CODE\"] = \"MFA_VERIFY_CODE\";\n    // - 信息补全验证码\n    EmailScene[\"INFORMATION_COMPLETION_VERIFY_CODE\"] = \"INFORMATION_COMPLETION_VERIFY_CODE\";\n})(EmailScene || (EmailScene = {}));\nexport var AddMemberDocument = \"\\n    mutation addMember($page: Int, $limit: Int, $sortBy: SortByEnum, $includeChildrenNodes: Boolean, $nodeId: String, $orgId: String, $nodeCode: String, $userIds: [String!]!, $isLeader: Boolean) {\\n  addMember(nodeId: $nodeId, orgId: $orgId, nodeCode: $nodeCode, userIds: $userIds, isLeader: $isLeader) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    createdAt\\n    updatedAt\\n    children\\n    users(page: $page, limit: $limit, sortBy: $sortBy, includeChildrenNodes: $includeChildrenNodes) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        userPoolId\\n        username\\n        status\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var AddNodeDocument = \"\\n    mutation addNode($orgId: String!, $parentNodeId: String, $name: String!, $nameI18n: String, $description: String, $descriptionI18n: String, $order: Int, $code: String) {\\n  addNode(orgId: $orgId, parentNodeId: $parentNodeId, name: $name, nameI18n: $nameI18n, description: $description, descriptionI18n: $descriptionI18n, order: $order, code: $code) {\\n    id\\n    rootNode {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n    nodes {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n  }\\n}\\n    \";\nexport var AddNodeV2Document = \"\\n    mutation addNodeV2($orgId: String!, $parentNodeId: String, $name: String!, $nameI18n: String, $description: String, $descriptionI18n: String, $order: Int, $code: String) {\\n  addNodeV2(orgId: $orgId, parentNodeId: $parentNodeId, name: $name, nameI18n: $nameI18n, description: $description, descriptionI18n: $descriptionI18n, order: $order, code: $code) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    createdAt\\n    updatedAt\\n    children\\n  }\\n}\\n    \";\nexport var AddPolicyAssignmentsDocument = \"\\n    mutation addPolicyAssignments($policies: [String!]!, $targetType: PolicyAssignmentTargetType!, $targetIdentifiers: [String!], $inheritByChildren: Boolean, $namespace: String) {\\n  addPolicyAssignments(policies: $policies, targetType: $targetType, targetIdentifiers: $targetIdentifiers, inheritByChildren: $inheritByChildren, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var AddUserToGroupDocument = \"\\n    mutation addUserToGroup($userIds: [String!]!, $code: String) {\\n  addUserToGroup(userIds: $userIds, code: $code) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var AddWhitelistDocument = \"\\n    mutation addWhitelist($type: WhitelistType!, $list: [String!]!) {\\n  addWhitelist(type: $type, list: $list) {\\n    createdAt\\n    updatedAt\\n    value\\n  }\\n}\\n    \";\nexport var AllowDocument = \"\\n    mutation allow($resource: String!, $action: String!, $userId: String, $userIds: [String!], $roleCode: String, $roleCodes: [String!], $namespace: String) {\\n  allow(resource: $resource, action: $action, userId: $userId, userIds: $userIds, roleCode: $roleCode, roleCodes: $roleCodes, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var AssignRoleDocument = \"\\n    mutation assignRole($namespace: String, $roleCode: String, $roleCodes: [String], $userIds: [String!], $groupCodes: [String!], $nodeCodes: [String!]) {\\n  assignRole(namespace: $namespace, roleCode: $roleCode, roleCodes: $roleCodes, userIds: $userIds, groupCodes: $groupCodes, nodeCodes: $nodeCodes) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var AuthorizeResourceDocument = \"\\n    mutation authorizeResource($namespace: String, $resource: String, $resourceType: ResourceType, $opts: [AuthorizeResourceOpt]) {\\n  authorizeResource(namespace: $namespace, resource: $resource, resourceType: $resourceType, opts: $opts) {\\n    code\\n    message\\n  }\\n}\\n    \";\nexport var BindEmailDocument = \"\\n    mutation bindEmail($email: String!, $emailCode: String!) {\\n  bindEmail(email: $email, emailCode: $emailCode) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var BindPhoneDocument = \"\\n    mutation bindPhone($phone: String!, $phoneCode: String!, $phoneCountryCode: String) {\\n  bindPhone(phone: $phone, phoneCode: $phoneCode, phoneCountryCode: $phoneCountryCode) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var ChangeMfaDocument = \"\\n    mutation changeMfa($enable: Boolean, $id: String, $userId: String, $userPoolId: String, $refresh: Boolean) {\\n  changeMfa(enable: $enable, id: $id, userId: $userId, userPoolId: $userPoolId, refresh: $refresh) {\\n    id\\n    userId\\n    userPoolId\\n    enable\\n    secret\\n  }\\n}\\n    \";\nexport var ConfigEmailTemplateDocument = \"\\n    mutation configEmailTemplate($input: ConfigEmailTemplateInput!) {\\n  configEmailTemplate(input: $input) {\\n    type\\n    name\\n    subject\\n    sender\\n    content\\n    redirectTo\\n    hasURL\\n    expiresIn\\n    enabled\\n    isSystem\\n  }\\n}\\n    \";\nexport var CreateFunctionDocument = \"\\n    mutation createFunction($input: CreateFunctionInput!) {\\n  createFunction(input: $input) {\\n    id\\n    name\\n    sourceCode\\n    description\\n    url\\n  }\\n}\\n    \";\nexport var CreateGroupDocument = \"\\n    mutation createGroup($code: String!, $name: String!, $description: String) {\\n  createGroup(code: $code, name: $name, description: $description) {\\n    code\\n    name\\n    description\\n    createdAt\\n    updatedAt\\n  }\\n}\\n    \";\nexport var CreateOrgDocument = \"\\n    mutation createOrg($name: String!, $code: String, $description: String, $tenantId: String) {\\n  createOrg(name: $name, code: $code, description: $description, tenantId: $tenantId) {\\n    id\\n    rootNode {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n    nodes {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n  }\\n}\\n    \";\nexport var CreatePolicyDocument = \"\\n    mutation createPolicy($namespace: String, $code: String!, $description: String, $statements: [PolicyStatementInput!]!) {\\n  createPolicy(namespace: $namespace, code: $code, description: $description, statements: $statements) {\\n    namespace\\n    code\\n    isDefault\\n    description\\n    statements {\\n      resource\\n      actions\\n      effect\\n      condition {\\n        param\\n        operator\\n        value\\n      }\\n    }\\n    createdAt\\n    updatedAt\\n    assignmentsCount\\n  }\\n}\\n    \";\nexport var CreateRoleDocument = \"\\n    mutation createRole($namespace: String, $code: String!, $description: String, $parent: String) {\\n  createRole(namespace: $namespace, code: $code, description: $description, parent: $parent) {\\n    id\\n    namespace\\n    code\\n    arn\\n    description\\n    createdAt\\n    updatedAt\\n    parent {\\n      namespace\\n      code\\n      arn\\n      description\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n}\\n    \";\nexport var CreateUserDocument = \"\\n    mutation createUser($userInfo: CreateUserInput!, $params: String, $identity: CreateUserIdentityInput, $keepPassword: Boolean, $resetPasswordOnFirstLogin: Boolean) {\\n  createUser(userInfo: $userInfo, params: $params, identity: $identity, keepPassword: $keepPassword, resetPasswordOnFirstLogin: $resetPasswordOnFirstLogin) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var CreateUserWithCustomDataDocument = \"\\n    mutation createUserWithCustomData($userInfo: CreateUserInput!, $keepPassword: Boolean, $params: String) {\\n  createUser(userInfo: $userInfo, keepPassword: $keepPassword, params: $params) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var CreateUserpoolDocument = \"\\n    mutation createUserpool($name: String!, $domain: String!, $description: String, $logo: String, $userpoolTypes: [String!]) {\\n  createUserpool(name: $name, domain: $domain, description: $description, logo: $logo, userpoolTypes: $userpoolTypes) {\\n    id\\n    name\\n    domain\\n    description\\n    secret\\n    jwtSecret\\n    userpoolTypes {\\n      code\\n      name\\n      description\\n      image\\n      sdks\\n    }\\n    logo\\n    createdAt\\n    updatedAt\\n    emailVerifiedDefault\\n    sendWelcomeEmail\\n    registerDisabled\\n    appSsoEnabled\\n    showWxQRCodeWhenRegisterDisabled\\n    allowedOrigins\\n    tokenExpiresAfter\\n    isDeleted\\n    frequentRegisterCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    loginFailCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    changePhoneStrategy {\\n      verifyOldPhone\\n    }\\n    changeEmailStrategy {\\n      verifyOldEmail\\n    }\\n    qrcodeLoginStrategy {\\n      qrcodeExpiresAfter\\n      returnFullUserInfo\\n      allowExchangeUserInfoFromBrowser\\n      ticketExpiresAfter\\n    }\\n    app2WxappLoginStrategy {\\n      ticketExpriresAfter\\n      ticketExchangeUserInfoNeedSecret\\n    }\\n    whitelist {\\n      phoneEnabled\\n      emailEnabled\\n      usernameEnabled\\n    }\\n    customSMSProvider {\\n      enabled\\n      provider\\n    }\\n    packageType\\n  }\\n}\\n    \";\nexport var DeleteFunctionDocument = \"\\n    mutation deleteFunction($id: String!) {\\n  deleteFunction(id: $id) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteGroupsDocument = \"\\n    mutation deleteGroups($codeList: [String!]!) {\\n  deleteGroups(codeList: $codeList) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteNodeDocument = \"\\n    mutation deleteNode($orgId: String!, $nodeId: String!) {\\n  deleteNode(orgId: $orgId, nodeId: $nodeId) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteOrgDocument = \"\\n    mutation deleteOrg($id: String!) {\\n  deleteOrg(id: $id) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeletePoliciesDocument = \"\\n    mutation deletePolicies($codeList: [String!]!, $namespace: String) {\\n  deletePolicies(codeList: $codeList, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeletePolicyDocument = \"\\n    mutation deletePolicy($code: String!, $namespace: String) {\\n  deletePolicy(code: $code, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteRoleDocument = \"\\n    mutation deleteRole($code: String!, $namespace: String) {\\n  deleteRole(code: $code, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteRolesDocument = \"\\n    mutation deleteRoles($codeList: [String!]!, $namespace: String) {\\n  deleteRoles(codeList: $codeList, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteUserDocument = \"\\n    mutation deleteUser($id: String!) {\\n  deleteUser(id: $id) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteUserpoolDocument = \"\\n    mutation deleteUserpool {\\n  deleteUserpool {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DeleteUsersDocument = \"\\n    mutation deleteUsers($ids: [String!]!) {\\n  deleteUsers(ids: $ids) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var DisableEmailTemplateDocument = \"\\n    mutation disableEmailTemplate($type: EmailTemplateType!) {\\n  disableEmailTemplate(type: $type) {\\n    type\\n    name\\n    subject\\n    sender\\n    content\\n    redirectTo\\n    hasURL\\n    expiresIn\\n    enabled\\n    isSystem\\n  }\\n}\\n    \";\nexport var DisbalePolicyAssignmentDocument = \"\\n    mutation disbalePolicyAssignment($policy: String!, $targetType: PolicyAssignmentTargetType!, $targetIdentifier: String!, $namespace: String) {\\n  disbalePolicyAssignment(policy: $policy, targetType: $targetType, targetIdentifier: $targetIdentifier, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var EnableEmailTemplateDocument = \"\\n    mutation enableEmailTemplate($type: EmailTemplateType!) {\\n  enableEmailTemplate(type: $type) {\\n    type\\n    name\\n    subject\\n    sender\\n    content\\n    redirectTo\\n    hasURL\\n    expiresIn\\n    enabled\\n    isSystem\\n  }\\n}\\n    \";\nexport var EnablePolicyAssignmentDocument = \"\\n    mutation enablePolicyAssignment($policy: String!, $targetType: PolicyAssignmentTargetType!, $targetIdentifier: String!, $namespace: String) {\\n  enablePolicyAssignment(policy: $policy, targetType: $targetType, targetIdentifier: $targetIdentifier, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var LoginByEmailDocument = \"\\n    mutation loginByEmail($input: LoginByEmailInput!) {\\n  loginByEmail(input: $input) {\\n    id\\n    arn\\n    status\\n    userPoolId\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    newlyCreated\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var LoginByPhoneCodeDocument = \"\\n    mutation loginByPhoneCode($input: LoginByPhoneCodeInput!) {\\n  loginByPhoneCode(input: $input) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    newlyCreated\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var LoginByPhonePasswordDocument = \"\\n    mutation loginByPhonePassword($input: LoginByPhonePasswordInput!) {\\n  loginByPhonePassword(input: $input) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    newlyCreated\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var LoginBySubAccountDocument = \"\\n    mutation loginBySubAccount($account: String!, $password: String!, $captchaCode: String, $clientIp: String) {\\n  loginBySubAccount(account: $account, password: $password, captchaCode: $captchaCode, clientIp: $clientIp) {\\n    id\\n    arn\\n    status\\n    userPoolId\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    newlyCreated\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var LoginByUsernameDocument = \"\\n    mutation loginByUsername($input: LoginByUsernameInput!) {\\n  loginByUsername(input: $input) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    newlyCreated\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var MoveMembersDocument = \"\\n    mutation moveMembers($userIds: [String!]!, $sourceNodeId: String!, $targetNodeId: String!) {\\n  moveMembers(userIds: $userIds, sourceNodeId: $sourceNodeId, targetNodeId: $targetNodeId) {\\n    code\\n    message\\n  }\\n}\\n    \";\nexport var MoveNodeDocument = \"\\n    mutation moveNode($orgId: String!, $nodeId: String!, $targetParentId: String!) {\\n  moveNode(orgId: $orgId, nodeId: $nodeId, targetParentId: $targetParentId) {\\n    id\\n    rootNode {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n    nodes {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n  }\\n}\\n    \";\nexport var RefreshAccessTokenDocument = \"\\n    mutation refreshAccessToken($accessToken: String) {\\n  refreshAccessToken(accessToken: $accessToken) {\\n    accessToken\\n    exp\\n    iat\\n  }\\n}\\n    \";\nexport var RefreshTokenDocument = \"\\n    mutation refreshToken($id: String) {\\n  refreshToken(id: $id) {\\n    token\\n    iat\\n    exp\\n  }\\n}\\n    \";\nexport var RefreshUserpoolSecretDocument = \"\\n    mutation refreshUserpoolSecret {\\n  refreshUserpoolSecret\\n}\\n    \";\nexport var RegisterByEmailDocument = \"\\n    mutation registerByEmail($input: RegisterByEmailInput!) {\\n  registerByEmail(input: $input) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var RegisterByPhoneCodeDocument = \"\\n    mutation registerByPhoneCode($input: RegisterByPhoneCodeInput!) {\\n  registerByPhoneCode(input: $input) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var RegisterByUsernameDocument = \"\\n    mutation registerByUsername($input: RegisterByUsernameInput!) {\\n  registerByUsername(input: $input) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var RemoveMemberDocument = \"\\n    mutation removeMember($page: Int, $limit: Int, $sortBy: SortByEnum, $includeChildrenNodes: Boolean, $nodeId: String, $orgId: String, $nodeCode: String, $userIds: [String!]!) {\\n  removeMember(nodeId: $nodeId, orgId: $orgId, nodeCode: $nodeCode, userIds: $userIds) {\\n    id\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    createdAt\\n    updatedAt\\n    children\\n    users(page: $page, limit: $limit, sortBy: $sortBy, includeChildrenNodes: $includeChildrenNodes) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        userPoolId\\n        status\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        phoneCountryCode\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var RemovePolicyAssignmentsDocument = \"\\n    mutation removePolicyAssignments($policies: [String!]!, $targetType: PolicyAssignmentTargetType!, $targetIdentifiers: [String!], $namespace: String) {\\n  removePolicyAssignments(policies: $policies, targetType: $targetType, targetIdentifiers: $targetIdentifiers, namespace: $namespace) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var RemoveUdfDocument = \"\\n    mutation removeUdf($targetType: UDFTargetType!, $key: String!) {\\n  removeUdf(targetType: $targetType, key: $key) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var RemoveUdvDocument = \"\\n    mutation removeUdv($targetType: UDFTargetType!, $targetId: String!, $key: String!) {\\n  removeUdv(targetType: $targetType, targetId: $targetId, key: $key) {\\n    key\\n    dataType\\n    value\\n    label\\n  }\\n}\\n    \";\nexport var RemoveUserFromGroupDocument = \"\\n    mutation removeUserFromGroup($userIds: [String!]!, $code: String) {\\n  removeUserFromGroup(userIds: $userIds, code: $code) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var RemoveWhitelistDocument = \"\\n    mutation removeWhitelist($type: WhitelistType!, $list: [String!]!) {\\n  removeWhitelist(type: $type, list: $list) {\\n    createdAt\\n    updatedAt\\n    value\\n  }\\n}\\n    \";\nexport var ResetPasswordDocument = \"\\n    mutation resetPassword($phone: String, $phoneCountryCode: String, $email: String, $code: String!, $newPassword: String!) {\\n  resetPassword(phone: $phone, phoneCountryCode: $phoneCountryCode, email: $email, code: $code, newPassword: $newPassword) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var ResetPasswordByFirstLoginTokenDocument = \"\\n    mutation resetPasswordByFirstLoginToken($token: String!, $password: String!) {\\n  resetPasswordByFirstLoginToken(token: $token, password: $password) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var ResetPasswordByForceResetTokenDocument = \"\\n    mutation resetPasswordByForceResetToken($token: String!, $oldPassword: String!, $newPassword: String!) {\\n  resetPasswordByForceResetToken(token: $token, oldPassword: $oldPassword, newPassword: $newPassword) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var RevokeRoleDocument = \"\\n    mutation revokeRole($namespace: String, $roleCode: String, $roleCodes: [String], $userIds: [String!], $groupCodes: [String!], $nodeCodes: [String!]) {\\n  revokeRole(namespace: $namespace, roleCode: $roleCode, roleCodes: $roleCodes, userIds: $userIds, groupCodes: $groupCodes, nodeCodes: $nodeCodes) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var SendEmailDocument = \"\\n    mutation sendEmail($email: String!, $scene: EmailScene!) {\\n  sendEmail(email: $email, scene: $scene) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var SendFirstLoginVerifyEmailDocument = \"\\n    mutation sendFirstLoginVerifyEmail($userId: String!, $appId: String!) {\\n  sendFirstLoginVerifyEmail(userId: $userId, appId: $appId) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var SetMainDepartmentDocument = \"\\n    mutation setMainDepartment($userId: String!, $departmentId: String) {\\n  setMainDepartment(userId: $userId, departmentId: $departmentId) {\\n    message\\n    code\\n  }\\n}\\n    \";\nexport var SetUdfDocument = \"\\n    mutation setUdf($targetType: UDFTargetType!, $key: String!, $dataType: UDFDataType!, $label: String!, $options: String) {\\n  setUdf(targetType: $targetType, key: $key, dataType: $dataType, label: $label, options: $options) {\\n    targetType\\n    dataType\\n    key\\n    label\\n    options\\n  }\\n}\\n    \";\nexport var SetUdfValueBatchDocument = \"\\n    mutation setUdfValueBatch($targetType: UDFTargetType!, $input: [SetUdfValueBatchInput!]!) {\\n  setUdfValueBatch(targetType: $targetType, input: $input) {\\n    code\\n    message\\n  }\\n}\\n    \";\nexport var SetUdvDocument = \"\\n    mutation setUdv($targetType: UDFTargetType!, $targetId: String!, $key: String!, $value: String!) {\\n  setUdv(targetType: $targetType, targetId: $targetId, key: $key, value: $value) {\\n    key\\n    dataType\\n    value\\n    label\\n  }\\n}\\n    \";\nexport var SetUdvBatchDocument = \"\\n    mutation setUdvBatch($targetType: UDFTargetType!, $targetId: String!, $udvList: [UserDefinedDataInput!]) {\\n  setUdvBatch(targetType: $targetType, targetId: $targetId, udvList: $udvList) {\\n    key\\n    dataType\\n    value\\n    label\\n  }\\n}\\n    \";\nexport var UnbindEmailDocument = \"\\n    mutation unbindEmail {\\n  unbindEmail {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UnbindPhoneDocument = \"\\n    mutation unbindPhone {\\n  unbindPhone {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UpdateEmailDocument = \"\\n    mutation updateEmail($email: String!, $emailCode: String!, $oldEmail: String, $oldEmailCode: String) {\\n  updateEmail(email: $email, emailCode: $emailCode, oldEmail: $oldEmail, oldEmailCode: $oldEmailCode) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UpdateFunctionDocument = \"\\n    mutation updateFunction($input: UpdateFunctionInput!) {\\n  updateFunction(input: $input) {\\n    id\\n    name\\n    sourceCode\\n    description\\n    url\\n  }\\n}\\n    \";\nexport var UpdateGroupDocument = \"\\n    mutation updateGroup($code: String!, $name: String, $description: String, $newCode: String) {\\n  updateGroup(code: $code, name: $name, description: $description, newCode: $newCode) {\\n    code\\n    name\\n    description\\n    createdAt\\n    updatedAt\\n  }\\n}\\n    \";\nexport var UpdateNodeDocument = \"\\n    mutation updateNode($page: Int, $limit: Int, $sortBy: SortByEnum, $includeChildrenNodes: Boolean, $id: String!, $name: String, $code: String, $description: String) {\\n  updateNode(id: $id, name: $name, code: $code, description: $description) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    createdAt\\n    updatedAt\\n    children\\n    users(page: $page, limit: $limit, sortBy: $sortBy, includeChildrenNodes: $includeChildrenNodes) {\\n      totalCount\\n    }\\n  }\\n}\\n    \";\nexport var UpdatePasswordDocument = \"\\n    mutation updatePassword($newPassword: String!, $oldPassword: String) {\\n  updatePassword(newPassword: $newPassword, oldPassword: $oldPassword) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UpdatePhoneDocument = \"\\n    mutation updatePhone($phone: String!, $phoneCode: String!, $oldPhone: String, $oldPhoneCode: String, $phoneCountryCode: String, $oldPhoneCountryCode: String) {\\n  updatePhone(phone: $phone, phoneCode: $phoneCode, oldPhone: $oldPhone, oldPhoneCode: $oldPhoneCode, phoneCountryCode: $phoneCountryCode, oldPhoneCountryCode: $oldPhoneCountryCode) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UpdatePolicyDocument = \"\\n    mutation updatePolicy($namespace: String, $code: String!, $description: String, $statements: [PolicyStatementInput!], $newCode: String) {\\n  updatePolicy(namespace: $namespace, code: $code, description: $description, statements: $statements, newCode: $newCode) {\\n    namespace\\n    code\\n    description\\n    statements {\\n      resource\\n      actions\\n      effect\\n      condition {\\n        param\\n        operator\\n        value\\n      }\\n    }\\n    createdAt\\n    updatedAt\\n  }\\n}\\n    \";\nexport var UpdateRoleDocument = \"\\n    mutation updateRole($code: String!, $description: String, $newCode: String, $namespace: String) {\\n  updateRole(code: $code, description: $description, newCode: $newCode, namespace: $namespace) {\\n    id\\n    namespace\\n    code\\n    arn\\n    description\\n    createdAt\\n    updatedAt\\n    parent {\\n      namespace\\n      code\\n      arn\\n      description\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n}\\n    \";\nexport var UpdateUserDocument = \"\\n    mutation updateUser($id: String, $input: UpdateUserInput!, $emailToken: String, $phoneToken: String) {\\n  updateUser(id: $id, input: $input, emailToken: $emailToken, phoneToken: $phoneToken) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UpdateUserpoolDocument = \"\\n    mutation updateUserpool($input: UpdateUserpoolInput!) {\\n  updateUserpool(input: $input) {\\n    id\\n    name\\n    domain\\n    description\\n    secret\\n    jwtSecret\\n    userpoolTypes {\\n      code\\n      name\\n      description\\n      image\\n      sdks\\n    }\\n    logo\\n    createdAt\\n    updatedAt\\n    emailVerifiedDefault\\n    sendWelcomeEmail\\n    registerDisabled\\n    appSsoEnabled\\n    showWxQRCodeWhenRegisterDisabled\\n    allowedOrigins\\n    tokenExpiresAfter\\n    isDeleted\\n    frequentRegisterCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    loginFailCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    loginFailStrategy\\n    loginPasswordFailCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    changePhoneStrategy {\\n      verifyOldPhone\\n    }\\n    changeEmailStrategy {\\n      verifyOldEmail\\n    }\\n    qrcodeLoginStrategy {\\n      qrcodeExpiresAfter\\n      returnFullUserInfo\\n      allowExchangeUserInfoFromBrowser\\n      ticketExpiresAfter\\n    }\\n    app2WxappLoginStrategy {\\n      ticketExpriresAfter\\n      ticketExchangeUserInfoNeedSecret\\n    }\\n    whitelist {\\n      phoneEnabled\\n      emailEnabled\\n      usernameEnabled\\n    }\\n    customSMSProvider {\\n      enabled\\n      provider\\n      config\\n    }\\n    packageType\\n    useCustomUserStore\\n    loginRequireEmailVerified\\n    verifyCodeLength\\n    verifyCodeMaxAttempts\\n  }\\n}\\n    \";\nexport var AccessTokenDocument = \"\\n    query accessToken($userPoolId: String!, $secret: String!) {\\n  accessToken(userPoolId: $userPoolId, secret: $secret) {\\n    accessToken\\n    exp\\n    iat\\n  }\\n}\\n    \";\nexport var ArchivedUsersDocument = \"\\n    query archivedUsers($page: Int, $limit: Int) {\\n  archivedUsers(page: $page, limit: $limit) {\\n    totalCount\\n    list {\\n      id\\n      arn\\n      status\\n      userPoolId\\n      username\\n      email\\n      emailVerified\\n      phone\\n      phoneVerified\\n      unionid\\n      openid\\n      nickname\\n      registerSource\\n      photo\\n      password\\n      oauth\\n      token\\n      tokenExpiredAt\\n      loginsCount\\n      lastLogin\\n      lastIP\\n      signedUp\\n      blocked\\n      isDeleted\\n      device\\n      browser\\n      company\\n      name\\n      givenName\\n      familyName\\n      middleName\\n      profile\\n      preferredUsername\\n      website\\n      gender\\n      birthdate\\n      zoneinfo\\n      locale\\n      address\\n      formatted\\n      streetAddress\\n      locality\\n      region\\n      postalCode\\n      city\\n      province\\n      country\\n      createdAt\\n      updatedAt\\n      externalId\\n      phoneCountryCode\\n    }\\n  }\\n}\\n    \";\nexport var AuthorizedTargetsDocument = \"\\n    query authorizedTargets($namespace: String!, $resourceType: ResourceType!, $resource: String!, $targetType: PolicyAssignmentTargetType, $actions: AuthorizedTargetsActionsInput) {\\n  authorizedTargets(namespace: $namespace, resource: $resource, resourceType: $resourceType, targetType: $targetType, actions: $actions) {\\n    totalCount\\n    list {\\n      targetType\\n      targetIdentifier\\n      actions\\n    }\\n  }\\n}\\n    \";\nexport var CheckLoginStatusDocument = \"\\n    query checkLoginStatus($token: String) {\\n  checkLoginStatus(token: $token) {\\n    code\\n    message\\n    status\\n    exp\\n    iat\\n    data {\\n      id\\n      userPoolId\\n      arn\\n    }\\n  }\\n}\\n    \";\nexport var CheckPasswordStrengthDocument = \"\\n    query checkPasswordStrength($password: String!) {\\n  checkPasswordStrength(password: $password) {\\n    valid\\n    message\\n  }\\n}\\n    \";\nexport var ChildrenNodesDocument = \"\\n    query childrenNodes($nodeId: String!) {\\n  childrenNodes(nodeId: $nodeId) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    createdAt\\n    updatedAt\\n    children\\n  }\\n}\\n    \";\nexport var EmailTemplatesDocument = \"\\n    query emailTemplates {\\n  emailTemplates {\\n    type\\n    name\\n    subject\\n    sender\\n    content\\n    redirectTo\\n    hasURL\\n    expiresIn\\n    enabled\\n    isSystem\\n  }\\n}\\n    \";\nexport var FindUserDocument = \"\\n    query findUser($email: String, $phone: String, $username: String, $externalId: String, $identity: FindUserByIdentityInput) {\\n  findUser(email: $email, phone: $phone, username: $username, externalId: $externalId, identity: $identity) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var FindUserWithCustomDataDocument = \"\\n    query findUserWithCustomData($email: String, $phone: String, $username: String, $externalId: String) {\\n  findUser(email: $email, phone: $phone, username: $username, externalId: $externalId) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var FunctionDocument = \"\\n    query function($id: String) {\\n  function(id: $id) {\\n    id\\n    name\\n    sourceCode\\n    description\\n    url\\n  }\\n}\\n    \";\nexport var FunctionsDocument = \"\\n    query functions($page: Int, $limit: Int, $sortBy: SortByEnum) {\\n  functions(page: $page, limit: $limit, sortBy: $sortBy) {\\n    list {\\n      id\\n      name\\n      sourceCode\\n      description\\n      url\\n    }\\n    totalCount\\n  }\\n}\\n    \";\nexport var GetUserDepartmentsDocument = \"\\n    query getUserDepartments($id: String!, $orgId: String) {\\n  user(id: $id) {\\n    departments(orgId: $orgId) {\\n      totalCount\\n      list {\\n        department {\\n          id\\n          orgId\\n          name\\n          nameI18n\\n          description\\n          descriptionI18n\\n          order\\n          code\\n          root\\n          depth\\n          path\\n          codePath\\n          namePath\\n          createdAt\\n          updatedAt\\n          children\\n          isVirtualNode\\n        }\\n        isMainDepartment\\n        joinedAt\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var GetUserGroupsDocument = \"\\n    query getUserGroups($id: String!) {\\n  user(id: $id) {\\n    groups {\\n      totalCount\\n      list {\\n        code\\n        name\\n        description\\n        createdAt\\n        updatedAt\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var GetUserRolesDocument = \"\\n    query getUserRoles($id: String!, $namespace: String) {\\n  user(id: $id) {\\n    roles(namespace: $namespace) {\\n      totalCount\\n      list {\\n        id\\n        code\\n        namespace\\n        arn\\n        description\\n        createdAt\\n        updatedAt\\n        parent {\\n          code\\n          namespace\\n          arn\\n          description\\n          createdAt\\n          updatedAt\\n        }\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var GroupDocument = \"\\n    query group($code: String!) {\\n  group(code: $code) {\\n    code\\n    name\\n    description\\n    createdAt\\n    updatedAt\\n  }\\n}\\n    \";\nexport var GroupWithUsersDocument = \"\\n    query groupWithUsers($code: String!, $page: Int, $limit: Int) {\\n  group(code: $code) {\\n    users(page: $page, limit: $limit) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        status\\n        userPoolId\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var GroupWithUsersWithCustomDataDocument = \"\\n    query groupWithUsersWithCustomData($code: String!, $page: Int, $limit: Int) {\\n  group(code: $code) {\\n    users(page: $page, limit: $limit) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        status\\n        userPoolId\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n        customData {\\n          key\\n          value\\n          dataType\\n          label\\n        }\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var GroupsDocument = \"\\n    query groups($userId: String, $page: Int, $limit: Int, $sortBy: SortByEnum) {\\n  groups(userId: $userId, page: $page, limit: $limit, sortBy: $sortBy) {\\n    totalCount\\n    list {\\n      code\\n      name\\n      description\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n}\\n    \";\nexport var IsActionAllowedDocument = \"\\n    query isActionAllowed($resource: String!, $action: String!, $userId: String!, $namespace: String) {\\n  isActionAllowed(resource: $resource, action: $action, userId: $userId, namespace: $namespace)\\n}\\n    \";\nexport var IsActionDeniedDocument = \"\\n    query isActionDenied($resource: String!, $action: String!, $userId: String!) {\\n  isActionDenied(resource: $resource, action: $action, userId: $userId)\\n}\\n    \";\nexport var IsDomainAvaliableDocument = \"\\n    query isDomainAvaliable($domain: String!) {\\n  isDomainAvaliable(domain: $domain)\\n}\\n    \";\nexport var IsRootNodeDocument = \"\\n    query isRootNode($nodeId: String!, $orgId: String!) {\\n  isRootNode(nodeId: $nodeId, orgId: $orgId)\\n}\\n    \";\nexport var IsUserExistsDocument = \"\\n    query isUserExists($email: String, $phone: String, $username: String, $externalId: String) {\\n  isUserExists(email: $email, phone: $phone, username: $username, externalId: $externalId)\\n}\\n    \";\nexport var AuthorizedResourcesDocument = \"\\n    query authorizedResources($targetType: PolicyAssignmentTargetType, $targetIdentifier: String, $namespace: String, $resourceType: String) {\\n  authorizedResources(targetType: $targetType, targetIdentifier: $targetIdentifier, namespace: $namespace, resourceType: $resourceType) {\\n    totalCount\\n    list {\\n      code\\n      type\\n      actions\\n      apiIdentifier\\n    }\\n  }\\n}\\n    \";\nexport var ListGroupAuthorizedResourcesDocument = \"\\n    query listGroupAuthorizedResources($code: String!, $namespace: String, $resourceType: String) {\\n  group(code: $code) {\\n    authorizedResources(namespace: $namespace, resourceType: $resourceType) {\\n      totalCount\\n      list {\\n        code\\n        type\\n        actions\\n        apiIdentifier\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var ListNodeByCodeAuthorizedResourcesDocument = \"\\n    query listNodeByCodeAuthorizedResources($orgId: String!, $code: String!, $namespace: String, $resourceType: String) {\\n  nodeByCode(orgId: $orgId, code: $code) {\\n    authorizedResources(namespace: $namespace, resourceType: $resourceType) {\\n      totalCount\\n      list {\\n        code\\n        type\\n        actions\\n        apiIdentifier\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var ListNodeByIdAuthorizedResourcesDocument = \"\\n    query listNodeByIdAuthorizedResources($id: String!, $namespace: String, $resourceType: String) {\\n  nodeById(id: $id) {\\n    authorizedResources(namespace: $namespace, resourceType: $resourceType) {\\n      totalCount\\n      list {\\n        code\\n        type\\n        actions\\n        apiIdentifier\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var ListRoleAuthorizedResourcesDocument = \"\\n    query listRoleAuthorizedResources($code: String!, $namespace: String, $resourceType: String) {\\n  role(code: $code, namespace: $namespace) {\\n    authorizedResources(resourceType: $resourceType) {\\n      totalCount\\n      list {\\n        code\\n        type\\n        actions\\n        apiIdentifier\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var ListUserAuthorizedResourcesDocument = \"\\n    query listUserAuthorizedResources($id: String!, $namespace: String, $resourceType: String) {\\n  user(id: $id) {\\n    authorizedResources(namespace: $namespace, resourceType: $resourceType) {\\n      totalCount\\n      list {\\n        code\\n        type\\n        actions\\n        apiIdentifier\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var NodeByCodeDocument = \"\\n    query nodeByCode($orgId: String!, $code: String!) {\\n  nodeByCode(orgId: $orgId, code: $code) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    createdAt\\n    updatedAt\\n    children\\n  }\\n}\\n    \";\nexport var NodeByCodeWithMembersDocument = \"\\n    query nodeByCodeWithMembers($page: Int, $limit: Int, $sortBy: SortByEnum, $includeChildrenNodes: Boolean, $orgId: String!, $code: String!) {\\n  nodeByCode(orgId: $orgId, code: $code) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    createdAt\\n    updatedAt\\n    children\\n    users(page: $page, limit: $limit, sortBy: $sortBy, includeChildrenNodes: $includeChildrenNodes) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        userPoolId\\n        status\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var NodeByIdDocument = \"\\n    query nodeById($id: String!) {\\n  nodeById(id: $id) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    createdAt\\n    updatedAt\\n    children\\n  }\\n}\\n    \";\nexport var NodeByIdWithMembersDocument = \"\\n    query nodeByIdWithMembers($page: Int, $limit: Int, $sortBy: SortByEnum, $includeChildrenNodes: Boolean, $id: String!) {\\n  nodeById(id: $id) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    createdAt\\n    updatedAt\\n    children\\n    users(page: $page, limit: $limit, sortBy: $sortBy, includeChildrenNodes: $includeChildrenNodes) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        userPoolId\\n        status\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var OrgDocument = \"\\n    query org($id: String!) {\\n  org(id: $id) {\\n    id\\n    rootNode {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n    nodes {\\n      id\\n      orgId\\n      name\\n      nameI18n\\n      description\\n      descriptionI18n\\n      order\\n      code\\n      root\\n      depth\\n      path\\n      createdAt\\n      updatedAt\\n      children\\n    }\\n  }\\n}\\n    \";\nexport var OrgsDocument = \"\\n    query orgs($page: Int, $limit: Int, $sortBy: SortByEnum) {\\n  orgs(page: $page, limit: $limit, sortBy: $sortBy) {\\n    totalCount\\n    list {\\n      id\\n      rootNode {\\n        id\\n        name\\n        nameI18n\\n        path\\n        description\\n        descriptionI18n\\n        order\\n        code\\n        root\\n        depth\\n        createdAt\\n        updatedAt\\n        children\\n      }\\n      nodes {\\n        id\\n        name\\n        path\\n        nameI18n\\n        description\\n        descriptionI18n\\n        order\\n        code\\n        root\\n        depth\\n        createdAt\\n        updatedAt\\n        children\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var PoliciesDocument = \"\\n    query policies($page: Int, $limit: Int, $namespace: String) {\\n  policies(page: $page, limit: $limit, namespace: $namespace) {\\n    totalCount\\n    list {\\n      namespace\\n      code\\n      description\\n      createdAt\\n      updatedAt\\n      statements {\\n        resource\\n        actions\\n        effect\\n        condition {\\n          param\\n          operator\\n          value\\n        }\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var PolicyDocument = \"\\n    query policy($namespace: String, $code: String!) {\\n  policy(code: $code, namespace: $namespace) {\\n    namespace\\n    code\\n    isDefault\\n    description\\n    statements {\\n      resource\\n      actions\\n      effect\\n      condition {\\n        param\\n        operator\\n        value\\n      }\\n    }\\n    createdAt\\n    updatedAt\\n  }\\n}\\n    \";\nexport var PolicyAssignmentsDocument = \"\\n    query policyAssignments($namespace: String, $code: String, $targetType: PolicyAssignmentTargetType, $targetIdentifier: String, $page: Int, $limit: Int) {\\n  policyAssignments(namespace: $namespace, code: $code, targetType: $targetType, targetIdentifier: $targetIdentifier, page: $page, limit: $limit) {\\n    totalCount\\n    list {\\n      code\\n      targetType\\n      targetIdentifier\\n    }\\n  }\\n}\\n    \";\nexport var PolicyWithAssignmentsDocument = \"\\n    query policyWithAssignments($page: Int, $limit: Int, $code: String!) {\\n  policy(code: $code) {\\n    code\\n    isDefault\\n    description\\n    statements {\\n      resource\\n      actions\\n      effect\\n    }\\n    createdAt\\n    updatedAt\\n    assignmentsCount\\n    assignments(page: $page, limit: $limit) {\\n      code\\n      targetType\\n      targetIdentifier\\n    }\\n  }\\n}\\n    \";\nexport var PreviewEmailDocument = \"\\n    query previewEmail($type: EmailTemplateType!) {\\n  previewEmail(type: $type)\\n}\\n    \";\nexport var QiniuUptokenDocument = \"\\n    query qiniuUptoken($type: String) {\\n  qiniuUptoken(type: $type)\\n}\\n    \";\nexport var QueryMfaDocument = \"\\n    query queryMfa($id: String, $userId: String, $userPoolId: String) {\\n  queryMfa(id: $id, userId: $userId, userPoolId: $userPoolId) {\\n    id\\n    userId\\n    userPoolId\\n    enable\\n    secret\\n  }\\n}\\n    \";\nexport var RoleDocument = \"\\n    query role($code: String!, $namespace: String) {\\n  role(code: $code, namespace: $namespace) {\\n    id\\n    namespace\\n    code\\n    arn\\n    description\\n    createdAt\\n    updatedAt\\n    parent {\\n      namespace\\n      code\\n      arn\\n      description\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n}\\n    \";\nexport var RoleWithUsersDocument = \"\\n    query roleWithUsers($code: String!, $namespace: String, $page: Int, $limit: Int) {\\n  role(code: $code, namespace: $namespace) {\\n    users(page: $page, limit: $limit) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        status\\n        userPoolId\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var RoleWithUsersWithCustomDataDocument = \"\\n    query roleWithUsersWithCustomData($code: String!, $namespace: String, $page: Int, $limit: Int) {\\n  role(code: $code, namespace: $namespace) {\\n    users(page: $page, limit: $limit) {\\n      totalCount\\n      list {\\n        id\\n        arn\\n        status\\n        userPoolId\\n        username\\n        email\\n        emailVerified\\n        phone\\n        phoneVerified\\n        unionid\\n        openid\\n        nickname\\n        registerSource\\n        photo\\n        password\\n        oauth\\n        token\\n        tokenExpiredAt\\n        loginsCount\\n        lastLogin\\n        lastIP\\n        signedUp\\n        blocked\\n        isDeleted\\n        device\\n        browser\\n        company\\n        name\\n        givenName\\n        familyName\\n        middleName\\n        profile\\n        preferredUsername\\n        website\\n        gender\\n        birthdate\\n        zoneinfo\\n        locale\\n        address\\n        formatted\\n        streetAddress\\n        locality\\n        region\\n        postalCode\\n        city\\n        province\\n        country\\n        createdAt\\n        updatedAt\\n        externalId\\n        phoneCountryCode\\n        customData {\\n          key\\n          value\\n          dataType\\n          label\\n        }\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var RolesDocument = \"\\n    query roles($namespace: String, $page: Int, $limit: Int, $sortBy: SortByEnum) {\\n  roles(namespace: $namespace, page: $page, limit: $limit, sortBy: $sortBy) {\\n    totalCount\\n    list {\\n      id\\n      namespace\\n      code\\n      arn\\n      description\\n      createdAt\\n      updatedAt\\n    }\\n  }\\n}\\n    \";\nexport var RootNodeDocument = \"\\n    query rootNode($orgId: String!) {\\n  rootNode(orgId: $orgId) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    codePath\\n    namePath\\n    createdAt\\n    updatedAt\\n    children\\n  }\\n}\\n    \";\nexport var SearchNodesDocument = \"\\n    query searchNodes($keyword: String!) {\\n  searchNodes(keyword: $keyword) {\\n    id\\n    orgId\\n    name\\n    nameI18n\\n    description\\n    descriptionI18n\\n    order\\n    code\\n    root\\n    depth\\n    path\\n    codePath\\n    namePath\\n    createdAt\\n    updatedAt\\n    children\\n  }\\n}\\n    \";\nexport var SearchUserDocument = \"\\n    query searchUser($query: String!, $fields: [String], $page: Int, $limit: Int, $departmentOpts: [SearchUserDepartmentOpt], $groupOpts: [SearchUserGroupOpt], $roleOpts: [SearchUserRoleOpt]) {\\n  searchUser(query: $query, fields: $fields, page: $page, limit: $limit, departmentOpts: $departmentOpts, groupOpts: $groupOpts, roleOpts: $roleOpts) {\\n    totalCount\\n    list {\\n      id\\n      arn\\n      userPoolId\\n      status\\n      username\\n      email\\n      emailVerified\\n      phone\\n      phoneVerified\\n      unionid\\n      openid\\n      nickname\\n      registerSource\\n      photo\\n      password\\n      oauth\\n      token\\n      tokenExpiredAt\\n      loginsCount\\n      lastLogin\\n      lastIP\\n      signedUp\\n      blocked\\n      isDeleted\\n      device\\n      browser\\n      company\\n      name\\n      givenName\\n      familyName\\n      middleName\\n      profile\\n      preferredUsername\\n      website\\n      gender\\n      birthdate\\n      zoneinfo\\n      locale\\n      address\\n      formatted\\n      streetAddress\\n      locality\\n      region\\n      postalCode\\n      city\\n      province\\n      country\\n      createdAt\\n      updatedAt\\n      externalId\\n      phoneCountryCode\\n    }\\n  }\\n}\\n    \";\nexport var SearchUserWithCustomDataDocument = \"\\n    query searchUserWithCustomData($query: String!, $fields: [String], $page: Int, $limit: Int, $departmentOpts: [SearchUserDepartmentOpt], $groupOpts: [SearchUserGroupOpt], $roleOpts: [SearchUserRoleOpt]) {\\n  searchUser(query: $query, fields: $fields, page: $page, limit: $limit, departmentOpts: $departmentOpts, groupOpts: $groupOpts, roleOpts: $roleOpts) {\\n    totalCount\\n    list {\\n      id\\n      arn\\n      userPoolId\\n      status\\n      username\\n      email\\n      emailVerified\\n      phone\\n      phoneVerified\\n      unionid\\n      openid\\n      nickname\\n      registerSource\\n      photo\\n      password\\n      oauth\\n      token\\n      tokenExpiredAt\\n      loginsCount\\n      lastLogin\\n      lastIP\\n      signedUp\\n      blocked\\n      isDeleted\\n      device\\n      browser\\n      company\\n      name\\n      givenName\\n      familyName\\n      middleName\\n      profile\\n      preferredUsername\\n      website\\n      gender\\n      birthdate\\n      zoneinfo\\n      locale\\n      address\\n      formatted\\n      streetAddress\\n      locality\\n      region\\n      postalCode\\n      city\\n      province\\n      country\\n      createdAt\\n      updatedAt\\n      externalId\\n      phoneCountryCode\\n      customData {\\n        key\\n        value\\n        dataType\\n        label\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var TemplateCodeDocument = \"\\n    query templateCode {\\n  templateCode\\n}\\n    \";\nexport var UdfDocument = \"\\n    query udf($targetType: UDFTargetType!) {\\n  udf(targetType: $targetType) {\\n    targetType\\n    dataType\\n    key\\n    label\\n    options\\n  }\\n}\\n    \";\nexport var UdfValueBatchDocument = \"\\n    query udfValueBatch($targetType: UDFTargetType!, $targetIds: [String!]!) {\\n  udfValueBatch(targetType: $targetType, targetIds: $targetIds) {\\n    targetId\\n    data {\\n      key\\n      dataType\\n      value\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var UdvDocument = \"\\n    query udv($targetType: UDFTargetType!, $targetId: String!) {\\n  udv(targetType: $targetType, targetId: $targetId) {\\n    key\\n    dataType\\n    value\\n    label\\n  }\\n}\\n    \";\nexport var UserDocument = \"\\n    query user($id: String) {\\n  user(id: $id) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    identities {\\n      openid\\n      userIdInIdp\\n      userId\\n      connectionId\\n      isSocial\\n      provider\\n      type\\n      userPoolId\\n      extIdpId\\n    }\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var UserBatchDocument = \"\\n    query userBatch($ids: [String!]!, $type: String) {\\n  userBatch(ids: $ids, type: $type) {\\n    identities {\\n      openid\\n      userIdInIdp\\n      userId\\n      connectionId\\n      isSocial\\n      provider\\n      type\\n      userPoolId\\n      extIdpId\\n    }\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n  }\\n}\\n    \";\nexport var UserBatchWithCustomDataDocument = \"\\n    query userBatchWithCustomData($ids: [String!]!, $type: String) {\\n  userBatch(ids: $ids, type: $type) {\\n    identities {\\n      openid\\n      userIdInIdp\\n      userId\\n      connectionId\\n      isSocial\\n      provider\\n      type\\n      userPoolId\\n      extIdpId\\n    }\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var UserWithCustomDataDocument = \"\\n    query userWithCustomData($id: String) {\\n  user(id: $id) {\\n    id\\n    arn\\n    userPoolId\\n    status\\n    username\\n    email\\n    emailVerified\\n    phone\\n    phoneVerified\\n    identities {\\n      openid\\n      userIdInIdp\\n      userId\\n      connectionId\\n      isSocial\\n      provider\\n      userPoolId\\n      extIdpId\\n    }\\n    unionid\\n    openid\\n    nickname\\n    registerSource\\n    photo\\n    password\\n    oauth\\n    token\\n    tokenExpiredAt\\n    loginsCount\\n    lastLogin\\n    lastIP\\n    signedUp\\n    blocked\\n    isDeleted\\n    device\\n    browser\\n    company\\n    name\\n    givenName\\n    familyName\\n    middleName\\n    profile\\n    preferredUsername\\n    website\\n    gender\\n    birthdate\\n    zoneinfo\\n    locale\\n    address\\n    formatted\\n    streetAddress\\n    locality\\n    region\\n    postalCode\\n    city\\n    province\\n    country\\n    createdAt\\n    updatedAt\\n    externalId\\n    phoneCountryCode\\n    customData {\\n      key\\n      value\\n      dataType\\n      label\\n    }\\n  }\\n}\\n    \";\nexport var UserpoolDocument = \"\\n    query userpool {\\n  userpool {\\n    id\\n    name\\n    domain\\n    description\\n    secret\\n    jwtSecret\\n    ownerId\\n    userpoolTypes {\\n      code\\n      name\\n      description\\n      image\\n      sdks\\n    }\\n    logo\\n    createdAt\\n    updatedAt\\n    emailVerifiedDefault\\n    sendWelcomeEmail\\n    registerDisabled\\n    appSsoEnabled\\n    showWxQRCodeWhenRegisterDisabled\\n    allowedOrigins\\n    tokenExpiresAfter\\n    isDeleted\\n    frequentRegisterCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    loginFailCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    loginPasswordFailCheck {\\n      timeInterval\\n      limit\\n      enabled\\n    }\\n    loginFailStrategy\\n    changePhoneStrategy {\\n      verifyOldPhone\\n    }\\n    changeEmailStrategy {\\n      verifyOldEmail\\n    }\\n    qrcodeLoginStrategy {\\n      qrcodeExpiresAfter\\n      returnFullUserInfo\\n      allowExchangeUserInfoFromBrowser\\n      ticketExpiresAfter\\n    }\\n    app2WxappLoginStrategy {\\n      ticketExpriresAfter\\n      ticketExchangeUserInfoNeedSecret\\n    }\\n    whitelist {\\n      phoneEnabled\\n      emailEnabled\\n      usernameEnabled\\n    }\\n    customSMSProvider {\\n      enabled\\n      provider\\n      config\\n    }\\n    packageType\\n    useCustomUserStore\\n    loginRequireEmailVerified\\n    verifyCodeLength\\n    verifyCodeMaxAttempts\\n  }\\n}\\n    \";\nexport var UserpoolTypesDocument = \"\\n    query userpoolTypes {\\n  userpoolTypes {\\n    code\\n    name\\n    description\\n    image\\n    sdks\\n  }\\n}\\n    \";\nexport var UserpoolsDocument = \"\\n    query userpools($page: Int, $limit: Int, $sortBy: SortByEnum) {\\n  userpools(page: $page, limit: $limit, sortBy: $sortBy) {\\n    totalCount\\n    list {\\n      id\\n      name\\n      domain\\n      ownerId\\n      description\\n      secret\\n      jwtSecret\\n      logo\\n      createdAt\\n      updatedAt\\n      emailVerifiedDefault\\n      sendWelcomeEmail\\n      registerDisabled\\n      appSsoEnabled\\n      showWxQRCodeWhenRegisterDisabled\\n      allowedOrigins\\n      tokenExpiresAfter\\n      isDeleted\\n      packageType\\n      useCustomUserStore\\n      loginRequireEmailVerified\\n      verifyCodeLength\\n      verifyCodeMaxAttempts\\n    }\\n  }\\n}\\n    \";\nexport var UsersDocument = \"\\n    query users($page: Int, $limit: Int, $sortBy: SortByEnum, $excludeUsersInOrg: Boolean) {\\n  users(page: $page, limit: $limit, sortBy: $sortBy, excludeUsersInOrg: $excludeUsersInOrg) {\\n    totalCount\\n    list {\\n      identities {\\n        openid\\n        userIdInIdp\\n        userId\\n        connectionId\\n        isSocial\\n        provider\\n        type\\n        userPoolId\\n        extIdpId\\n      }\\n      id\\n      arn\\n      userPoolId\\n      status\\n      username\\n      email\\n      emailVerified\\n      phone\\n      phoneVerified\\n      unionid\\n      openid\\n      nickname\\n      registerSource\\n      photo\\n      password\\n      oauth\\n      token\\n      tokenExpiredAt\\n      loginsCount\\n      lastLogin\\n      lastIP\\n      signedUp\\n      blocked\\n      isDeleted\\n      device\\n      browser\\n      company\\n      name\\n      givenName\\n      familyName\\n      middleName\\n      profile\\n      preferredUsername\\n      website\\n      gender\\n      birthdate\\n      zoneinfo\\n      locale\\n      address\\n      formatted\\n      streetAddress\\n      locality\\n      region\\n      postalCode\\n      city\\n      province\\n      country\\n      createdAt\\n      updatedAt\\n      externalId\\n      phoneCountryCode\\n    }\\n  }\\n}\\n    \";\nexport var UsersWithCustomDataDocument = \"\\n    query usersWithCustomData($page: Int, $limit: Int, $sortBy: SortByEnum, $excludeUsersInOrg: Boolean) {\\n  users(page: $page, limit: $limit, sortBy: $sortBy, excludeUsersInOrg: $excludeUsersInOrg) {\\n    totalCount\\n    list {\\n      id\\n      identities {\\n        openid\\n        userIdInIdp\\n        userId\\n        connectionId\\n        isSocial\\n        provider\\n        type\\n        userPoolId\\n        extIdpId\\n      }\\n      arn\\n      userPoolId\\n      status\\n      username\\n      email\\n      emailVerified\\n      phone\\n      phoneVerified\\n      unionid\\n      openid\\n      nickname\\n      registerSource\\n      photo\\n      password\\n      oauth\\n      token\\n      tokenExpiredAt\\n      loginsCount\\n      lastLogin\\n      lastIP\\n      signedUp\\n      blocked\\n      isDeleted\\n      device\\n      browser\\n      company\\n      name\\n      givenName\\n      familyName\\n      middleName\\n      profile\\n      preferredUsername\\n      website\\n      gender\\n      birthdate\\n      zoneinfo\\n      locale\\n      address\\n      formatted\\n      streetAddress\\n      locality\\n      region\\n      postalCode\\n      city\\n      province\\n      country\\n      createdAt\\n      updatedAt\\n      externalId\\n      phoneCountryCode\\n      customData {\\n        key\\n        value\\n        dataType\\n        label\\n      }\\n    }\\n  }\\n}\\n    \";\nexport var WhitelistDocument = \"\\n    query whitelist($type: WhitelistType!) {\\n  whitelist(type: $type) {\\n    createdAt\\n    updatedAt\\n    value\\n  }\\n}\\n    \";\n//# sourceMappingURL=graphql.v2.js.map"]},"metadata":{},"sourceType":"module"}